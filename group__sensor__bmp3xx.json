{
  "version": "1.14.0",
  "compound": {
    "kind": "group",
    "id": "group__sensor__bmp3xx",
    "name": "Bosch BMP3xx",
    "url_base": "group__sensor__bmp3xx",
    "url": "group__sensor__bmp3xx.html",
    "include": null,
    "has_template_details": false,
    "templates": null,
    "brief": "",
    "description": "<p>Classes for the Bosch BMP388 and BMP390 pressure sensors.</p><section id=\"sensor_bmp3xx_intro\"><h2>Introduction</h2><blockquote><p>The BMP390 is a digital sensor with pressure and temperature measurement based on proven sensing principles. The sensor module is housed in an extremely compact 10-pin metal-lid LGA package with a footprint of only 2.0 \u00d7 2.0 mm\u00b2 and max 0.8 mm package height. Its small dimensions and its low power consumption of 3.2 \u03bcA @1Hz allow the implementation in battery driven devices such as mobile phones, GPS modules or watches.</p></blockquote><p>The BMP390 replaces the BMP388 and is nearly identical in specs and communication.</p><p>Although this sensor has the option of either I2C or SPI communication, this library only supports I2C. The I2C address is either 0x77 or 0x76. To connect two of these sensors to your system, you must ensure they are soldered so as to have different I2C addresses. No more than two can be attached. These sensors should be attached to a 1.7-3.6V power source and the power supply to the sensor can be stopped between measurements.</p><p><a href=\"https://github.com/MartinL1/BMP388_DEV\">MartinL1&#x27;s BMP388 library</a> is used internally for communication with the BMP3xx. MartinL1&#x27;s library was selected over the <a href=\"https://github.com/adafruit/Adafruit_BMP3XX\">Adafruit library</a> because it allows non-blocking operation in both normal and forced modes. It also provides many enums to help ensure correct value inputs</p><aside class=\"m-note m-danger\"><h4>Warning</h4><p>The I2C addresses used by the BMP3xx are the same as those of the BME280 and the MS5803! If you are also using one of those sensors, make sure that the address for that sensor does not conflict with the address of this sensor.</p></aside><aside class=\"m-note m-info\"><h4>Note</h4><p>Neither secondary hardware nor software I2C is supported for the BMP3xx. Only the primary hardware I2C defined in the Arduino core can be used.</p></aside></section><section id=\"sensor_bmp3xx_filters\"><h2>Bosch Recommended Oversample and Filter Settings</h2><section id=\"sensor_bmp3xx_pressure_osr\"><h3>Recommended Pressure Oversampling</h3><p>Recommended settings pressure oversampling (adapted from table 6 of the <a href=\"https://github.com/EnviroDIY/ModularSensors/wiki/Sensor-Datasheets/Bosch-BMP390-Datasheet.pdf\">datasheet</a>)</p><table class=\"m-table m-fullwidth m-flat\"><thead><tr><th>Oversampling setting</th><th>Pressure oversampling</th><th>Typical pressure resolution</th><th>Recommended temperature oversampling</th><th>Measurement Time (typ., \u00b5sec)</th></tr></thead><tbody><tr><td>Ultra low power</td><td>\u00d71</td><td>16 bit / 2.64 Pa</td><td>\u00d71</td><td>6849</td></tr><tr><td>Low power</td><td>\u00d72</td><td>17 bit / 1.32 Pa</td><td>\u00d71</td><td>8869</td></tr><tr><td>Standard resolution</td><td>\u00d74</td><td>18 bit / 0.66 Pa</td><td>\u00d71</td><td>12909</td></tr><tr><td>High resolution</td><td>\u00d78</td><td>19 bit / 0.33 Pa</td><td>\u00d71</td><td>20989</td></tr><tr><td>Ultra high resolution</td><td>\u00d716</td><td>20 bit / 0.17 Pa</td><td>\u00d72</td><td>41189</td></tr><tr><td>Highest resolution</td><td>\u00d732</td><td>21 bit / 0.085 Pa</td><td>\u00d72</td><td>73509</td></tr></tbody></table></section><section id=\"sensor_bmp3xx_temp_osr\"><h3>Recommended Temperature Oversampling</h3><p>From section 3.4.2 of the <a href=\"https://github.com/EnviroDIY/ModularSensors/wiki/Sensor-Datasheets/Bosch-BMP390-Datasheet.pdf\">datasheet</a>:</p><blockquote><p>It is recommended to base the value of <em>osr_t</em> [temperature oversampling] on the selected value of <em>osrs_p</em> [pressure oversampling] as per Table 6. Temperature oversampling above x2 is possible, but will not significantly improve the accuracy of the pressure output any further. The reason for this is that the noise of the compensated pressure value depends more on the raw pressure than on the raw temperature noise. Following the recommended setting will result in an optimal noise to power ratio.</p></blockquote></section><section id=\"sensor_bmp3xx_filts_uses\"><h3>Settings by Use Case</h3><p>This is a modified version of Bosch&#x27;s recommendations for pressure and temperature oversampling, IIR filter coefficients, and output data rates for various applications. This appears as table 10 in the <a href=\"https://github.com/EnviroDIY/ModularSensors/wiki/Sensor-Datasheets/Bosch-BMP390-Datasheet.pdf\">datasheet</a>.</p><p>Table 10: Recommended filter settings based on use cases</p><table class=\"m-table m-fullwidth m-flat\"><thead><tr><th>Use case</th><th>Mode</th><th>Over-sampling setting</th><th>Pressure over-sampling</th><th>Temperature over-sampling</th><th>IIR filter coefficient</th><th>Standby Time (ms)</th><th>Output Data Rate (ODR) [Hz]</th><th>Current Consumption (I<sub>DD</sub>) [\u03bcA]</th><th>RMS Noise [cm]</th></tr></thead><tbody><tr><td>handheld device low-power (e.g. Android)</td><td>Normal</td><td>High resolution</td><td>x8</td><td>x1</td><td>2</td><td>80</td><td>12.5</td><td>145</td><td>11</td></tr><tr><td>handheld device dynamic (e.g. Android)</td><td>Normal</td><td>Standard resolution</td><td>x4</td><td>x1</td><td>4</td><td>20</td><td>50</td><td>310</td><td>10</td></tr><tr><td>Weather monitoring (lowest power)</td><td>Forced</td><td>Ultra low power</td><td>x1</td><td>x1</td><td>Off</td><td>N/A\u00b9</td><td>1/60</td><td>4</td><td>55</td></tr><tr><td>Drop detection</td><td>Normal</td><td>Low power</td><td>x2</td><td>x1</td><td>Off</td><td>10</td><td>100</td><td>358</td><td>36</td></tr><tr><td>Indoor navigation</td><td>Normal</td><td>Ultra high resolution</td><td>x16</td><td>x2</td><td>4</td><td>40</td><td>25</td><td>560</td><td>5</td></tr><tr><td>Drone</td><td>Normal</td><td>Standard resolution</td><td>x8</td><td>x1</td><td>2</td><td>20</td><td>50</td><td>570</td><td>11</td></tr><tr><td>Indoor localization</td><td>Normal</td><td>Ultra low power</td><td>x1</td><td>x1</td><td>4</td><td>640</td><td>1</td><td>-</td><td>-</td></tr></tbody></table><p>\u00b9 Standby time does not apply in forced mode</p></section></section><section id=\"sensor_bmp3xx_datasheet\"><h2>Sensor Datasheet</h2><p>Documentation for the BMP390 sensor can be found at: <a href=\"https://www.bosch-sensortec.com/products/environmental-sensors/pressure-sensors/bmp390/\">https:/<wbr />/<wbr />www.bosch-sensortec.com/<wbr />products/<wbr />environmental-sensors/<wbr />pressure-sensors/<wbr />bmp390/<wbr /></a></p><ul><li><a href=\"https://github.com/EnviroDIY/ModularSensors/wiki/Sensor-Datasheets/Bosch-BMP390-Datasheet.pdf\">BMP390 Datasheet</a></li><li><a href=\"https://github.com/EnviroDIY/ModularSensors/wiki/Sensor-Datasheets/Bosch-BMP388-Datasheet.pdf\">BMP388 Datasheet</a></li></ul></section><section id=\"sensor_bmp3xx_flags\"><h2>Build flags</h2><ul><li><code>-D SEALEVELPRESSURE_HPA</code><ul><li>use to adjust the sea level pressure used to calculate altitude from measured barometric pressure</li><li>if not defined, 1013.25 is used</li><li>The same sea level pressure flag is used for both the BMP3xx and the BME280. Whatever you select will be used for both sensors.</li></ul></li></ul></section><section id=\"sensor_bmp3xx_ctor\"><h2>Sensor Constructors</h2><p>{{ <a href=\"class_bosch_b_m_p3xx.html#ace944aed3d3db1349da1e21bce7e8a87\" class=\"m-doc\">BoschBMP3xx::<wbr />BoschBMP3xx(int8_t, Mode, Oversampling, Oversampling, IIRFilter, TimeStandby, uint8_t)</a> }}</p><hr/></section><section id=\"sensor_bmp3xx_examples\"><h2>Example Code</h2><p>The BMP3xx is used in the <a href=\"example_menu.html#menu_walk_bosch_bmp3xx\" class=\"m-doc\">menu a la carte</a> example.</p><div class=\"m-code-arduino\"><div class=\"highlight\"><div class=\"line\"><a id=\"l-1\" name=\"l-1\"></a><span class=\"linenos\"> 1</span><span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;sensors/BoschBMP3xx.h&gt;</span></div>\n<div class=\"line\"><a id=\"l-2\" name=\"l-2\"></a><span class=\"linenos\"> 2</span></div>\n<div class=\"line\"><a id=\"l-3\" name=\"l-3\"></a><span class=\"linenos\"> 3</span><span class=\"c1\">// NOTE: Use -1 for any pins that don&#39;t apply or aren&#39;t being used.</span></div>\n<div class=\"line\"><a id=\"l-4\" name=\"l-4\"></a><span class=\"linenos\"> 4</span><span class=\"kr\">const</span><span class=\"w\"> </span><span class=\"kr\">int8_t</span><span class=\"w\"> </span><span class=\"n\">bmp3xxPower</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">-1</span><span class=\"p\">;</span><span class=\"w\">  </span><span class=\"c1\">// Power pin</span></div>\n<div class=\"line\"><a id=\"l-5\" name=\"l-5\"></a><span class=\"linenos\"> 5</span><span class=\"n\">Mode</span><span class=\"w\"> </span><span class=\"n\">bmpMode</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">FORCED_MODE</span><span class=\"p\">;</span><span class=\"w\">  </span><span class=\"c1\">// The operating mode of the BMP; normal or forced</span></div>\n<div class=\"line\"><a id=\"l-6\" name=\"l-6\"></a><span class=\"linenos\"> 6</span><span class=\"n\">Oversampling</span><span class=\"w\"> </span><span class=\"n\">bmpPressureOversample</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">OVERSAMPLING_X32</span><span class=\"p\">;</span></div>\n<div class=\"line\"><a id=\"l-7\" name=\"l-7\"></a><span class=\"linenos\"> 7</span><span class=\"n\">Oversampling</span><span class=\"w\"> </span><span class=\"n\">bmpTempOversample</span><span class=\"w\">     </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">OVERSAMPLING_X2</span><span class=\"p\">;</span></div>\n<div class=\"line\"><a id=\"l-8\" name=\"l-8\"></a><span class=\"linenos\"> 8</span><span class=\"n\">IIRFilter</span><span class=\"w\">    </span><span class=\"n\">bmpFilterCoeff</span><span class=\"w\">        </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">IIR_FILTER_OFF</span><span class=\"p\">;</span></div>\n<div class=\"line\"><a id=\"l-9\" name=\"l-9\"></a><span class=\"linenos\"> 9</span><span class=\"n\">TimeStandby</span><span class=\"w\">  </span><span class=\"n\">bmpTimeStandby</span><span class=\"w\">        </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">TIME_STANDBY_5MS</span><span class=\"p\">;</span></div>\n<div class=\"line\"><a id=\"l-10\" name=\"l-10\"></a><span class=\"linenos\">10</span><span class=\"kr\">uint8_t</span><span class=\"w\">      </span><span class=\"n\">bmpI2C_addr</span><span class=\"w\">           </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mh\">0x77</span><span class=\"p\">;</span></div>\n<div class=\"line\"><a id=\"l-11\" name=\"l-11\"></a><span class=\"linenos\">11</span><span class=\"c1\">// The BMP3xx can be addressed either as 0x77 or 0x76</span></div>\n<div class=\"line\"><a id=\"l-12\" name=\"l-12\"></a><span class=\"linenos\">12</span></div>\n<div class=\"line\"><a id=\"l-13\" name=\"l-13\"></a><span class=\"linenos\">13</span><span class=\"c1\">// Create a Bosch BMP3xx sensor object</span></div>\n<div class=\"line\"><a id=\"l-14\" name=\"l-14\"></a><span class=\"linenos\">14</span><span class=\"n\">BoschBMP3xx</span><span class=\"w\"> </span><span class=\"nf\">bmp3xx</span><span class=\"p\">(</span><span class=\"n\">bmp3xxPower</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">bmpMode</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">bmpPressureOversample</span><span class=\"p\">,</span></div>\n<div class=\"line\"><a id=\"l-15\" name=\"l-15\"></a><span class=\"linenos\">15</span><span class=\"w\">                   </span><span class=\"n\">bmpTempOversample</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">bmpFilterCoeff</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">bmpTimeStandby</span><span class=\"p\">,</span></div>\n<div class=\"line\"><a id=\"l-16\" name=\"l-16\"></a><span class=\"linenos\">16</span><span class=\"w\">                   </span><span class=\"n\">bmpI2C_addr</span><span class=\"p\">);</span></div>\n<div class=\"line\"><a id=\"l-17\" name=\"l-17\"></a><span class=\"linenos\">17</span></div>\n<div class=\"line\"><a id=\"l-18\" name=\"l-18\"></a><span class=\"linenos\">18</span><span class=\"c1\">// Create the variable pointers for the BMP3xx</span></div>\n<div class=\"line\"><a id=\"l-19\" name=\"l-19\"></a><span class=\"linenos\">19</span><span class=\"n\">Variable</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">bmp3xxTemp</span><span class=\"w\"> </span><span class=\"o\">=</span></div>\n<div class=\"line\"><a id=\"l-20\" name=\"l-20\"></a><span class=\"linenos\">20</span><span class=\"w\">    </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">BoschBMP3xx_Temp</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">bmp3xx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">&quot;12345678-abcd-1234-ef00-1234567890ab&quot;</span><span class=\"p\">);</span></div>\n<div class=\"line\"><a id=\"l-21\" name=\"l-21\"></a><span class=\"linenos\">21</span><span class=\"n\">Variable</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">bmp3xxPress</span><span class=\"w\"> </span><span class=\"o\">=</span></div>\n<div class=\"line\"><a id=\"l-22\" name=\"l-22\"></a><span class=\"linenos\">22</span><span class=\"w\">    </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">BoschBMP3xx_Pressure</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">bmp3xx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">&quot;12345678-abcd-1234-ef00-1234567890ab&quot;</span><span class=\"p\">);</span></div>\n<div class=\"line\"><a id=\"l-23\" name=\"l-23\"></a><span class=\"linenos\">23</span><span class=\"n\">Variable</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">bmp3xxAlt</span><span class=\"w\"> </span><span class=\"o\">=</span></div>\n<div class=\"line\"><a id=\"l-24\" name=\"l-24\"></a><span class=\"linenos\">24</span><span class=\"w\">    </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">BoschBMP3xx_Altitude</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">bmp3xx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">&quot;12345678-abcd-1234-ef00-1234567890ab&quot;</span><span class=\"p\">);</span>\n</div></div></div></section>",
    "sections": [
      [
        "sensor_bmp3xx_intro",
        "Introduction",
        []
      ],
      [
        "sensor_bmp3xx_filters",
        "Bosch Recommended Oversample and Filter Settings",
        [
          [
            "sensor_bmp3xx_pressure_osr",
            "Recommended Pressure Oversampling",
            []
          ],
          [
            "sensor_bmp3xx_temp_osr",
            "Recommended Temperature Oversampling",
            []
          ],
          [
            "sensor_bmp3xx_filts_uses",
            "Settings by Use Case",
            []
          ]
        ]
      ],
      [
        "sensor_bmp3xx_datasheet",
        "Sensor Datasheet",
        []
      ],
      [
        "sensor_bmp3xx_flags",
        "Build flags",
        []
      ],
      [
        "sensor_bmp3xx_ctor",
        "Sensor Constructors",
        []
      ],
      [
        "sensor_bmp3xx_examples",
        "Example Code",
        []
      ]
    ],
    "deprecated": null,
    "since": null,
    "example_navigation": null,
    "footer_navigation": null,
    "topics": [],
    "dirs": [],
    "files": [],
    "namespaces": [],
    "classes": [
      {
        "kind": "class",
        "url": "class_bosch_b_m_p3xx.html",
        "name": "BoschBMP3xx",
        "brief": "The <a href=\"class_sensor.html\" class=\"m-doc\">Sensor</a> sub-class for the <a href=\"group__sensor__bmp3xx.html\" class=\"m-doc\">Bosch BMP3xx</a>.",
        "deprecated": null,
        "since": null,
        "templates": null
      },
      {
        "kind": "class",
        "url": "class_bosch_b_m_p3xx___temp.html",
        "name": "BoschBMP3xx_Temp",
        "brief": "The <a href=\"class_variable.html\" class=\"m-doc\">Variable</a> sub-class used for the <a href=\"group__sensor__bmp3xx.html#sensor_bmp3xx_temp\" class=\"m-doc\">temperature output</a> from a <a href=\"group__sensor__bmp3xx.html\" class=\"m-doc\">Bosch BMP3xx</a>.",
        "deprecated": null,
        "since": null,
        "templates": null
      },
      {
        "kind": "class",
        "url": "class_bosch_b_m_p3xx___pressure.html",
        "name": "BoschBMP3xx_Pressure",
        "brief": "The <a href=\"class_variable.html\" class=\"m-doc\">Variable</a> sub-class used for the <a href=\"group__sensor__bmp3xx.html#sensor_bmp3xx_pressure\" class=\"m-doc\">atmospheric pressure output</a> from a <a href=\"group__sensor__bmp3xx.html\" class=\"m-doc\">Bosch BMP3xx</a>.",
        "deprecated": null,
        "since": null,
        "templates": null
      },
      {
        "kind": "class",
        "url": "class_bosch_b_m_p3xx___altitude.html",
        "name": "BoschBMP3xx_Altitude",
        "brief": "The <a href=\"class_variable.html\" class=\"m-doc\">Variable</a> sub-class used for the <a href=\"group__sensor__bmp3xx.html#sensor_bmp3xx_altitude\" class=\"m-doc\">altitude</a> calculated from the measurements made by a <a href=\"group__sensor__bmp3xx.html\" class=\"m-doc\">Bosch BMP3xx</a>.",
        "deprecated": null,
        "since": null,
        "templates": null
      }
    ],
    "base_classes": [],
    "derived_classes": [],
    "enums": [],
    "typedefs": [],
    "funcs": [],
    "vars": [],
    "defines": [],
    "public_types": [],
    "public_static_funcs": [],
    "typeless_funcs": [],
    "public_funcs": [],
    "signals": [],
    "public_slots": [],
    "public_static_vars": [],
    "public_vars": [],
    "protected_types": [],
    "protected_static_funcs": [],
    "protected_funcs": [],
    "protected_slots": [],
    "protected_static_vars": [],
    "protected_vars": [],
    "private_funcs": [],
    "private_slots": [],
    "related": [],
    "friend_funcs": [],
    "groups": [
      {
        "name": "Sensor Variable Counts",
        "id": "sensor-variable-counts",
        "description": "<p><a name=\"sensor_bmp3xx_var_counts\"></a> The number of variables that can be returned by Bosch BMP3xx</p>",
        "members": [
          [
            "define",
            {
              "base_url": "group__sensor__bmp3xx.html",
              "id": "gac5057cb49ffb96b4a87d00644c237975",
              "include": [
                "&lt;src/sensors/BoschBMP3xx.h&gt;",
                "_bosch_b_m_p3xx_8h.html"
              ],
              "has_details": true,
              "name": "BMP3XX_NUM_VARIABLES",
              "initializer": "3",
              "brief": "<a href=\"class_sensor.html#af26786329fd01b44cf31410d046fc8f3\" class=\"m-doc\">Sensor::<wbr />_numReturnedValues</a>; the BMP3xx can report 3 values.",
              "description": "",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ],
          [
            "define",
            {
              "base_url": "group__sensor__bmp3xx.html",
              "id": "ga928126ca8b1fc0c2985be277387eb6ef",
              "include": [
                "&lt;src/sensors/BoschBMP3xx.h&gt;",
                "_bosch_b_m_p3xx_8h.html"
              ],
              "has_details": true,
              "name": "BMP3XX_INC_CALC_VARIABLES",
              "initializer": "1",
              "brief": "<a href=\"class_sensor.html#a2f3f93a9205efb134cef1216d65077d2\" class=\"m-doc\">Sensor::<wbr />_incCalcValues</a>; altitude is calculated within the Adafruit library.",
              "description": "",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ]
        ]
      },
      {
        "name": "Configuration Defines",
        "id": "configuration-defines",
        "description": "<p><a name=\"sensor_bme3xx_config\"></a> Defines to set the calibration of the calculated base pressure used to calculate altitude by the BME3xx.</p>",
        "members": [
          [
            "define",
            {
              "base_url": "group__sensor__bmp3xx.html",
              "id": "ga3fd1be5675628ccdd1cd809ee995b2e7",
              "include": [
                "&lt;src/sensors/BoschBMP3xx.h&gt;",
                "_bosch_b_m_p3xx_8h.html"
              ],
              "has_details": true,
              "name": "SEALEVELPRESSURE_HPA",
              "initializer": "(1013.25)",
              "brief": "The atmospheric pressure at sea level.",
              "description": "",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ]
        ]
      },
      {
        "name": "Sensor Timing",
        "id": "sensor-timing",
        "description": "<p><a name=\"sensor_bmp3xx_timing\"></a> The sensor timing for a Bosch BMP3xx</p>",
        "members": [
          [
            "define",
            {
              "base_url": "group__sensor__bmp3xx.html",
              "id": "gaf5b4a7af82238df332499ef21c16e1b1",
              "include": [
                "&lt;src/sensors/BoschBMP3xx.h&gt;",
                "_bosch_b_m_p3xx_8h.html"
              ],
              "has_details": true,
              "name": "BMP3XX_WARM_UP_TIME_MS",
              "initializer": "3",
              "brief": "<a href=\"class_sensor.html#aaaefd7f306f86382a3dac726531756b4\" class=\"m-doc\">Sensor::<wbr />_warmUpTime_ms</a>; BMP3xx should be ready to communicate within 3ms.",
              "description": "<p>Time to first communication after both V<sub>DD</sub> &gt; 1.8 V and V<sub>DDIO</sub> &gt; 1.8 V is 2ms (max) for the BMP390. Power-on time from stand-by mode is 3 ms (max) for the BMP390. I don&#x27;t understand why it takes longer to be ready from stand-by than from power off, but we&#x27;ll use the larger number.</p>",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ],
          [
            "define",
            {
              "base_url": "group__sensor__bmp3xx.html",
              "id": "gafe8f2b8094c51a89f3d4af8addd4ce9b",
              "include": [
                "&lt;src/sensors/BoschBMP3xx.h&gt;",
                "_bosch_b_m_p3xx_8h.html"
              ],
              "has_details": true,
              "name": "BMP3XX_STABILIZATION_TIME_MS",
              "initializer": "4000",
              "brief": "<a href=\"class_sensor.html#ad6822ad09fb64658c911ce86820db79c\" class=\"m-doc\">Sensor::<wbr />_stabilizationTime_ms</a>; BMP3xx is stable after 4000ms.",
              "description": "<p>0.5 s for good numbers, but optimal at 4 s based on tests using bmp3xxtimingTest.ino</p>",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ],
          [
            "define",
            {
              "base_url": "group__sensor__bmp3xx.html",
              "id": "gaf6a0b7c536a95dd2d8e2eebb87da0996",
              "include": [
                "&lt;src/sensors/BoschBMP3xx.h&gt;",
                "_bosch_b_m_p3xx_8h.html"
              ],
              "has_details": true,
              "name": "BMP3XX_MEASUREMENT_TIME_MS",
              "initializer": "80",
              "brief": "<a href=\"class_sensor.html#a0327d79459eaf3065c9e84b8c789c4ba\" class=\"m-doc\">Sensor::<wbr />_measurementTime_ms</a>; The number given in this define will be recalculated and over-written in the set-up.",
              "description": "<p>The BMP390 takes 78.09ms (max) to complete a measurement at 32x pressure oversampling and 2x temperature oversampling. A measurement may take up to 138ms at 32x pressure and temperature oversampling, but oversampling rates above 2x for temperature are not recommended.</p><p>Following 3.9.2 of the datasheet:</p><blockquote><p>In both forced mode and normal mode the pressure and temperature measurement duration follow the equation:</p><p class=\"m-code m-math\">\\[T_{conv} = 234 \\mu s + pres\\_en \\times (392 \\mu s + 2^{osr\\_p} \\times 2020 \\mu s) + temp\\_en \\times (163 \\mu s + 2^{osr\\_t} \\times 2020 \\mu s)\\]</p><p>With:</p><ul><li><p class=\"m-code m-math\">$T_{conv}$</p> = total conversion time in \u03bcs</li><li><p class=\"m-code m-math\">$pres\\_en$</p> = &quot;0&quot; or &quot;1&quot;, depending of the status of the press_en bit</li><li><p class=\"m-code m-math\">$temp\\_en$</p> = &quot;0&quot; or &quot;1&quot;, depending of the status of the temp_en bit</li><li><p class=\"m-code m-math\">$osr\\_p$</p> = amount of pressure oversampling repetitions</li><li><p class=\"m-code m-math\">$osr\\_t$</p> = amount of temperature oversampling repetitions</li></ul></blockquote><p>Further, based on table 23 in the datasheet, there is up to a 18% difference between the &quot;typical&quot; measurement time (as given by the equation) and the maximum measurement time.</p><p>ModularSensors will always enable both pressure and temperature measurement and add an extra 18% wait to the calculated measurement time.</p>",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ]
        ]
      },
      {
        "name": "Temperature",
        "id": "temperature",
        "description": "<p><a name=\"sensor_bmp3xx_temp\"></a> The temperature variable from a Bosch BMP388 or BMP390</p><ul><li>Range is -40\u00b0C to +85\u00b0C<ul><li>Full accuracy between 0\u00b0C and +65\u00b0C</li></ul></li><li>Absolute accuracy is typ. \u00b1 0.5\u00b0C at 25\u00b0C<ul><li>\u00b1 1.5\u00b0C over 0\u00b0C to +65\u00b0C range</li></ul></li></ul><p>{{ <a href=\"class_bosch_b_m_p3xx___temp.html#a2f44c1bdd5463cc6f8cf765796aef8d4\" class=\"m-doc\">BoschBMP3xx_Temp::<wbr />BoschBMP3xx_Temp</a> }}</p>",
        "members": [
          [
            "define",
            {
              "base_url": "group__sensor__bmp3xx.html",
              "id": "ga7d194952b1ff9ba5f7b434fcb1f02e52",
              "include": [
                "&lt;src/sensors/BoschBMP3xx.h&gt;",
                "_bosch_b_m_p3xx_8h.html"
              ],
              "has_details": true,
              "name": "BMP3XX_TEMP_RESOLUTION",
              "initializer": "2",
              "brief": "Decimals places in string representation; temperature should have 5 - resolution is 0.0.00015\u00b0C at the hightest oversampling. See table 7 in the <a href=\"https://github.com/EnviroDIY/ModularSensors/wiki/Sensor-Datasheets/Bosch-BMP390-Datasheet.pdf\">sensor datasheet</a> for resolution at all bandwidths.",
              "description": "",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ],
          [
            "define",
            {
              "base_url": "group__sensor__bmp3xx.html",
              "id": "ga2f4e084d9cdf2570f0704356f7d8c924",
              "include": [
                "&lt;src/sensors/BoschBMP3xx.h&gt;",
                "_bosch_b_m_p3xx_8h.html"
              ],
              "has_details": true,
              "name": "BMP3XX_TEMP_VAR_NUM",
              "initializer": "0",
              "brief": "<a href=\"class_sensor.html\" class=\"m-doc\">Sensor</a> variable number; temperature is stored in sensorValues[0].",
              "description": "",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ],
          [
            "define",
            {
              "base_url": "group__sensor__bmp3xx.html",
              "id": "gaf65c9af309c8ec6f1e76b6787f5576b4",
              "include": [
                "&lt;src/sensors/BoschBMP3xx.h&gt;",
                "_bosch_b_m_p3xx_8h.html"
              ],
              "has_details": true,
              "name": "BMP3XX_TEMP_VAR_NAME",
              "initializer": "\"temperature\"",
              "brief": "<a href=\"class_variable.html\" class=\"m-doc\">Variable</a> name in <a href=\"http://vocabulary.odm2.org/variablename/\">ODM2 controlled vocabulary</a>; &quot;temperature&quot;.",
              "description": "",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ],
          [
            "define",
            {
              "base_url": "group__sensor__bmp3xx.html",
              "id": "gad236f3eec71dbbf3c31b452ec845fb6f",
              "include": [
                "&lt;src/sensors/BoschBMP3xx.h&gt;",
                "_bosch_b_m_p3xx_8h.html"
              ],
              "has_details": true,
              "name": "BMP3XX_TEMP_UNIT_NAME",
              "initializer": "\"degreeCelsius\"",
              "brief": "<a href=\"class_variable.html\" class=\"m-doc\">Variable</a> unit name in <a href=\"http://vocabulary.odm2.org/units/\">ODM2 controlled vocabulary</a>; &quot;degreeCelsius&quot; (\u00b0C)",
              "description": "",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ],
          [
            "define",
            {
              "base_url": "group__sensor__bmp3xx.html",
              "id": "ga6148975d739a9d27caba39beebd3e824",
              "include": [
                "&lt;src/sensors/BoschBMP3xx.h&gt;",
                "_bosch_b_m_p3xx_8h.html"
              ],
              "has_details": true,
              "name": "BMP3XX_TEMP_DEFAULT_CODE",
              "initializer": "\"BoschBMP3xxTemp\"",
              "brief": "Default variable short code; &quot;BoschBMP3xxTemp&quot;.",
              "description": "",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ]
        ]
      },
      {
        "name": "Barometric Pressure",
        "id": "barometric-pressure",
        "description": "<p><a name=\"sensor_bmp3xx_pressure\"></a> The barometric pressure variable from a Bosch BMP388 or BMP390</p><ul><li>Range for both the BMP388 and BMP390 is 300\u20121250 hPa</li><li>Absolute accuracy is typ. \u00b1 50 Pa (\u00b10.50 hPa)</li><li>Relative accuracy is typ. \u00b1 3 Pa (\u00b10.03 hPa), equiv. to \u00b1 0.25 m</li></ul><p>{{ <a href=\"class_bosch_b_m_p3xx___pressure.html#a9c5189b6b3d006b086a2c0ae33ad745e\" class=\"m-doc\">BoschBMP3xx_Pressure::<wbr />BoschBMP3xx_Pressure</a> }}</p>",
        "members": [
          [
            "define",
            {
              "base_url": "group__sensor__bmp3xx.html",
              "id": "gac1f1ee9b37d0db20c5928f4faf47c193",
              "include": [
                "&lt;src/sensors/BoschBMP3xx.h&gt;",
                "_bosch_b_m_p3xx_8h.html"
              ],
              "has_details": true,
              "name": "BMP3XX_PRESSURE_RESOLUTION",
              "initializer": "3",
              "brief": "Decimals places in string representation; barometric pressure should have 3. Resolution of output data in highest resolution mode at lowest bandwidth is 0.016 Pa. See table 6 in the <a href=\"https://github.com/EnviroDIY/ModularSensors/wiki/Sensor-Datasheets/Bosch-BMP390-Datasheet.pdf\">sensor datasheet</a> for resolution at all bandwidths.",
              "description": "",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ],
          [
            "define",
            {
              "base_url": "group__sensor__bmp3xx.html",
              "id": "ga529752c2f44578464c27f35cb92dbe00",
              "include": [
                "&lt;src/sensors/BoschBMP3xx.h&gt;",
                "_bosch_b_m_p3xx_8h.html"
              ],
              "has_details": true,
              "name": "BMP3XX_PRESSURE_VAR_NUM",
              "initializer": "1",
              "brief": "<a href=\"class_sensor.html\" class=\"m-doc\">Sensor</a> variable number; pressure is stored in sensorValues[2].",
              "description": "",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ],
          [
            "define",
            {
              "base_url": "group__sensor__bmp3xx.html",
              "id": "gabb10a778370f36eefd264af688740671",
              "include": [
                "&lt;src/sensors/BoschBMP3xx.h&gt;",
                "_bosch_b_m_p3xx_8h.html"
              ],
              "has_details": true,
              "name": "BMP3XX_PRESSURE_VAR_NAME",
              "initializer": "\"barometricPressure\"",
              "brief": "<a href=\"class_variable.html\" class=\"m-doc\">Variable</a> name in <a href=\"http://vocabulary.odm2.org/variablename/\">ODM2 controlled vocabulary</a>; &quot;barometricPressure&quot;.",
              "description": "",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ],
          [
            "define",
            {
              "base_url": "group__sensor__bmp3xx.html",
              "id": "gafe5714b5ff0d73be29c4ab37be9400cc",
              "include": [
                "&lt;src/sensors/BoschBMP3xx.h&gt;",
                "_bosch_b_m_p3xx_8h.html"
              ],
              "has_details": true,
              "name": "BMP3XX_PRESSURE_UNIT_NAME",
              "initializer": "\"pascal\"",
              "brief": "<a href=\"class_variable.html\" class=\"m-doc\">Variable</a> unit name in <a href=\"http://vocabulary.odm2.org/units/\">ODM2 controlled vocabulary</a>; &quot;pascal&quot; (Pa)",
              "description": "",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ],
          [
            "define",
            {
              "base_url": "group__sensor__bmp3xx.html",
              "id": "ga4eb367500a900fa6770663f56c087d5e",
              "include": [
                "&lt;src/sensors/BoschBMP3xx.h&gt;",
                "_bosch_b_m_p3xx_8h.html"
              ],
              "has_details": true,
              "name": "BMP3XX_PRESSURE_DEFAULT_CODE",
              "initializer": "\"BoschBMP3xxPressure\"",
              "brief": "Default variable short code; &quot;BoschBMP3xxPressure&quot;.",
              "description": "",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ]
        ]
      },
      {
        "name": "Altitude",
        "id": "altitude",
        "description": "<p><a name=\"sensor_bmp3xx_altitude\"></a> The altitude variable from a Bosch BMP388 or BMP390</p><p>{{ <a href=\"class_bosch_b_m_p3xx___altitude.html#a8e7160ae4bdb1aab44df7d51378770e3\" class=\"m-doc\">BoschBMP3xx_Altitude::<wbr />BoschBMP3xx_Altitude</a> }}</p>",
        "members": [
          [
            "define",
            {
              "base_url": "group__sensor__bmp3xx.html",
              "id": "ga46974bac3e2b782b8b15821cd0826127",
              "include": [
                "&lt;src/sensors/BoschBMP3xx.h&gt;",
                "_bosch_b_m_p3xx_8h.html"
              ],
              "has_details": true,
              "name": "BMP3XX_ALTITUDE_RESOLUTION",
              "initializer": "0",
              "brief": "Decimals places in string representation; altitude should have 0 - resolution is 1m.",
              "description": "",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ],
          [
            "define",
            {
              "base_url": "group__sensor__bmp3xx.html",
              "id": "gaf2e5841713debfa24b18a1b27b24a8ae",
              "include": [
                "&lt;src/sensors/BoschBMP3xx.h&gt;",
                "_bosch_b_m_p3xx_8h.html"
              ],
              "has_details": true,
              "name": "BMP3XX_ALTITUDE_VAR_NUM",
              "initializer": "2",
              "brief": "<a href=\"class_sensor.html\" class=\"m-doc\">Sensor</a> variable number; altitude is stored in sensorValues[3].",
              "description": "",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ],
          [
            "define",
            {
              "base_url": "group__sensor__bmp3xx.html",
              "id": "ga5e00fcb4ff2e2e044381814136e01226",
              "include": [
                "&lt;src/sensors/BoschBMP3xx.h&gt;",
                "_bosch_b_m_p3xx_8h.html"
              ],
              "has_details": true,
              "name": "BMP3XX_ALTITUDE_VAR_NAME",
              "initializer": "\"heightAboveSeaFloor\"",
              "brief": "<a href=\"class_variable.html\" class=\"m-doc\">Variable</a> name in <a href=\"http://vocabulary.odm2.org/variablename/\">ODM2 controlled vocabulary</a>; &quot;heightAboveSeaFloor&quot;.",
              "description": "",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ],
          [
            "define",
            {
              "base_url": "group__sensor__bmp3xx.html",
              "id": "ga04090f69ac6bf364ca82980b1be7cf03",
              "include": [
                "&lt;src/sensors/BoschBMP3xx.h&gt;",
                "_bosch_b_m_p3xx_8h.html"
              ],
              "has_details": true,
              "name": "BMP3XX_ALTITUDE_UNIT_NAME",
              "initializer": "\"meter\"",
              "brief": "<a href=\"class_variable.html\" class=\"m-doc\">Variable</a> unit name in <a href=\"http://vocabulary.odm2.org/units/\">ODM2 controlled vocabulary</a>; &quot;meter&quot;.",
              "description": "",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ],
          [
            "define",
            {
              "base_url": "group__sensor__bmp3xx.html",
              "id": "ga4654ede614e20e008759071d8f6f3296",
              "include": [
                "&lt;src/sensors/BoschBMP3xx.h&gt;",
                "_bosch_b_m_p3xx_8h.html"
              ],
              "has_details": true,
              "name": "BMP3XX_ALTITUDE_DEFAULT_CODE",
              "initializer": "\"BoschBMP3xxAltitude\"",
              "brief": "Default variable short code; &quot;BoschBMP3xxAltitude&quot;.",
              "description": "",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ]
        ]
      }
    ],
    "has_enum_details": false,
    "has_typedef_details": false,
    "has_func_details": false,
    "has_var_details": false,
    "has_define_details": true,
    "breadcrumb": [
      [
        "Supported Sensors",
        "group__the__sensors.html"
      ],
      [
        "Bosch BMP3xx",
        "group__sensor__bmp3xx.html"
      ]
    ],
    "breadcrumbGroup": [
      [
        "Bosch BMP3xx",
        "group__sensor__bmp3xx.html"
      ]
    ]
  }
}