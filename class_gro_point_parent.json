{
  "version": "1.12.0",
  "compound": {
    "kind": "class",
    "id": "class_gro_point_parent",
    "name": "GroPointParent",
    "url_base": "class_gro_point_parent",
    "url": "class_gro_point_parent.html",
    "include": null,
    "has_template_details": false,
    "templates": null,
    "brief": "The <a href=\"class_sensor.html\" class=\"m-doc\">Sensor</a> sub-class for all the <a href=\"group__gropoint__group.html\" class=\"m-doc\">GroPoint sensors</a>.",
    "description": "",
    "sections": "",
    "deprecated": null,
    "since": null,
    "example_navigation": null,
    "footer_navigation": null,
    "topics": [],
    "dirs": [],
    "files": [],
    "namespaces": [],
    "classes": [],
    "base_classes": [
      {
        "kind": "class",
        "url": "class_sensor.html",
        "name": "Sensor",
        "brief": "The &quot;Sensor&quot; class is used for all sensor-level operations - waking, sleeping, and taking measurements.",
        "templates": null,
        "deprecated": null,
        "since": null,
        "is_protected": false,
        "is_virtual": false
      }
    ],
    "derived_classes": [
      {
        "kind": "class",
        "url": "class_gro_point_g_p_l_p8.html",
        "name": "GroPointGPLP8",
        "brief": "The <a href=\"class_sensor.html\" class=\"m-doc\">Sensor</a> sub-class for the <a href=\"group__sensor__gplp8.html\" class=\"m-doc\">GroPoint Profile GPLP8 probe</a>.",
        "templates": null,
        "deprecated": null,
        "since": null,
        "is_virtual": false,
        "is_final": false
      }
    ],
    "enums": [],
    "typedefs": [],
    "funcs": [],
    "vars": [],
    "defines": [],
    "public_types": [],
    "public_static_funcs": [],
    "typeless_funcs": [
      {
        "base_url": "class_gro_point_parent.html",
        "id": "a7c6685aad814b153792c11c66951de0f",
        "include": null,
        "has_details": true,
        "type": "",
        "name": "GroPointParent",
        "brief": "Construct a new GroPoint Parent object. This is only intended to be used within this library.",
        "description": "",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "modbusAddress",
            "type": "byte",
            "type_name": "byte modbusAddress",
            "default": null,
            "description": "The modbus address of the sensor.",
            "direction": ""
          },
          {
            "name": "stream",
            "type": "Stream*",
            "type_name": "Stream* stream",
            "default": null,
            "description": "An Arduino data stream for modbus communication. See <a href=\"page_arduino_streams.html\" class=\"m-doc\">notes</a> for more information on what streams can be used.",
            "direction": ""
          },
          {
            "name": "powerPin",
            "type": "int8_t",
            "type_name": "int8_t powerPin",
            "default": null,
            "description": "The pin on the mcu controlling power to the GroPoint. Use -1 if it is continuously powered.",
            "direction": ""
          },
          {
            "name": "powerPin2",
            "type": "int8_t",
            "type_name": "int8_t powerPin2",
            "default": null,
            "description": "The pin on the mcu controlling power to the RS485 adapter, if it is different from that used to power the sensor. Use -1 or omit if not applicable.",
            "direction": ""
          },
          {
            "name": "enablePin",
            "type": "int8_t",
            "type_name": "int8_t enablePin",
            "default": "-1",
            "description": "The pin on the mcu controlling the direction enable on the RS485 adapter, if necessary; use -1 or omit if not applicable. An RS485 adapter with integrated flow control is strongly recommended.",
            "direction": ""
          },
          {
            "name": "measurementsToAverage",
            "type": "uint8_t",
            "type_name": "uint8_t measurementsToAverage",
            "default": "1",
            "description": "The number of measurements to take and average before giving a &quot;final&quot; result from the sensor; optional with a default value of 1.",
            "direction": ""
          },
          {
            "name": "model",
            "type": "gropointModel",
            "type_name": "gropointModel model",
            "default": "GPLPX",
            "description": "The model of GroPoint sensor.",
            "direction": ""
          },
          {
            "name": "sensName",
            "type": "const char*",
            "type_name": "const char* sensName",
            "default": "&quot;GroPoint-Sensor&quot;",
            "description": "The name of the sensor. Defaults to &quot;SDI12-Sensor&quot;.",
            "direction": ""
          },
          {
            "name": "numVariables",
            "type": "uint8_t",
            "type_name": "uint8_t numVariables",
            "default": "2",
            "description": "The number of variable results returned by the sensor. Defaults to 2.",
            "direction": ""
          },
          {
            "name": "warmUpTime_ms",
            "type": "uint32_t",
            "type_name": "uint32_t warmUpTime_ms",
            "default": "350",
            "description": "The time in ms between when the sensor is powered on and when it is ready to receive a wake command. Defaults to 1500.",
            "direction": ""
          },
          {
            "name": "stabilizationTime_ms",
            "type": "uint32_t",
            "type_name": "uint32_t stabilizationTime_ms",
            "default": "100",
            "description": "The time in ms between when the sensor receives a wake command and when it is able to return stable values. Defaults to 20,000 (20s).",
            "direction": ""
          },
          {
            "name": "measurementTime_ms",
            "type": "uint32_t",
            "type_name": "uint32_t measurementTime_ms",
            "default": "200",
            "description": "The time in ms between when a measurement is started and when the result value is available. Defaults to 2000.",
            "direction": ""
          },
          {
            "name": "incCalcValues",
            "type": "uint8_t",
            "type_name": "uint8_t incCalcValues",
            "default": "0",
            "description": "The number of included calculated variables from the sensor, if any. These are used for values that we would always calculate for a sensor and depend only on the raw results of that single sensor; optional with a default value of 0.",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_gro_point_parent.html",
        "id": "a67752295a418b7a269f26cdb7fbd0005",
        "include": null,
        "has_details": true,
        "type": "",
        "name": "GroPointParent",
        "brief": "Construct a new GroPoint Parent object. This is only intended to be used within this library.",
        "description": "",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "modbusAddress",
            "type": "byte",
            "type_name": "byte modbusAddress",
            "default": null,
            "description": "The modbus address of the sensor.",
            "direction": ""
          },
          {
            "name": "stream",
            "type": "Stream&amp;",
            "type_name": "Stream&amp; stream",
            "default": null,
            "description": "An Arduino data stream for modbus communication. See <a href=\"page_arduino_streams.html\" class=\"m-doc\">notes</a> for more information on what streams can be used.",
            "direction": ""
          },
          {
            "name": "powerPin",
            "type": "int8_t",
            "type_name": "int8_t powerPin",
            "default": null,
            "description": "The pin on the mcu controlling power to the GroPoint. Use -1 if it is continuously powered.",
            "direction": ""
          },
          {
            "name": "powerPin2",
            "type": "int8_t",
            "type_name": "int8_t powerPin2",
            "default": null,
            "description": "The pin on the mcu controlling power to the RS485 adapter, if it is different from that used to power the sensor. Use -1 or omit if not applicable.",
            "direction": ""
          },
          {
            "name": "enablePin",
            "type": "int8_t",
            "type_name": "int8_t enablePin",
            "default": "-1",
            "description": "The pin on the mcu controlling the direction enable on the RS485 adapter, if necessary; use -1 or omit if not applicable. An RS485 adapter with integrated flow control is strongly recommended.",
            "direction": ""
          },
          {
            "name": "measurementsToAverage",
            "type": "uint8_t",
            "type_name": "uint8_t measurementsToAverage",
            "default": "1",
            "description": "The number of measurements to take and average before giving a &quot;final&quot; result from the sensor; optional with a default value of 1.",
            "direction": ""
          },
          {
            "name": "model",
            "type": "gropointModel",
            "type_name": "gropointModel model",
            "default": "GPLPX",
            "description": "The model of GroPoint sensor.",
            "direction": ""
          },
          {
            "name": "sensName",
            "type": "const char*",
            "type_name": "const char* sensName",
            "default": "&quot;GroPoint-Sensor&quot;",
            "description": "The name of the sensor. Defaults to &quot;SDI12-Sensor&quot;.",
            "direction": ""
          },
          {
            "name": "numVariables",
            "type": "uint8_t",
            "type_name": "uint8_t numVariables",
            "default": "2",
            "description": "The number of variable results returned by the sensor. Defaults to 2.",
            "direction": ""
          },
          {
            "name": "warmUpTime_ms",
            "type": "uint32_t",
            "type_name": "uint32_t warmUpTime_ms",
            "default": "350",
            "description": "The time in ms between when the sensor is powered on and when it is ready to receive a wake command. Defaults to 1500.",
            "direction": ""
          },
          {
            "name": "stabilizationTime_ms",
            "type": "uint32_t",
            "type_name": "uint32_t stabilizationTime_ms",
            "default": "100",
            "description": "The time in ms between when the sensor receives a wake command and when it is able to return stable values. Defaults to 20,000 (20s).",
            "direction": ""
          },
          {
            "name": "measurementTime_ms",
            "type": "uint32_t",
            "type_name": "uint32_t measurementTime_ms",
            "default": "200",
            "description": "The time in ms between when a measurement is started and when the result value is available. Defaults to 2000.",
            "direction": ""
          },
          {
            "name": "incCalcValues",
            "type": "uint8_t",
            "type_name": "uint8_t incCalcValues",
            "default": "0",
            "description": "The number of included calculated variables from the sensor, if any. These are used for values that we would always calculate for a sensor and depend only on the raw results of that single sensor; optional with a default value of 0.",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_gro_point_parent.html",
        "id": "aad0f2925cf377a0cc5cb97de79fba6f0",
        "include": null,
        "has_details": false,
        "type": "",
        "name": "~GroPointParent",
        "brief": "Destroy the GroPoint Parent object - no action taken.",
        "description": "",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": true,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": []
      }
    ],
    "public_funcs": [
      {
        "base_url": "class_gro_point_parent.html",
        "id": "afdd6f69dfd97dd348ddbbcb2f7fedd4b",
        "include": null,
        "has_details": true,
        "type": "String",
        "name": "getSensorLocation",
        "brief": "Get the pin or connection location between the mcu and the sensor.",
        "description": "<aside class=\"m-note m-info\"><h4>Note</h4><p>This is NOT the position of the sensor in the environment, merely how it is attached to the mcu.</p></aside>",
        "return_value": "Text describing how the sensor is attached to the mcu.",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": true,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": true,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": [
          {
            "name": "",
            "type": "void",
            "type_name": "void",
            "default": null,
            "description": "",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_gro_point_parent.html",
        "id": "ab67230c9c4ed2214ba084c13ca295b18",
        "include": null,
        "has_details": true,
        "type": "bool",
        "name": "setup",
        "brief": "Do any one-time preparations needed before the sensor will be able to take readings.",
        "description": "<p>This sets pin modes on the <a href=\"class_sensor.html#a60cef6626d7145eda0709980f66df52b\" class=\"m-doc\">_<wbr />powerPin</a>, adapter power, and adapter enable pins. It also sets the expected stream timeout for modbus and updates the <a href=\"class_sensor.html#a1fde72c3ddd07d892dcbfe4a09bcae49\" class=\"m-doc\">_<wbr />sensorStatus</a>. No sensor power is required. This will always return true.</p>",
        "return_value": "True if the setup was successful.",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": true,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": true,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": [
          {
            "name": "",
            "type": "void",
            "type_name": "void",
            "default": null,
            "description": "",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_gro_point_parent.html",
        "id": "a3e9d83505af57d05a6e5d277c3ead126",
        "include": null,
        "has_details": true,
        "type": "bool",
        "name": "wake",
        "brief": "Wake the sensor up, if necessary. Do whatever it takes to get a sensor in the proper state to begin a measurement.",
        "description": "<p>Verifies that the power is on and updates the <a href=\"class_sensor.html#a1fde72c3ddd07d892dcbfe4a09bcae49\" class=\"m-doc\">_<wbr />sensorStatus</a>. This also sets the <a href=\"class_sensor.html#a86541c88432508d6bc81a8fb41746e2e\" class=\"m-doc\">_<wbr />millisSensorActivated</a> timestamp.</p><aside class=\"m-note m-info\"><h4>Note</h4><p>This does NOT include any wait for sensor readiness.</p></aside>",
        "return_value": "True if the wake function completed successfully.",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": true,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": true,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": [
          {
            "name": "",
            "type": "void",
            "type_name": "void",
            "default": null,
            "description": "",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_gro_point_parent.html",
        "id": "ad69fddbadeb9486a8303916f12b7d63d",
        "include": null,
        "has_details": true,
        "type": "bool",
        "name": "sleep",
        "brief": "Puts the sensor to sleep, if necessary.",
        "description": "<p>This also un-sets the <a href=\"class_sensor.html#a86541c88432508d6bc81a8fb41746e2e\" class=\"m-doc\">_<wbr />millisSensorActivated</a> timestamp (sets it to 0). This does NOT power down the sensor!</p>",
        "return_value": "True if the sleep function completed successfully.",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": true,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": true,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": [
          {
            "name": "",
            "type": "void",
            "type_name": "void",
            "default": null,
            "description": "",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_gro_point_parent.html",
        "id": "a6511221350abf7240aa4503e987ca379",
        "include": null,
        "has_details": true,
        "type": "void",
        "name": "powerUp",
        "brief": "Turn on the sensor power, if applicable.",
        "description": "<p>Generally this is done by setting the <a href=\"class_sensor.html#a60cef6626d7145eda0709980f66df52b\" class=\"m-doc\">_<wbr />powerPin</a> <code>HIGH</code>. Also sets the <a href=\"class_sensor.html#aa820f5e6c900f07d39750a77dc851a8f\" class=\"m-doc\">_<wbr />millisPowerOn</a> timestamp and updates the <a href=\"class_sensor.html#a1fde72c3ddd07d892dcbfe4a09bcae49\" class=\"m-doc\">_<wbr />sensorStatus</a>.</p>",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": true,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": true,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": [
          {
            "name": "",
            "type": "void",
            "type_name": "void",
            "default": null,
            "description": "",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_gro_point_parent.html",
        "id": "a901eb780d25d8ca5065800322dd1b097",
        "include": null,
        "has_details": true,
        "type": "void",
        "name": "powerDown",
        "brief": "Turn off the sensor power, if applicable.",
        "description": "<p>Generally this is done by setting the <a href=\"class_sensor.html#a60cef6626d7145eda0709980f66df52b\" class=\"m-doc\">_<wbr />powerPin</a> <code>LOW</code>. Also un-sets the <a href=\"class_sensor.html#aa820f5e6c900f07d39750a77dc851a8f\" class=\"m-doc\">_<wbr />millisPowerOn</a> timestamp (sets <a href=\"class_sensor.html#aa820f5e6c900f07d39750a77dc851a8f\" class=\"m-doc\">_<wbr />millisPowerOn</a> to 0) and updates the <a href=\"class_sensor.html#a1fde72c3ddd07d892dcbfe4a09bcae49\" class=\"m-doc\">_<wbr />sensorStatus</a>.</p>",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": true,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": true,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": [
          {
            "name": "",
            "type": "void",
            "type_name": "void",
            "default": null,
            "description": "",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_gro_point_parent.html",
        "id": "a5d058570e5738e0ec9a867389889c2dc",
        "include": null,
        "has_details": true,
        "type": "bool",
        "name": "addSingleMeasurementResult",
        "brief": "Get the results from a single measurement.",
        "description": "<p>This asks the sensor for a new result, verifies that it passes sanity range checks, and then adds the value to the result array.</p><p>This also un-sets the <a href=\"class_sensor.html#a4853c30b71ad2efc09bd6f73530155e3\" class=\"m-doc\">_<wbr />millisMeasurementRequested</a> timestamp (sets <a href=\"class_sensor.html#a4853c30b71ad2efc09bd6f73530155e3\" class=\"m-doc\">_<wbr />millisMeasurementRequested</a> to 0) and updates the <a href=\"class_sensor.html#a1fde72c3ddd07d892dcbfe4a09bcae49\" class=\"m-doc\">_<wbr />sensorStatus</a>.</p><aside class=\"m-note m-info\"><h4>Note</h4><p>This function does NOT include any waiting for the sensor complete a measurement.</p></aside>",
        "return_value": "True if the function completed successfully.",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": true,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": true,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": [
          {
            "name": "",
            "type": "void",
            "type_name": "void",
            "default": null,
            "description": "",
            "direction": ""
          }
        ]
      }
    ],
    "signals": [],
    "public_slots": [],
    "public_static_vars": [],
    "public_vars": [],
    "protected_types": [],
    "protected_static_funcs": [],
    "protected_funcs": [],
    "protected_slots": [],
    "protected_static_vars": [],
    "protected_vars": [],
    "private_funcs": [],
    "private_slots": [],
    "related": [],
    "friend_funcs": [],
    "groups": [],
    "has_enum_details": false,
    "has_typedef_details": false,
    "has_func_details": true,
    "has_var_details": false,
    "has_define_details": false,
    "breadcrumb": [
      [
        "Sensor",
        "class_sensor.html"
      ],
      [
        "GroPointParent",
        "class_gro_point_parent.html"
      ]
    ],
    "breadcrumbGroup": [
      [
        "GroPoint Sensors",
        "group__gropoint__group.html"
      ],
      [
        "GroPointParent",
        "class_gro_point_parent.html"
      ]
    ],
    "is_final": false,
    "prefix_wbr": "GroPointParent::<wbr />"
  }
}