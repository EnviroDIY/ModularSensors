{
  "version": "1.14.0",
  "compound": {
    "kind": "class",
    "id": "class_espressif",
    "name": "Espressif",
    "url_base": "class_espressif",
    "url": "class_espressif.html",
    "include": [
      "&lt;src/modems/Espressif.h&gt;",
      "_espressif_8h.html"
    ],
    "has_template_details": false,
    "templates": null,
    "brief": "The <a href=\"classlogger_modem.html\" class=\"m-doc\">loggerModem</a> subclass for almost any <a href=\"class_espressif.html\" class=\"m-doc\">Espressif</a> wifi or wifi/bluetooth chip that has been flashed with <a href=\"class_espressif.html\" class=\"m-doc\">Espressif</a>&#x27;s AT command firmware.",
    "description": "<aside class=\"m-note m-danger\"><h4>Warning</h4><p>Light sleep modes on the ESP8266 may not function as expected (or at all).</p></aside>",
    "sections": "",
    "deprecated": null,
    "since": null,
    "example_navigation": null,
    "footer_navigation": null,
    "topics": [],
    "dirs": [],
    "files": [],
    "namespaces": [],
    "classes": [],
    "base_classes": [
      {
        "kind": "class",
        "url": "classlogger_modem.html",
        "name": "loggerModem",
        "brief": "The <a href=\"classlogger_modem.html\" class=\"m-doc\">loggerModem</a> class provides an internet connection for the logger and supplies an Arduino Client instance to use to publish data.",
        "templates": null,
        "deprecated": null,
        "since": null,
        "is_protected": false,
        "is_virtual": false
      }
    ],
    "derived_classes": [
      {
        "kind": "class",
        "url": "class_espressif_e_s_p32.html",
        "name": "EspressifESP32",
        "brief": "The <a href=\"classlogger_modem.html\" class=\"m-doc\">loggerModem</a> subclass for any breakout of the <a href=\"group__modem__esp32.html\" class=\"m-doc\">Espressif ESP32</a> wifi chip or ESP32 wifi/bluetooth chip that has been flashed with <a href=\"class_espressif.html\" class=\"m-doc\">Espressif</a>&#x27;s AT command firmware.",
        "templates": null,
        "deprecated": null,
        "since": null,
        "is_virtual": false,
        "is_final": false
      },
      {
        "kind": "class",
        "url": "class_espressif_e_s_p8266.html",
        "name": "EspressifESP8266",
        "brief": "The <a href=\"classlogger_modem.html\" class=\"m-doc\">loggerModem</a> subclass for any breakout of the <a href=\"group__modem__esp8266.html\" class=\"m-doc\">Espressif ESP8266</a> wifi chip or ESP32 wifi/bluetooth chip that has been flashed with <a href=\"class_espressif.html\" class=\"m-doc\">Espressif</a>&#x27;s AT command firmware.",
        "templates": null,
        "deprecated": null,
        "since": null,
        "is_virtual": false,
        "is_final": false
      }
    ],
    "enums": [],
    "typedefs": [],
    "funcs": [],
    "vars": [],
    "defines": [],
    "public_types": [],
    "public_static_funcs": [],
    "typeless_funcs": [
      {
        "base_url": "class_espressif.html",
        "id": "a73abed51f43849a4a3b6350ff3c5b619",
        "include": null,
        "has_details": true,
        "type": "",
        "name": "Espressif",
        "brief": "Construct a new <a href=\"class_espressif.html\" class=\"m-doc\">Espressif</a> object.",
        "description": "<p>The constructor initializes all of the provided member variables, constructs a <a href=\"classlogger_modem.html\" class=\"m-doc\">loggerModem</a> parent class with the appropriate timing for the module, calls the constructor for a TinyGSM modem on the provided modemStream, and creates a TinyGSM Client linked to the modem.</p><p>Should be set to a negative number if the modem should be continuously powered or the power cannot be controlled by the MCU.    \nShould be set to a negative number if the modem reset pin is not connected to the MCU.    This is the ESP&#x27;s <code>RSTB/DIO16</code> pin.</p><aside class=\"m-note m-default\"><h4>See also</h4><p><a href=\"classlogger_modem.html#a207f7d1690cab74f5279f13b6efcd71d\" class=\"m-doc\">loggerModem::<wbr />loggerModem</a></p></aside>",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "modemStream",
            "type": "Stream*",
            "type_name": "Stream* modemStream",
            "default": null,
            "description": "The Arduino stream instance for serial communication.",
            "direction": ""
          },
          {
            "name": "powerPin",
            "type": "int8_t",
            "type_name": "int8_t powerPin",
            "default": null,
            "description": "The digital pin number of the mcu pin controlling power to the modem (active <code>HIGH</code>).",
            "direction": ""
          },
          {
            "name": "modemResetPin",
            "type": "int8_t",
            "type_name": "int8_t modemResetPin",
            "default": null,
            "description": "The digital pin number of the pin on the mcu attached the the hard or panic reset pin of the modem.",
            "direction": ""
          },
          {
            "name": "ssid",
            "type": "const char*",
            "type_name": "const char* ssid",
            "default": null,
            "description": "The wifi network ID.",
            "direction": ""
          },
          {
            "name": "pwd",
            "type": "const char*",
            "type_name": "const char* pwd",
            "default": null,
            "description": "The wifi network password, <strong>assuming WPA2</strong>.",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_espressif.html",
        "id": "a4e6112844818947b7d646f5aff14bf35",
        "include": null,
        "has_details": false,
        "type": "",
        "name": "~Espressif",
        "brief": "Destroy the <a href=\"class_espressif.html\" class=\"m-doc\">Espressif</a> object - no action taken.",
        "description": "",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": true,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": []
      }
    ],
    "public_funcs": [],
    "signals": [],
    "public_slots": [],
    "public_static_vars": [],
    "public_vars": [
      {
        "base_url": "class_espressif.html",
        "id": "a5bf62f2a8c06d1a20f2ad73ffac90617",
        "include": null,
        "has_details": true,
        "type": "Stream*",
        "is_constexpr": false,
        "is_static": false,
        "is_protected": false,
        "is_private": false,
        "name": "_modemStream",
        "brief": "A pointer to the Arduino serial Stream used for communication between the MCU and the <a href=\"class_espressif.html\" class=\"m-doc\">Espressif</a> module.",
        "description": "<p>We need to keep the pointer to the stream for tossing junk on boot.</p>",
        "deprecated": null,
        "since": null,
        "has_template_details": false,
        "templates": null
      }
    ],
    "protected_types": [],
    "protected_static_funcs": [],
    "protected_funcs": [
      {
        "base_url": "class_espressif.html",
        "id": "a3780681c28859cb9acfec5b71a0ee10c",
        "include": null,
        "has_details": true,
        "type": "bool",
        "name": "modemWakeFxn",
        "brief": "Perform the parts of the modem wake up process that are unique to a specific module, as opposed to the parts of setup that are common to all modem modules.",
        "description": "",
        "return_value": "True if the unique part of the wake function ran successfully - does <em>NOT</em> indicate that the modem is now responsive.",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": true,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": true,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": true,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": [
          {
            "name": "",
            "type": "void",
            "type_name": "void",
            "default": null,
            "description": "",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_espressif.html",
        "id": "a16564bf4714f228415967922c8824c44",
        "include": null,
        "has_details": true,
        "type": "bool",
        "name": "ESPwaitForBoot",
        "brief": "Waits for the <a href=\"class_espressif.html\" class=\"m-doc\">Espressif</a> module to reboot and print out it&#x27;s boot up string. Because the boot up string is at a different baud rate (74880 baud), it usually comes out as junk.",
        "description": "",
        "return_value": "True if text (assumed to be the start message) was received; false if text was received after boot.",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": true,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": [
          {
            "name": "",
            "type": "void",
            "type_name": "void",
            "default": null,
            "description": "",
            "direction": ""
          }
        ]
      }
    ],
    "protected_slots": [],
    "protected_static_vars": [],
    "protected_vars": [
      {
        "base_url": "class_espressif.html",
        "id": "a74b553c1e7a65c474e347d04ae9d326f",
        "include": null,
        "has_details": false,
        "type": "const char*",
        "is_constexpr": false,
        "is_static": false,
        "is_protected": true,
        "is_private": false,
        "name": "_ssid",
        "brief": "Internal reference to the WiFi SSID.",
        "description": "",
        "deprecated": null,
        "since": null,
        "has_template_details": false,
        "templates": null
      },
      {
        "base_url": "class_espressif.html",
        "id": "a1b4c8008fcb0c9f1cbf0750db0796092",
        "include": null,
        "has_details": false,
        "type": "const char*",
        "is_constexpr": false,
        "is_static": false,
        "is_protected": true,
        "is_private": false,
        "name": "_pwd",
        "brief": "Internal reference to the WiFi password.",
        "description": "",
        "deprecated": null,
        "since": null,
        "has_template_details": false,
        "templates": null
      }
    ],
    "private_funcs": [],
    "private_slots": [],
    "related": [],
    "friend_funcs": [],
    "groups": [],
    "has_enum_details": false,
    "has_typedef_details": false,
    "has_func_details": true,
    "has_var_details": true,
    "has_define_details": false,
    "breadcrumb": [
      [
        "loggerModem",
        "classlogger_modem.html"
      ],
      [
        "Espressif",
        "class_espressif.html"
      ]
    ],
    "breadcrumbGroup": [
      [
        "Espressif ESP8266, ESP32, and various ESP32 flavors",
        "group__modem__espressif.html"
      ],
      [
        "Espressif",
        "class_espressif.html"
      ]
    ],
    "is_final": false,
    "prefix_wbr": "Espressif::<wbr />"
  }
}