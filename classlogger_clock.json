{
  "version": "1.14.0",
  "compound": {
    "kind": "class",
    "id": "classlogger_clock",
    "name": "loggerClock",
    "url_base": "classlogger_clock",
    "url": "classlogger_clock.html",
    "include": [
      "&lt;src/ClockSupport.h&gt;",
      "_clock_support_8h.html"
    ],
    "has_template_details": false,
    "templates": null,
    "brief": "A class for the clock attached to the logger.",
    "description": "<aside class=\"m-note m-info\"><h4>Note</h4><p>This is effectively a static class, with all static functions and a deleted constructor.</p></aside><aside class=\"m-note m-dim\"><h4><a href=\"todo.html#_todo000006\" class=\"m-doc\">Todo</a></h4><p>Support half/quarter hour time zones</p></aside>",
    "sections": "",
    "deprecated": null,
    "since": null,
    "example_navigation": null,
    "footer_navigation": null,
    "topics": [],
    "dirs": [],
    "files": [],
    "namespaces": [],
    "classes": [],
    "base_classes": [],
    "derived_classes": [],
    "enums": [],
    "typedefs": [],
    "funcs": [],
    "vars": [],
    "defines": [],
    "public_types": [],
    "public_static_funcs": [
      {
        "base_url": "classlogger_clock.html",
        "id": "aeaf7df55efab8e25c92c404c434fe3f5",
        "include": null,
        "has_details": true,
        "type": "void",
        "name": "setRTCOffset",
        "brief": "Set the static offset in hours from UTC that the RTC is programmed in.",
        "description": "<aside class=\"m-note m-info\"><h4>Note</h4><p>I VERY, VERY STRONGLY RECOMMEND SETTING THE RTC IN UTC(ie, offset = 0)</p></aside>",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "static ",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "offsetHours",
            "type": "int8_t",
            "type_name": "int8_t offsetHours",
            "default": null,
            "description": "The offset of the real-time clock (RTC) from UTC in hours",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "classlogger_clock.html",
        "id": "a54860886267c8467d59fcbd87e6cb10f",
        "include": null,
        "has_details": true,
        "type": "int8_t",
        "name": "getRTCOffset",
        "brief": "Get the of the real-time clock (RTC) from UTC in hours.",
        "description": "",
        "return_value": "The offset of the real-time clock (RTC) from UTC in hours",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "static ",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": [
          {
            "name": "",
            "type": "void",
            "type_name": "void",
            "default": null,
            "description": "",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "classlogger_clock.html",
        "id": "aa3f927e8f790bd41d2aaee5a7373ddc4",
        "include": null,
        "has_details": true,
        "type": "time_t",
        "name": "getNowAsEpoch",
        "brief": "Get the current Universal Coordinated Time (UTC) epoch time from the RTC.",
        "description": "",
        "return_value": "The number of seconds from the start of the given epoch.",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "static ",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "utcOffset",
            "type": "int8_t",
            "type_name": "int8_t utcOffset",
            "default": null,
            "description": "The offset from UTC to return the epoch time in.",
            "direction": ""
          },
          {
            "name": "epoch",
            "type": "<a href=\"_clock_support_8h.html#a8a843903ff31832bf9472f993feac3c1\" class=\"m-doc\">epochStart</a>",
            "type_name": "<a href=\"_clock_support_8h.html#a8a843903ff31832bf9472f993feac3c1\" class=\"m-doc\">epochStart</a> epoch",
            "default": null,
            "description": "The type of epoch to use (ie, the standard for the start of the epoch).",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "classlogger_clock.html",
        "id": "a476e9f9ec3832fc4193f740223bb1dd8",
        "include": null,
        "has_details": true,
        "type": "void",
        "name": "getNowAsParts",
        "brief": "Get the current epoch time from the RTC and return it as individual parts.",
        "description": "<aside class=\"m-note m-info\"><h4>Note</h4><p>The tz_offset is an input parameter - you need to set the timezone that you want the other parts to be set in!</p></aside>",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "static ",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "seconds",
            "type": "int8_t&amp;",
            "type_name": "int8_t&amp; seconds",
            "default": null,
            "description": "[out] Reference to a variable where the seconds will be stored",
            "direction": ""
          },
          {
            "name": "minutes",
            "type": "int8_t&amp;",
            "type_name": "int8_t&amp; minutes",
            "default": null,
            "description": "[out] Reference to a variable where the minutes will be stored",
            "direction": ""
          },
          {
            "name": "hours",
            "type": "int8_t&amp;",
            "type_name": "int8_t&amp; hours",
            "default": null,
            "description": "[out] Reference to a variable where the hours will be stored",
            "direction": ""
          },
          {
            "name": "day",
            "type": "int8_t&amp;",
            "type_name": "int8_t&amp; day",
            "default": null,
            "description": "[out] Reference to a variable where the day will be stored",
            "direction": ""
          },
          {
            "name": "month",
            "type": "int8_t&amp;",
            "type_name": "int8_t&amp; month",
            "default": null,
            "description": "[out] Reference to a variable where the month will be stored",
            "direction": ""
          },
          {
            "name": "year",
            "type": "int16_t&amp;",
            "type_name": "int16_t&amp; year",
            "default": null,
            "description": "[out] Reference to a variable where the year will be stored",
            "direction": ""
          },
          {
            "name": "tz_offset",
            "type": "uint8_t",
            "type_name": "uint8_t tz_offset",
            "default": null,
            "description": "[in] The time zone offset from UTC in hours",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "classlogger_clock.html",
        "id": "aabe394503d8833fc872ea3e7af993c8a",
        "include": null,
        "has_details": true,
        "type": "String",
        "name": "formatDateTime_ISO8601",
        "brief": "Convert an epoch time (seconds since a fixed epoch start) into a ISO8601 formatted string.",
        "description": "<p>Code modified from parts of the SparkFun RV-8803 library.</p>",
        "return_value": "An ISO8601 formatted String.",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "static ",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "epochSeconds",
            "type": "time_t",
            "type_name": "time_t epochSeconds",
            "default": null,
            "description": "The number of seconds since the start of the given epoch.",
            "direction": ""
          },
          {
            "name": "epochSecondsUTCOffset",
            "type": "int8_t",
            "type_name": "int8_t epochSecondsUTCOffset",
            "default": null,
            "description": "The offset of the input epoch time from UTC in hours.",
            "direction": ""
          },
          {
            "name": "epoch",
            "type": "<a href=\"_clock_support_8h.html#a8a843903ff31832bf9472f993feac3c1\" class=\"m-doc\">epochStart</a>",
            "type_name": "<a href=\"_clock_support_8h.html#a8a843903ff31832bf9472f993feac3c1\" class=\"m-doc\">epochStart</a> epoch",
            "default": null,
            "description": "The epoch of the input epoch time.",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "classlogger_clock.html",
        "id": "a6d1605453299fbd090821232d9c0f8f9",
        "include": null,
        "has_details": true,
        "type": "String",
        "name": "formatDateTime_ISO8601",
        "brief": "Convert an <a href=\"classepoch_time.html\" class=\"m-doc\">epochTime</a> object into a ISO8601 formatted string.",
        "description": "",
        "return_value": "An ISO8601 formatted String.",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "static ",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "in_time",
            "type": "<a href=\"classepoch_time.html\" class=\"m-doc\">epochTime</a>",
            "type_name": "<a href=\"classepoch_time.html\" class=\"m-doc\">epochTime</a> in_time",
            "default": null,
            "description": "An <a href=\"classepoch_time.html\" class=\"m-doc\">epochTime</a> object",
            "direction": ""
          },
          {
            "name": "epochSecondsUTCOffset",
            "type": "int8_t",
            "type_name": "int8_t epochSecondsUTCOffset",
            "default": null,
            "description": "The offset of the input epoch time from UTC in hours.",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "classlogger_clock.html",
        "id": "ad1d95fc62bca9ea8b64f9a46e4a7c1c2",
        "include": null,
        "has_details": true,
        "type": "void",
        "name": "formatDateTime",
        "brief": "Convert an epoch time into a character string based on the input strftime format string and put it into the given buffer.",
        "description": "<aside class=\"m-note m-info\"><h4>Note</h4><p>This function DOES NOT SUPPORT TIMEZONES. Do not use the z or Z inputs!</p></aside><aside class=\"m-note m-default\"><h4>See also</h4><p><a href=\"https://en.cppreference.com/w/cpp/chrono/c/strftime\">https:/<wbr />/<wbr />en.cppreference.com/<wbr />w/<wbr />cpp/<wbr />chrono/<wbr />c/<wbr />strftime</a> for possible formatting strings.</p></aside>",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "static ",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "buffer",
            "type": "char*",
            "type_name": "char* buffer",
            "default": null,
            "description": "A buffer to put the finished string into. Make sure that the buffer is big enough to hold all of the characters!",
            "direction": ""
          },
          {
            "name": "fmt",
            "type": "const char*",
            "type_name": "const char* fmt",
            "default": null,
            "description": "The strftime format string.",
            "direction": ""
          },
          {
            "name": "epochSeconds",
            "type": "time_t",
            "type_name": "time_t epochSeconds",
            "default": null,
            "description": "The number of seconds since the start of the given epoch in the given offset from UTC.",
            "direction": ""
          },
          {
            "name": "epoch",
            "type": "<a href=\"_clock_support_8h.html#a8a843903ff31832bf9472f993feac3c1\" class=\"m-doc\">epochStart</a>",
            "type_name": "<a href=\"_clock_support_8h.html#a8a843903ff31832bf9472f993feac3c1\" class=\"m-doc\">epochStart</a> epoch",
            "default": null,
            "description": "The epoch of the input epoch time.",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "classlogger_clock.html",
        "id": "a35d28a2257c258626a1dca9828e3a9aa",
        "include": null,
        "has_details": true,
        "type": "void",
        "name": "formatDateTime",
        "brief": "Convert an epoch time into a character string based on the input strftime format string and put it into the given buffer.",
        "description": "<aside class=\"m-note m-info\"><h4>Note</h4><p>This function DOES NOT SUPPORT TIMEZONES. Do not use the z or Z inputs!</p></aside><aside class=\"m-note m-default\"><h4>See also</h4><p><a href=\"https://en.cppreference.com/w/cpp/chrono/c/strftime\">https:/<wbr />/<wbr />en.cppreference.com/<wbr />w/<wbr />cpp/<wbr />chrono/<wbr />c/<wbr />strftime</a> for possible formatting strings.</p></aside>",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "static ",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "buffer",
            "type": "char*",
            "type_name": "char* buffer",
            "default": null,
            "description": "A buffer to put the finished string into. Make sure that the buffer is big enough to hold all of the characters!",
            "direction": ""
          },
          {
            "name": "fmt",
            "type": "const char*",
            "type_name": "const char* fmt",
            "default": null,
            "description": "The strftime format string.",
            "direction": ""
          },
          {
            "name": "in_time",
            "type": "<a href=\"classepoch_time.html\" class=\"m-doc\">epochTime</a>",
            "type_name": "<a href=\"classepoch_time.html\" class=\"m-doc\">epochTime</a> in_time",
            "default": null,
            "description": "An <a href=\"classepoch_time.html\" class=\"m-doc\">epochTime</a> object",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "classlogger_clock.html",
        "id": "a35ddd8237d6ff1cbbb167fe209817b7f",
        "include": null,
        "has_details": true,
        "type": "bool",
        "name": "setRTClock",
        "brief": "Verify that the input value is sane and if so sets the real time clock to the given time.",
        "description": "<aside class=\"m-note m-info\"><h4>Note</h4><p>There is no timezone correction in this function</p></aside>",
        "return_value": "True if the input timestamp passes sanity checks <strong>and</strong> the clock has been successfully set.",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "static ",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "ts",
            "type": "time_t",
            "type_name": "time_t ts",
            "default": null,
            "description": "The number of seconds since the start of the given epoch.",
            "direction": ""
          },
          {
            "name": "utcOffset",
            "type": "int8_t",
            "type_name": "int8_t utcOffset",
            "default": null,
            "description": "The offset of the epoch time from UTC.",
            "direction": ""
          },
          {
            "name": "epoch",
            "type": "<a href=\"_clock_support_8h.html#a8a843903ff31832bf9472f993feac3c1\" class=\"m-doc\">epochStart</a>",
            "type_name": "<a href=\"_clock_support_8h.html#a8a843903ff31832bf9472f993feac3c1\" class=\"m-doc\">epochStart</a> epoch",
            "default": null,
            "description": "The type of epoch to use (ie, the standard for the start of the epoch).",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "classlogger_clock.html",
        "id": "a9352af9e0240d362437968fb837bb01b",
        "include": null,
        "has_details": true,
        "type": "bool",
        "name": "setRTClock",
        "brief": "Verify that the input value is sane and if so sets the real time clock to the given time.",
        "description": "<aside class=\"m-note m-info\"><h4>Note</h4><p>There is no timezone correction in this function</p></aside>",
        "return_value": "True if the input timestamp passes sanity checks <strong>and</strong> the clock has been successfully set.",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "static ",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "in_time",
            "type": "<a href=\"classepoch_time.html\" class=\"m-doc\">epochTime</a>",
            "type_name": "<a href=\"classepoch_time.html\" class=\"m-doc\">epochTime</a> in_time",
            "default": null,
            "description": "An <a href=\"classepoch_time.html\" class=\"m-doc\">epochTime</a> object",
            "direction": ""
          },
          {
            "name": "utcOffset",
            "type": "int8_t",
            "type_name": "int8_t utcOffset",
            "default": null,
            "description": "The offset of the epoch time from UTC.",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "classlogger_clock.html",
        "id": "a78e2630267e94bf5ddcd862dbabd9d10",
        "include": null,
        "has_details": true,
        "type": "bool",
        "name": "isRTCSane",
        "brief": "Check that the current time on the RTC is within a &quot;sane&quot; range.",
        "description": "<p>To be sane the clock must be between <a href=\"_mod_sensor_config_8h.html#aaa4cb795a30c0973e52e7bb92b11de81\" class=\"m-doc\">EARLIEST_<wbr />SANE_<wbr />UNIX_<wbr />TIMESTAMP</a> and <a href=\"_mod_sensor_config_8h.html#ad6b6ed400fb9256bdff2023f8f6b4759\" class=\"m-doc\">LATEST_<wbr />SANE_<wbr />UNIX_<wbr />TIMESTAMP</a>.</p>",
        "return_value": "True if the current time on the RTC passes sanity range checking",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "static ",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": [
          {
            "name": "",
            "type": "void",
            "type_name": "void",
            "default": null,
            "description": "",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "classlogger_clock.html",
        "id": "a1f1b36e4c3d9d94f86f9a45b9ae21204",
        "include": null,
        "has_details": true,
        "type": "bool",
        "name": "isEpochTimeSane",
        "brief": "Check that a given epoch time (seconds since 1970) is within a &quot;sane&quot; range.",
        "description": "<p>To be sane, the clock must be between <a href=\"_mod_sensor_config_8h.html#aaa4cb795a30c0973e52e7bb92b11de81\" class=\"m-doc\">EARLIEST_<wbr />SANE_<wbr />UNIX_<wbr />TIMESTAMP</a> and <a href=\"_mod_sensor_config_8h.html#ad6b6ed400fb9256bdff2023f8f6b4759\" class=\"m-doc\">LATEST_<wbr />SANE_<wbr />UNIX_<wbr />TIMESTAMP</a>.</p>",
        "return_value": "True if the given time passes sanity range checking.",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "static ",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "ts",
            "type": "time_t",
            "type_name": "time_t ts",
            "default": null,
            "description": "The timestamp to check (in seconds since the start of the given epoch).",
            "direction": ""
          },
          {
            "name": "utcOffset",
            "type": "int8_t",
            "type_name": "int8_t utcOffset",
            "default": null,
            "description": "The offset of the epoch time from UTC in hours.",
            "direction": ""
          },
          {
            "name": "epoch",
            "type": "<a href=\"_clock_support_8h.html#a8a843903ff31832bf9472f993feac3c1\" class=\"m-doc\">epochStart</a>",
            "type_name": "<a href=\"_clock_support_8h.html#a8a843903ff31832bf9472f993feac3c1\" class=\"m-doc\">epochStart</a> epoch",
            "default": null,
            "description": "The type of epoch to use (ie, the standard for the start of the epoch).",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "classlogger_clock.html",
        "id": "ae220fa70a318a9a7278a1bd506fb082d",
        "include": null,
        "has_details": true,
        "type": "bool",
        "name": "isEpochTimeSane",
        "brief": "Check that a given epoch time (an <a href=\"classepoch_time.html\" class=\"m-doc\">epochTime</a> object) is within a &quot;sane&quot; range.",
        "description": "<p>To be sane, the clock must be between <a href=\"_mod_sensor_config_8h.html#aaa4cb795a30c0973e52e7bb92b11de81\" class=\"m-doc\">EARLIEST_<wbr />SANE_<wbr />UNIX_<wbr />TIMESTAMP</a> and <a href=\"_mod_sensor_config_8h.html#ad6b6ed400fb9256bdff2023f8f6b4759\" class=\"m-doc\">LATEST_<wbr />SANE_<wbr />UNIX_<wbr />TIMESTAMP</a>.</p>",
        "return_value": "True if the given time passes sanity range checking.",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "static ",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "in_time",
            "type": "<a href=\"classepoch_time.html\" class=\"m-doc\">epochTime</a>",
            "type_name": "<a href=\"classepoch_time.html\" class=\"m-doc\">epochTime</a> in_time",
            "default": null,
            "description": "An <a href=\"classepoch_time.html\" class=\"m-doc\">epochTime</a> object",
            "direction": ""
          },
          {
            "name": "utcOffset",
            "type": "int8_t",
            "type_name": "int8_t utcOffset",
            "default": null,
            "description": "The offset of the epoch time from UTC in hours.",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "classlogger_clock.html",
        "id": "a4501be54379ac667808174db4cad054b",
        "include": null,
        "has_details": true,
        "type": "void",
        "name": "setNextRTCInterrupt",
        "brief": "Set an alarm to fire a clock interrupt at a specific epoch time.",
        "description": "",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "static ",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "ts",
            "type": "time_t",
            "type_name": "time_t ts",
            "default": null,
            "description": "The timestamp for the next interrupt - in seconds from the start of the input epoch.",
            "direction": ""
          },
          {
            "name": "utcOffset",
            "type": "int8_t",
            "type_name": "int8_t utcOffset",
            "default": null,
            "description": "The offset of the epoch time from UTC in hours.",
            "direction": ""
          },
          {
            "name": "epoch",
            "type": "<a href=\"_clock_support_8h.html#a8a843903ff31832bf9472f993feac3c1\" class=\"m-doc\">epochStart</a>",
            "type_name": "<a href=\"_clock_support_8h.html#a8a843903ff31832bf9472f993feac3c1\" class=\"m-doc\">epochStart</a> epoch",
            "default": null,
            "description": "The type of epoch to use (ie, the standard for the start of the epoch).",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "classlogger_clock.html",
        "id": "a9156ebaf6860a6d78cf86474639258d9",
        "include": null,
        "has_details": true,
        "type": "void",
        "name": "setNextRTCInterrupt",
        "brief": "Set an alarm to fire a clock interrupt at a specific epoch time.",
        "description": "",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "static ",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "in_time",
            "type": "<a href=\"classepoch_time.html\" class=\"m-doc\">epochTime</a>",
            "type_name": "<a href=\"classepoch_time.html\" class=\"m-doc\">epochTime</a> in_time",
            "default": null,
            "description": "An <a href=\"classepoch_time.html\" class=\"m-doc\">epochTime</a> object",
            "direction": ""
          },
          {
            "name": "utcOffset",
            "type": "int8_t",
            "type_name": "int8_t utcOffset",
            "default": null,
            "description": "The offset of the epoch time from UTC in hours.",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "classlogger_clock.html",
        "id": "aa1bc19395c441551c0a06b64f521fe78",
        "include": null,
        "has_details": true,
        "type": "void",
        "name": "enablePeriodicRTCInterrupts",
        "brief": "Enable 1 minute interrupts on the RTC.",
        "description": "<p>Unfortunately, most RTC&#x27;s do not seem to follow anything like a cron schedule. Recurring/Periodic alarms can generally be only on single seconds/minutes/hours/days not on custom intervals.</p>",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "static ",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": []
      },
      {
        "base_url": "classlogger_clock.html",
        "id": "a334786455492b44fc36fedb912d47522",
        "include": null,
        "has_details": false,
        "type": "void",
        "name": "disableRTCInterrupts",
        "brief": "Disable interrupts on the RTC.",
        "description": "",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "static ",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": []
      },
      {
        "base_url": "classlogger_clock.html",
        "id": "a4d6c7d14e47c819492bfe05368afc6af",
        "include": null,
        "has_details": true,
        "type": "void",
        "name": "resetClockInterruptStatus",
        "brief": "Reset the clock interrupt status.",
        "description": "<p>Some RTC&#x27;s will not fire a new interrupt until the previous interrupt flag has been cleared.</p><aside class=\"m-note m-info\"><h4>Note</h4><p>Wire/I2C must be active for this function!</p></aside>",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "static ",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": []
      },
      {
        "base_url": "classlogger_clock.html",
        "id": "a7e1a9f946e93b6753df21e22a416c210",
        "include": null,
        "has_details": true,
        "type": "void",
        "name": "rtcISR",
        "brief": "An ISR to run when the clock interrupt fires.",
        "description": "<p>For some clocks, we need to reset the clock&#x27;s interrupt flag so the next interrupt will fire.</p>",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "static ",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": [
          {
            "name": "",
            "type": "void",
            "type_name": "void",
            "default": null,
            "description": "",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "classlogger_clock.html",
        "id": "a8c3e46fffef137a4b1616389f7eeee07",
        "include": null,
        "has_details": true,
        "type": "void",
        "name": "begin",
        "brief": "Start up the real-time clock.",
        "description": "<p>This is used for operations that cannot happen in the constructor - they must happen at run time, not at compile time.</p>",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "static ",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": []
      },
      {
        "base_url": "classlogger_clock.html",
        "id": "a104f3b86e6102497d4c0854ed36e6724",
        "include": null,
        "has_details": true,
        "type": "<a href=\"_clock_support_8h.html#a8a843903ff31832bf9472f993feac3c1\" class=\"m-doc\">epochStart</a>",
        "name": "getCoreEpochStart",
        "brief": "Get the epoch start for the processor/Arduino core as an <a href=\"_clock_support_8h.html#a8a843903ff31832bf9472f993feac3c1\" class=\"m-doc\">epochStart</a> object.",
        "description": "",
        "return_value": "The epoch start for the processor/Arduino core",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "static ",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": []
      },
      {
        "base_url": "classlogger_clock.html",
        "id": "a523465f5dc32e7200ecbc54dfe241494",
        "include": null,
        "has_details": true,
        "type": "<a href=\"_clock_support_8h.html#a8a843903ff31832bf9472f993feac3c1\" class=\"m-doc\">epochStart</a>",
        "name": "getRTCEpochStart",
        "brief": "Get the epoch start for the RTC as an <a href=\"_clock_support_8h.html#a8a843903ff31832bf9472f993feac3c1\" class=\"m-doc\">epochStart</a> object.",
        "description": "",
        "return_value": "The epoch start for the RTC",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "static ",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": []
      }
    ],
    "typeless_funcs": [],
    "public_funcs": [],
    "signals": [],
    "public_slots": [],
    "public_static_vars": [],
    "public_vars": [],
    "protected_types": [],
    "protected_static_funcs": [
      {
        "base_url": "classlogger_clock.html",
        "id": "abab6f37451ec2c831e57d1dff8d8c68c",
        "include": null,
        "has_details": true,
        "type": "<a href=\"_clock_support_8h.html#a8a843903ff31832bf9472f993feac3c1\" class=\"m-doc\">epochStart</a>",
        "name": "getProcessorEpochStart",
        "brief": "Figure out where the epoch starts for the processor.",
        "description": "<p>The real time clock libraries mostly document this, but the cores for the various Arduino processors don&#x27;t. The time.h file is not much more than a stub.</p>",
        "return_value": "The start of the epoch",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "static ",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": true,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": []
      },
      {
        "base_url": "classlogger_clock.html",
        "id": "ab1416340bf9ca1b2edc89e3147c48adc",
        "include": null,
        "has_details": true,
        "type": "time_t",
        "name": "tsToRawRTC",
        "brief": "Convert a timestamp with the given offset and epoch to the RTC internal epoch and UTC offset.",
        "description": "",
        "return_value": "A timestamp converted to the epoch and timezone used internally by the RTC",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "static ",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": true,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "ts",
            "type": "time_t",
            "type_name": "time_t ts",
            "default": null,
            "description": "The input epoch time - in seconds since the start of the input epoch.",
            "direction": ""
          },
          {
            "name": "utcOffset",
            "type": "int8_t",
            "type_name": "int8_t utcOffset",
            "default": null,
            "description": "The offset of the input epoch time from UTC in hours.",
            "direction": ""
          },
          {
            "name": "epoch",
            "type": "<a href=\"_clock_support_8h.html#a8a843903ff31832bf9472f993feac3c1\" class=\"m-doc\">epochStart</a>",
            "type_name": "<a href=\"_clock_support_8h.html#a8a843903ff31832bf9472f993feac3c1\" class=\"m-doc\">epochStart</a> epoch",
            "default": null,
            "description": "The type of epoch of the input timestamp",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "classlogger_clock.html",
        "id": "a386359170fa53807a79d32be269047ab",
        "include": null,
        "has_details": true,
        "type": "time_t",
        "name": "tsFromRawRTC",
        "brief": "Convert a timestamp from the RTC&#x27;s internal epoch and UTC offset to the requested offset and epoch.",
        "description": "",
        "return_value": "A timestamp converted from the epoch and timezone used internally by the RTC to the requested epoch and offset",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "static ",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": true,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "ts",
            "type": "time_t",
            "type_name": "time_t ts",
            "default": null,
            "description": "The timestamp in the epoch and timezone used internally by the RTC.",
            "direction": ""
          },
          {
            "name": "utcOffset",
            "type": "int8_t",
            "type_name": "int8_t utcOffset",
            "default": null,
            "description": "The offset of the desired output epoch time from UTC in hours.",
            "direction": ""
          },
          {
            "name": "epoch",
            "type": "<a href=\"_clock_support_8h.html#a8a843903ff31832bf9472f993feac3c1\" class=\"m-doc\">epochStart</a>",
            "type_name": "<a href=\"_clock_support_8h.html#a8a843903ff31832bf9472f993feac3c1\" class=\"m-doc\">epochStart</a> epoch",
            "default": null,
            "description": "The type of epoch of the output timestamp",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "classlogger_clock.html",
        "id": "aa8de3efaae267a078c882910de385ca6",
        "include": null,
        "has_details": true,
        "type": "time_t",
        "name": "getRawRTCNow",
        "brief": "Get a raw epoch time from the RTC.",
        "description": "",
        "return_value": "The raw epoch time from the RTC",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "static ",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": true,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": []
      },
      {
        "base_url": "classlogger_clock.html",
        "id": "a5789a2dfa0df572775ac1a26178380a7",
        "include": null,
        "has_details": true,
        "type": "void",
        "name": "setRawRTCNow",
        "brief": "Sets the RTC to exactly the epoch time provided.",
        "description": "",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "static ",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": true,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "ts",
            "type": "time_t",
            "type_name": "time_t ts",
            "default": null,
            "description": "A timestamp already in the epoch and timezone used internally by the RTC",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "classlogger_clock.html",
        "id": "ae35edfb2ff60d6b828b2f148a4589f6f",
        "include": null,
        "has_details": false,
        "type": "void",
        "name": "rtcBegin",
        "brief": "Begins the underlying RTC.",
        "description": "",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "static ",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": true,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": []
      }
    ],
    "protected_funcs": [],
    "protected_slots": [],
    "protected_static_vars": [
      {
        "base_url": "classlogger_clock.html",
        "id": "af35da51711dd6479dca316870e6abe9b",
        "include": null,
        "has_details": false,
        "type": "<a href=\"_clock_support_8h.html#a8a843903ff31832bf9472f993feac3c1\" class=\"m-doc\">epochStart</a>",
        "is_constexpr": false,
        "is_static": true,
        "is_protected": true,
        "is_private": false,
        "name": "_core_epoch",
        "brief": "The start of the epoch for the processor&#x27;s internal time.h library.",
        "description": "",
        "deprecated": null,
        "since": null,
        "has_template_details": false,
        "templates": null
      },
      {
        "base_url": "classlogger_clock.html",
        "id": "adaf3f26eb88aeb24bbaa073856b4f1fb",
        "include": null,
        "has_details": false,
        "type": "int8_t",
        "is_constexpr": false,
        "is_static": true,
        "is_protected": true,
        "is_private": false,
        "name": "_rtcUTCOffset",
        "brief": "The static offset data of the real time clock from UTC in hours.",
        "description": "",
        "deprecated": null,
        "since": null,
        "has_template_details": false,
        "templates": null
      },
      {
        "base_url": "classlogger_clock.html",
        "id": "abe31075353a95a6bbbba6ef52846508c",
        "include": null,
        "has_details": false,
        "type": "<a href=\"_clock_support_8h.html#a8a843903ff31832bf9472f993feac3c1\" class=\"m-doc\">epochStart</a>",
        "is_constexpr": false,
        "is_static": true,
        "is_protected": true,
        "is_private": false,
        "name": "_rtcEpoch",
        "brief": "The start of the epoch for the RTC (or the RTC&#x27;s library).",
        "description": "",
        "deprecated": null,
        "since": null,
        "has_template_details": false,
        "templates": null
      }
    ],
    "protected_vars": [],
    "private_funcs": [],
    "private_slots": [],
    "related": [],
    "friend_funcs": [],
    "groups": [],
    "has_enum_details": false,
    "has_typedef_details": false,
    "has_func_details": true,
    "has_var_details": false,
    "has_define_details": false,
    "breadcrumb": [
      [
        "loggerClock",
        "classlogger_clock.html"
      ]
    ],
    "breadcrumbGroup": [
      [
        "loggerClock",
        "classlogger_clock.html"
      ]
    ],
    "is_final": false,
    "prefix_wbr": "loggerClock::<wbr />"
  }
}