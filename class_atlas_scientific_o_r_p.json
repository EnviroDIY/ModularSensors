{
  "version": "1.12.0",
  "compound": {
    "kind": "class",
    "id": "class_atlas_scientific_o_r_p",
    "name": "AtlasScientificORP",
    "url_base": "class_atlas_scientific_o_r_p",
    "url": "class_atlas_scientific_o_r_p.html",
    "include": [
      "&lt;src/sensors/AtlasScientificORP.h&gt;",
      "_atlas_scientific_o_r_p_8h.html"
    ],
    "has_template_details": false,
    "templates": null,
    "brief": "The <a href=\"class_sensor.html\" class=\"m-doc\">Sensor</a> sub-class for the <a href=\"group__sensor__atlas__orp.html\" class=\"m-doc\">Atlas Scientific ORP (oxidation/reduction potential) sensor</a>.",
    "description": "",
    "sections": "",
    "deprecated": null,
    "since": null,
    "example_navigation": null,
    "footer_navigation": null,
    "topics": [],
    "dirs": [],
    "files": [],
    "namespaces": [],
    "classes": [],
    "base_classes": [
      {
        "kind": "class",
        "url": "class_atlas_parent.html",
        "name": "AtlasParent",
        "brief": "A parent class for Atlas EZO circuits and sensors.",
        "templates": null,
        "deprecated": null,
        "since": null,
        "is_protected": false,
        "is_virtual": false
      }
    ],
    "derived_classes": [],
    "enums": [],
    "typedefs": [],
    "funcs": [],
    "vars": [],
    "defines": [],
    "public_types": [],
    "public_static_funcs": [],
    "typeless_funcs": [
      {
        "base_url": "class_atlas_scientific_o_r_p.html",
        "id": "a4bf7be24db4890f7fa59721bb3912151",
        "include": null,
        "has_details": true,
        "type": "",
        "name": "AtlasScientificORP",
        "brief": "Construct a new Atlas Scientific ORP object using a secondary <em>hardware</em> I2C instance.",
        "description": "<aside class=\"m-note m-danger\"><h4>Warning</h4><p><strong>You must isolate the data lines of all Atlas circuits from the main I2C bus if you wish to turn off their power!</strong> If you do not isolate them from your main I2C bus and you turn off power to the circuits between measurements the I2C lines will be pulled down to ground causing the I2C bus (and thus your logger) to crash.</p></aside>",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "theI2C",
            "type": "TwoWire*",
            "type_name": "TwoWire* theI2C",
            "default": null,
            "description": "A TwoWire instance for I2C communication. Due to the limitations of the Arduino core, only a hardware I2C instance can be used. For an AVR board, there is only one I2C instance possible and this form of the constructor should not be used. For a SAMD board, this can be used if a secondary I2C port is created on one of the extra SERCOMs.",
            "direction": ""
          },
          {
            "name": "powerPin",
            "type": "int8_t",
            "type_name": "int8_t powerPin",
            "default": null,
            "description": "<p>The pin on the mcu controlling powering to the Atlas ORP circuit. Use -1 if it is continuously powered.</p><ul><li>Requires a 3.3V and 5V power supply</li></ul>",
            "direction": ""
          },
          {
            "name": "i2cAddressHex",
            "type": "uint8_t",
            "type_name": "uint8_t i2cAddressHex",
            "default": "0x62",
            "description": "The I2C address of the Atlas circuit; optional with the Atlas-supplied default address of 0x62.",
            "direction": ""
          },
          {
            "name": "measurementsToAverage",
            "type": "uint8_t",
            "type_name": "uint8_t measurementsToAverage",
            "default": "1",
            "description": "The number of measurements to take and average before giving a &quot;final&quot; result from the sensor; optional with a default value of 1.",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_atlas_scientific_o_r_p.html",
        "id": "aa6dada61c62decff65d4731604e790f6",
        "include": null,
        "has_details": true,
        "type": "",
        "name": "AtlasScientificORP",
        "brief": "Construct a new Atlas Scientific ORP object using the primary hardware I2C instance.",
        "description": "<aside class=\"m-note m-danger\"><h4>Warning</h4><p><strong>You must isolate the data lines of all Atlas circuits from the main I2C bus if you wish to turn off their power!</strong> If you do not isolate them from your main I2C bus and you turn off power to the circuits between measurements the I2C lines will be pulled down to ground causing the I2C bus (and thus your logger) to crash.</p></aside>",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": true,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "powerPin",
            "type": "int8_t",
            "type_name": "int8_t powerPin",
            "default": null,
            "description": "<p>The pin on the mcu controlling powering to the Atlas ORP circuit. Use -1 if it is continuously powered.</p><ul><li>Requires a 3.3V and 5V power supply</li></ul>",
            "direction": ""
          },
          {
            "name": "i2cAddressHex",
            "type": "uint8_t",
            "type_name": "uint8_t i2cAddressHex",
            "default": "0x62",
            "description": "The I2C address of the Atlas circuit; optional with the Atlas-supplied default address of 0x62.",
            "direction": ""
          },
          {
            "name": "measurementsToAverage",
            "type": "uint8_t",
            "type_name": "uint8_t measurementsToAverage",
            "default": "1",
            "description": "The number of measurements to take and average before giving a &quot;final&quot; result from the sensor; optional with a default value of 1.",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_atlas_scientific_o_r_p.html",
        "id": "a4979b77fadd705f07efce1f63e82a358",
        "include": null,
        "has_details": false,
        "type": "",
        "name": "~AtlasScientificORP",
        "brief": "Destroy the Atlas Scientific ORP object.",
        "description": "",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": []
      }
    ],
    "public_funcs": [],
    "signals": [],
    "public_slots": [],
    "public_static_vars": [],
    "public_vars": [],
    "protected_types": [],
    "protected_static_funcs": [],
    "protected_funcs": [],
    "protected_slots": [],
    "protected_static_vars": [],
    "protected_vars": [],
    "private_funcs": [],
    "private_slots": [],
    "related": [],
    "friend_funcs": [],
    "groups": [],
    "has_enum_details": false,
    "has_typedef_details": false,
    "has_func_details": true,
    "has_var_details": false,
    "has_define_details": false,
    "breadcrumb": [
      [
        "Sensor",
        "class_sensor.html"
      ],
      [
        "AtlasParent",
        "class_atlas_parent.html"
      ],
      [
        "AtlasScientificORP",
        "class_atlas_scientific_o_r_p.html"
      ]
    ],
    "breadcrumbGroup": [
      [
        "Atlas EZO-ORP",
        "group__sensor__atlas__orp.html"
      ],
      [
        "AtlasScientificORP",
        "class_atlas_scientific_o_r_p.html"
      ]
    ],
    "is_final": false,
    "prefix_wbr": "AtlasScientificORP::<wbr />"
  }
}