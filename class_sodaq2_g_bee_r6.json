{
  "version": "1.12.0",
  "compound": {
    "kind": "class",
    "id": "class_sodaq2_g_bee_r6",
    "name": "Sodaq2GBeeR6",
    "url_base": "class_sodaq2_g_bee_r6",
    "url": "class_sodaq2_g_bee_r6.html",
    "include": [
      "&lt;src/modems/Sodaq2GBeeR6.h&gt;",
      "_sodaq2_g_bee_r6_8h.html"
    ],
    "has_template_details": false,
    "templates": null,
    "brief": "The <a href=\"classlogger_modem.html\" class=\"m-doc\">loggerModem</a> subclass for the <a href=\"group__modem__gprsbee.html\" class=\"m-doc\">Sodaq 2GBee</a> revisions 6 and higher based on the SIMCOM SIM800H.",
    "description": "<aside class=\"m-note m-info\"><h4>Note</h4><p>The Sodaq GPRSBee doesn&#x27;t expose the SIM800&#x27;s reset pin..</p><p>The power pin of the SIM800 is wired to the XBee&#x27;s <code>DTR</code> pin, the <code>PWR_KEY</code> itself is not exposed - it is tied inversely to the power in to the module. This leaves no way to wake up from minimum power mode. To prevent large power draw, the module must be powered off between data points.</p><p>The normal <code>Vin</code> pin of the Bee socket (pin 1) is used for voltage reference only.</p></aside>",
    "sections": "",
    "deprecated": null,
    "since": null,
    "example_navigation": null,
    "footer_navigation": null,
    "topics": [],
    "dirs": [],
    "files": [],
    "namespaces": [],
    "classes": [],
    "base_classes": [
      {
        "kind": "class",
        "url": "class_s_i_m_com_s_i_m800.html",
        "name": "SIMComSIM800",
        "brief": "The <a href=\"classlogger_modem.html\" class=\"m-doc\">loggerModem</a> subclass for the Adafruit Fona 2G, the Sodaq GPRSBeeR4 and almost any other module based on the <a href=\"group__modem__sim800.html\" class=\"m-doc\">SIMCOM SIM800 or SIM900 modules and</a>thier variants&quot;.",
        "templates": null,
        "deprecated": null,
        "since": null,
        "is_protected": false,
        "is_virtual": false
      }
    ],
    "derived_classes": [],
    "enums": [],
    "typedefs": [],
    "funcs": [],
    "vars": [],
    "defines": [],
    "public_types": [],
    "public_static_funcs": [],
    "typeless_funcs": [
      {
        "base_url": "class_sodaq2_g_bee_r6.html",
        "id": "a036118f60ec474cc2826017d35024630",
        "include": null,
        "has_details": true,
        "type": "",
        "name": "Sodaq2GBeeR6",
        "brief": "Construct a new Sodaq 2GBee R6 object.",
        "description": "<p>The constuctor initializes all of the provided member variables, constructs a <a href=\"classlogger_modem.html\" class=\"m-doc\">loggerModem</a> parent class with the appropriate timing for the module, calls the constructor for a TinyGSM modem on the provided modemStream, and creates a TinyGSM Client linked to the modem.</p><p>Should be set to a negative number if the modem should be continuously powered or the power cannot be controlled by the MCU.    \nShould be set to a negative number if the modem status pin cannot be read.    This is the pin labeled <code>STATUS</code> in Sodaq (and SIMCom)&#x27;s documentation.</p><aside class=\"m-note m-default\"><h4>See also</h4><p><a href=\"class_s_i_m_com_s_i_m800.html#a2d6c990b7f5fd7aa52d87bddedc99031\" class=\"m-doc\">SIMComSIM800::<wbr />SIMComSIM800</a></p></aside>",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "modemStream",
            "type": "Stream*",
            "type_name": "Stream* modemStream",
            "default": null,
            "description": "The Arduino stream instance for serial communication.",
            "direction": ""
          },
          {
            "name": "powerPin",
            "type": "int8_t",
            "type_name": "int8_t powerPin",
            "default": null,
            "description": "The digital pin number of the mcu pin controlling power to the modem (active <code>HIGH</code>).",
            "direction": ""
          },
          {
            "name": "statusPin",
            "type": "int8_t",
            "type_name": "int8_t statusPin",
            "default": null,
            "description": "The digital pin number of the mcu pin connected to the modem status output pin.",
            "direction": ""
          },
          {
            "name": "apn",
            "type": "const char*",
            "type_name": "const char* apn",
            "default": null,
            "description": "The Access Point Name (APN) for the SIM card.",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_sodaq2_g_bee_r6.html",
        "id": "a3c9a58fbf6034598e219c0e05edf912a",
        "include": null,
        "has_details": true,
        "type": "",
        "name": "Sodaq2GBeeR6",
        "brief": "Construct a new Sodaq 2GBee R6 object.",
        "description": "<p>The constuctor initializes all of the provided member variables, constructs a <a href=\"classlogger_modem.html\" class=\"m-doc\">loggerModem</a> parent class with the appropriate timing for the module, calls the constructor for a TinyGSM modem on the provided modemStream, and creates a TinyGSM Client linked to the modem.</p><p>Should be set to a negative number if the modem status pin cannot be read.    This is the pin labeled <code>STATUS</code> in Sodaq (and SIMCom)&#x27;s documentation. \nShould be set to a negative number if the modem should be continuously powered or the power cannot be controlled by the MCU.</p><aside class=\"m-note m-info\"><h4>Note</h4><p>The order of the pins in the constructor is different from other modems for backwards compatibility and because the Sodaq documentation is somewhat muddled on the distinction between the <code>PWRKEY</code> and the module power in.</p></aside>",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "modemStream",
            "type": "Stream*",
            "type_name": "Stream* modemStream",
            "default": null,
            "description": "The Arduino stream instance for serial communication.",
            "direction": ""
          },
          {
            "name": "vRefPin",
            "type": "int8_t",
            "type_name": "int8_t vRefPin",
            "default": null,
            "description": "The digital pin number of a pin on the mcu controlling the voltage reference (pin 1) for the GPRSBee",
            "direction": ""
          },
          {
            "name": "statusPin",
            "type": "int8_t",
            "type_name": "int8_t statusPin",
            "default": null,
            "description": "The digital pin number of the mcu pin connected to the modem status output pin.",
            "direction": ""
          },
          {
            "name": "powerPin",
            "type": "int8_t",
            "type_name": "int8_t powerPin",
            "default": null,
            "description": "The digital pin number of the mcu pin controlling power to the modem (active <code>HIGH</code>).",
            "direction": ""
          },
          {
            "name": "apn",
            "type": "const char*",
            "type_name": "const char* apn",
            "default": null,
            "description": "The Access Point Name (APN) for the SIM card.",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_sodaq2_g_bee_r6.html",
        "id": "a710deef60102bb0899d2376bd89f89b5",
        "include": null,
        "has_details": false,
        "type": "",
        "name": "~Sodaq2GBeeR6",
        "brief": "Destroy the Sodaq 2GBee R6 object - no action taken.",
        "description": "",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": []
      }
    ],
    "public_funcs": [
      {
        "base_url": "class_sodaq2_g_bee_r6.html",
        "id": "a12a82ccab70d6eb12cbf5070412119ce",
        "include": null,
        "has_details": true,
        "type": "void",
        "name": "setVRefPin",
        "brief": "Sets the pin to use to control voltage reference on the GPRSBee.",
        "description": "",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "vRefPin",
            "type": "int8_t",
            "type_name": "int8_t vRefPin",
            "default": null,
            "description": "The pin on the MCU controlling the <code>VREF</code> pin on the GPRSBee (bee pin 1).",
            "direction": ""
          }
        ]
      }
    ],
    "signals": [],
    "public_slots": [],
    "public_static_vars": [],
    "public_vars": [],
    "protected_types": [],
    "protected_static_funcs": [],
    "protected_funcs": [
      {
        "base_url": "class_sodaq2_g_bee_r6.html",
        "id": "ae49fe66a3a76e65ee0613018aeb5aa5e",
        "include": null,
        "has_details": true,
        "type": "bool",
        "name": "modemSleepFxn",
        "brief": "Perform the parts of the modem sleep process that are unique to a specific module, as opposed to the parts of setup that are common to all modem modules.",
        "description": "",
        "return_value": "True if the unique part of the sleep function ran sucessfully.",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": true,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": true,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": true,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": [
          {
            "name": "",
            "type": "void",
            "type_name": "void",
            "default": null,
            "description": "",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_sodaq2_g_bee_r6.html",
        "id": "a96eb79a6217bf2696053496adda6727f",
        "include": null,
        "has_details": true,
        "type": "bool",
        "name": "modemWakeFxn",
        "brief": "Perform the parts of the modem wake up process that are unique to a specific module, as opposed to the parts of setup that are common to all modem modules.",
        "description": "",
        "return_value": "True if the unique part of the wake function ran sucessfully - does <em>NOT</em> indicate that the modem is now responsive.",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": true,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": true,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": true,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": [
          {
            "name": "",
            "type": "void",
            "type_name": "void",
            "default": null,
            "description": "",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_sodaq2_g_bee_r6.html",
        "id": "af2b1bcecffff242b840accf0e0480222",
        "include": null,
        "has_details": true,
        "type": "bool",
        "name": "extraModemSetup",
        "brief": "Perform the parts of the modem set up process that are unique to a specific module, as opposed to the parts of setup that are common to all modem modules.",
        "description": "<p>For most modules, this function is created by the <a href=\"_logger_modem_macros_8h.html#ace5bab37413b7bcc6954068b5c9db9e5\" class=\"m-doc\">MS_<wbr />MODEM_<wbr />EXTRA_<wbr />SETUP</a> macro which runs the TinyGSM modem init() and client init() functions.</p>",
        "return_value": "True if the extra setup succeeded.",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": true,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": true,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": true,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": [
          {
            "name": "",
            "type": "void",
            "type_name": "void",
            "default": null,
            "description": "",
            "direction": ""
          }
        ]
      }
    ],
    "protected_slots": [],
    "protected_static_vars": [],
    "protected_vars": [],
    "private_funcs": [],
    "private_slots": [],
    "related": [],
    "friend_funcs": [],
    "groups": [],
    "has_enum_details": false,
    "has_typedef_details": false,
    "has_func_details": true,
    "has_var_details": false,
    "has_define_details": false,
    "breadcrumb": [
      [
        "loggerModem",
        "classlogger_modem.html"
      ],
      [
        "SIMComSIM800",
        "class_s_i_m_com_s_i_m800.html"
      ],
      [
        "Sodaq2GBeeR6",
        "class_sodaq2_g_bee_r6.html"
      ]
    ],
    "breadcrumbGroup": [
      [
        "Sodaq GPRSBee",
        "group__modem__gprsbee.html"
      ],
      [
        "Sodaq2GBeeR6",
        "class_sodaq2_g_bee_r6.html"
      ]
    ],
    "is_final": false,
    "prefix_wbr": "Sodaq2GBeeR6::<wbr />"
  }
}