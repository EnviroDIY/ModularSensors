name: Build and Publish Documentation

on:
  # Trigger the workflow on push or pull request,
  # but only for the main branch
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  # Also trigger on page_build, as well as release created events
  page_build:
  release:
    types: # This configuration does not affect the page_build event above
      - created

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # check out the ModularSensors repo
      - uses: actions/checkout@v2
        with:
          path: code_docs/ModularSensors

      - name: Restore or Cache pip
        uses: actions/cache@v2
        with:
          path: m.css
          # if requirements.txt hasn't changed, then it will be a "cache hit" and pip will be restored
          # if requirements.txt HAS changed, it will be a "cache miss" and a new cache of pip will be created if the job completes successfully
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Set up Python
        uses: actions/setup-python@v2

      # check out my fork of m.css, for processing Doxygen output
      - name: Checkout m.css
        uses: actions/checkout@v2
        with:
          # Repository name with owner. For example, actions/checkout
          repository: SRGDamia1/m.css
          path: code_docs/m.css

      - name: Update the style sheets
        run: |
          cd $GITHUB_WORKSPACE/code_docs/m.css/css/EnviroDIY
          python $GITHUB_WORKSPACE/code_docs/m.css/css/postprocess.py "m-EnviroDIY.css"
          python $GITHUB_WORKSPACE/code_docs/m.css/css/postprocess.py "m-EnviroDIY.css" "m-documentation.css" -o "m-EnviroDIY+documentation.compiled.css"
          python $GITHUB_WORKSPACE/code_docs/m.css/css/postprocess.py "m-EnviroDIY.css" "m-theme-EnviroDIY.css" "m-documentation.css" --no-import -o "m-EnviroDIY.documentation.compiled.css"
          cp $GITHUB_WORKSPACE/code_docs/m.css/css/EnviroDIY/m-EnviroDIY+documentation.compiled.css $GITHUB_WORKSPACE/code_docs/ModularSensors/docs/css

      - name: Creating dox files from example read-me files
        run: |
          cd $GITHUB_WORKSPACE/code_docs/ModularSensors/docs
          python documentExamples.py

      - name: Generate Doxygen code documentation
        uses: tommcn/doxygen-action@v1.3

      - name: Fix errant xml section names in examples as generated by Doxygen
        run: python fixXmlExampleSections.py

      - name: Post-processing Doxygen xml with m.css
        run: python $GITHUB_WORKSPACE/code_docs/m.css/documentation/doxygen.py "mcss-conf.py" --no-doxygen --output output_mcss.log --templates "$GITHUB_WORKSPACE/code_docs/m.css/documentation/templates/EnviroDIY"

      - name: Copy function docs into group docs
        run: python copyFunctions.py

      - name: Deploy to github pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: $GITHUB_WORKSPACE/code_docs/ModularSensorsDoxygen/m.css
