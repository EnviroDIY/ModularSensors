name: Build and Publish Documentation

on:
  # Trigger the workflow on push or pull request,
  # but only for the main branch
  push:
    branches:
      - master
  # Also trigger on page_build, as well as release created events
  page_build:
  release:
    types: # This configuration does not affect the page_build event above
      - created

env:
  DOXYGEN_VERSION: Release_1_9_1

jobs:
  build:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'ci skip')"

    steps:
      # check out the ModularSensors repo
      - uses: actions/checkout@v2.3.5
        with:
          path: code_docs/ModularSensors

      - name: Set up Python
        uses: actions/setup-python@v2.2.2

      - name: Install PlatformIO
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade platformio

      - name: Restore or Cache PlatformIO and Libraries
        uses: actions/cache@v2.1.6
        id: cache_pio
        with:
          path: ~/.platformio
          # if nothing in the dependencies.json file has changed, then it will
          # be a "cache hit" and we can restore libraries from cache and not
          # download them.  If it has changed we have to re-download.
          key: ${{ hashFiles('./code_docs/ModularSensors/continuous_integration/dependencies.json') }}

      # Install *all* the dependencies!
      # We're including the dependencies just so the includes can follow in the doxygen pre-processor
      - name: Install the dependencies at global level
        if: steps.cache_pio.outputs.cache-hit != 'true'
        run: |
          cd ${{ github.workspace }}/code_docs/ModularSensors/
          chmod +x continuous_integration/install-deps-platformio.sh
          sh continuous_integration/install-deps-platformio.sh

      - name: Install GraphViz (dot)
        run: sudo apt-get -y install graphviz

      - name: Restore or Cache Doxygen
        id: cache_doxygen
        uses: actions/cache@v2.1.6
        with:
          path: doxygen-src
          key: ${{ runner.os }}-doxygen-${{ env.DOXYGEN_VERSION }}

      - name: Clone and build doxygen
        if: steps.cache_doxygen.outputs.cache-hit != 'true'
        env:
          TRAVIS_BUILD_DIR: ${{ github.workspace }}
        run: |
          cd ${{ github.workspace }}/code_docs/ModularSensors/
          chmod +x continuous_integration/build-install-doxygen.sh
          sh continuous_integration/build-install-doxygen.sh

      # This should be pulled from cache, if there's not a new version
      - name: Install Pygments and other m.css requirements
        run: pip3 install jinja2 Pygments beautifulsoup4

      # check out my fork of m.css, for processing Doxygen output
      - name: Checkout m.css
        uses: actions/checkout@v2.3.5
        with:
          # Repository name with owner. For example, actions/checkout
          repository: SRGDamia1/m.css
          path: code_docs/m.css

      - name: Generate all the documentation
        env:
          TRAVIS_BUILD_DIR: ${{ github.workspace }}
        run: |
          cd ${{ github.workspace }}/code_docs/ModularSensors/
          chmod +x continuous_integration/generate-documentation.sh
          sh continuous_integration/generate-documentation.sh

      - name: Deploy to github pages
        uses: peaceiris/actions-gh-pages@v3.8.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ${{ github.workspace }}/code_docs/ModularSensorsDoxygen/m.css
