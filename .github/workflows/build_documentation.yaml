name: Check and Publish Documentation

on:
  # Triggers the workflow on push or pull request events
  push:
  pull_request:
  # Trigger when a release is created
  release:
    types:
      - published
  # Also give a manual trigger
  workflow_dispatch:
    inputs:
      publish:
        description: 'Publish Documentation to GitHub Pages'
        required: false
        type: boolean
        default: false

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  REBUILD_CACHE_NUMBER: 2
  PYTHON_DEPS_ARCHIVE_NUM: 2
  DOXYGEN_VERSION: Release_1_9_6
  TEX_VERSION: 2019
  # ^^ 2019 is the latest TeX live available on apt-get and that's good enough
  GRAPHVIZ_VERSION: 2.43.0

jobs:
  check_menu_inclusion:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'ci skip')"

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: check for classes in the menu example
        run: |
          cd $GITHUB_WORKSPACE/continuous_integration
          python check_component_inclusion.py

  doc_build:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'ci skip')"

    steps:
      # check out the ModularSensors repo
      - uses: actions/checkout@v3
        with:
          path: code_docs/ModularSensors

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Restore Python Dependencies
        uses: actions/cache@v3
        id: cache_python
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-python-${{ env.REBUILD_CACHE_NUMBER }}-${{ env.PYTHON_DEPS_ARCHIVE_NUM }}

      - name: Install Pygments and other m.css Python Requirements
        run: |
          python -m pip install --upgrade pip
          pip3 install --upgrade --upgrade-strategy only-if-needed jinja2 Pygments beautifulsoup4

      - name: Restore Doxygen, Graphviz, and TeX Live
        id: cache_doxygen
        uses: actions/cache@v3
        with:
          path: |
            /usr/lib/x86_64-linux-gnu/texlive
            /usr/lib/x86_64-linux-gnu/graphviz
            doxygen-src
          key: ${{ runner.os }}-doxygen-${{ env.REBUILD_CACHE_NUMBER }}-${{ env.DOXYGEN_VERSION }}-${{ env.TEX_VERSION }}-${{ env.GRAPHVIZ_VERSION }}

      - name: Build and install doxygen and its dependencies
        if: steps.cache_doxygen.outputs.cache-hit != 'true'
        env:
          TRAVIS_BUILD_DIR: ${{ github.workspace }}
        run: |
          cd ${{ github.workspace }}/code_docs/ModularSensors/
          chmod +x continuous_integration/build-install-doxygen.sh
          sh continuous_integration/build-install-doxygen.sh

      # check out my fork of m.css, for processing Doxygen output
      - name: Checkout m.css
        uses: actions/checkout@v3
        with:
          # Repository name with owner. For example, actions/checkout
          repository: SRGDamia1/m.css
          path: code_docs/m.css

      - name: Generate all the documentation
        env:
          TRAVIS_BUILD_DIR: ${{ github.workspace }}
        run: |
          cd ${{ github.workspace }}/code_docs/ModularSensors/
          chmod +x continuous_integration/generate-documentation.sh
          sh continuous_integration/generate-documentation.sh

      - name: Deploy to github pages
        if: "(github.event_name == 'release' && github.event.action == 'published') || (github.event_name == 'workflow_dispatch' && github.event.inputs.publish == 'true')"
        uses: peaceiris/actions-gh-pages@v3.9.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ${{ github.workspace }}/code_docs/ModularSensorsDoxygen/m.css
