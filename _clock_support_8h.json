{
  "version": "1.14.0",
  "compound": {
    "kind": "file",
    "id": "_clock_support_8h",
    "name": "ClockSupport.h",
    "url_base": "_clock_support_8h",
    "url": "_clock_support_8h.html",
    "include": null,
    "has_template_details": false,
    "templates": null,
    "brief": "Contains the <a href=\"#a8a843903ff31832bf9472f993feac3c1\" class=\"m-doc\">epochStart</a> class, which is a helper to convert between various time types used by different processors and the <a href=\"classlogger_clock.html\" class=\"m-doc\">loggerClock</a> class.",
    "description": "<aside class=\"m-note m-default\"><h4>Copyright</h4><p>Stroud Water Research Center Part of the EnviroDIY ModularSensors library for Arduino. This library is published under the BSD-3 license.</p></aside><aside class=\"m-note m-default\"><h4>Author</h4><p>Sara Geleskie Damiano <a href=\"mailto:sdamiano@stroudcenter.org\">sdamiano@stroudcenter.org</a></p></aside>",
    "sections": "",
    "deprecated": null,
    "since": null,
    "example_navigation": null,
    "footer_navigation": null,
    "topics": [],
    "dirs": [],
    "files": [],
    "namespaces": [],
    "classes": [
      {
        "kind": "class",
        "url": "classepoch_time.html",
        "name": "epochTime",
        "brief": "A class for dealing with different definitions of the start of the epoch.",
        "deprecated": null,
        "since": null,
        "templates": null
      },
      {
        "kind": "class",
        "url": "classlogger_clock.html",
        "name": "loggerClock",
        "brief": "A class for the clock attached to the logger.",
        "deprecated": null,
        "since": null,
        "templates": null
      }
    ],
    "base_classes": [],
    "derived_classes": [],
    "enums": [
      {
        "base_url": "_clock_support_8h.html",
        "id": "a8a843903ff31832bf9472f993feac3c1",
        "include": null,
        "has_details": true,
        "type": "time_t",
        "name": "epochStart",
        "brief": "Set the epoch start value.",
        "description": "<aside class=\"m-note m-danger\"><h4>Warning</h4><p>8-bit AVR processors use a uint32_t for time_t. Given the start of the first epoch here is 1900, this will roll over and cease to work for processors with a uint32_t time_t on February 7, 2036 6:28:15 AM</p></aside><aside class=\"m-note m-info\"><h4>Note</h4><p>: for AVR boards time_t is a typedef for uint32_t, defined in time.h For SAMD time_t is a typedef for __int_least64_t _timeval.h implicit cast to time_t</p></aside>",
        "deprecated": null,
        "since": null,
        "is_protected": false,
        "is_strong": true,
        "values": [
          {
            "id": "a8a843903ff31832bf9472f993feac3c1a83a7a99239cee717316ec5aae5561755",
            "name": "unix_epoch",
            "initializer": "=\n        2208988800",
            "brief": "Use a Unix epoch, starting Jan 1, 1970. This is the default for this library.",
            "description": "",
            "deprecated": null,
            "since": null
          },
          {
            "id": "a8a843903ff31832bf9472f993feac3c1aaaf4cdbf64565bfda963360fe030419f",
            "name": "y2k_epoch",
            "initializer": "= 2208988800 +\n        946684800",
            "brief": "Use an epoch starting Jan 1, 2000, as some RTC&#x27;s and Arduinos do (946684800s ahead of UNIX epoch)",
            "description": "",
            "deprecated": null,
            "since": null
          },
          {
            "id": "a8a843903ff31832bf9472f993feac3c1a93258b97817384687415abd11b191eca",
            "name": "gps_epoch",
            "initializer": "= 2208988800 +\n        315964800",
            "brief": "Use the GPS epoch starting Jan 5, 1980 (was 315964800s ahead of UNIX epoch at founding, has drifted farther apart due to leap seconds)",
            "description": "",
            "deprecated": null,
            "since": null
          },
          {
            "id": "a8a843903ff31832bf9472f993feac3c1a33c6bc56c14b81468f574578706c16ec",
            "name": "nist_epoch",
            "initializer": "= 0",
            "brief": "Use the epoch starting Jan 1, 1900 as returned by the NIST Network Time Protocol (RFC-1305 and later versions) and Time Protocol (RFC-868) (2208988800 behind the UNIX epoch)",
            "description": "",
            "deprecated": null,
            "since": null
          }
        ],
        "has_value_details": true
      }
    ],
    "typedefs": [],
    "funcs": [],
    "vars": [],
    "defines": [
      {
        "base_url": "_clock_support_8h.html",
        "id": "a21ef8aae006901cad5210bd03c6db4cd",
        "include": null,
        "has_details": false,
        "name": "MS_USE_DS3231",
        "initializer": null,
        "brief": "Select DS3231 as the RTC for the EnviroDIY Mayfly.",
        "description": "",
        "return_value": null,
        "deprecated": null,
        "since": null,
        "has_param_details": false,
        "params": null
      },
      {
        "base_url": "_clock_support_8h.html",
        "id": "a7df67cec274c2b6bd8ad0d6a2f5e7e2e",
        "include": null,
        "has_details": false,
        "name": "MS_CLOCK_NAME",
        "initializer": "\"DS3231\"",
        "brief": "A text description of the clock.",
        "description": "",
        "return_value": null,
        "deprecated": null,
        "since": null,
        "has_param_details": false,
        "params": null
      },
      {
        "base_url": "_clock_support_8h.html",
        "id": "a545ce3506468ca56fd064593cbfee16a",
        "include": null,
        "has_details": true,
        "name": "CLOCK_INTERRUPT_MODE",
        "initializer": "FALLING",
        "brief": "The mode for the interrupt on the wake/RTC pin; must be one of HIGH, LOW, FALLING, RISING, or CHANGE.",
        "description": "<p>Using HIGH or LOW could trigger multiple interrupts when the clock interrupt fires. It&#x27;s best to catch the first edge of the clock interrupt. So for an RTC with an active low interrupt, use &quot;FALLING.&quot;</p>",
        "return_value": null,
        "deprecated": null,
        "since": null,
        "has_param_details": false,
        "params": null
      },
      {
        "base_url": "_clock_support_8h.html",
        "id": "ac36ab45494c84a548c5782158b6df7d5",
        "include": null,
        "has_details": true,
        "name": "EPOCH_NIST_TO_UNIX",
        "initializer": "2208988800",
        "brief": "The difference in seconds between the epoch value returned by the NIST Network Time Protocol and the Unix epoch.",
        "description": "<p>The NIST Network Time Protocol (RFC-1305 and later versions) and Time Protocol (RFC-868) both return a uint32_t which is the number of seconds from January 1, 1900. This is 2208988800 seconds behind the UNIX epoch.</p><p>The NIST epoch will roll over and cease to work for processors with a uint32_t time_t on February 7, 2036 6:28:15 AM.</p>",
        "return_value": null,
        "deprecated": null,
        "since": null,
        "has_param_details": false,
        "params": null
      },
      {
        "base_url": "_clock_support_8h.html",
        "id": "a92e33174456737c3b36f264d68df9689",
        "include": null,
        "has_details": false,
        "name": "EPOCH_UNIX_TO_Y2K",
        "initializer": "946684800",
        "brief": "The epoch starting Jan 1, 2000, as some RTC&#x27;s and Arduinos do (946684800s ahead of UNIX epoch)",
        "description": "",
        "return_value": null,
        "deprecated": null,
        "since": null,
        "has_param_details": false,
        "params": null
      },
      {
        "base_url": "_clock_support_8h.html",
        "id": "a5c66993f535c15ee8f60a24a97aec78d",
        "include": null,
        "has_details": false,
        "name": "EPOCH_UNIX_TO_GPS",
        "initializer": "315964800",
        "brief": "The GPS epoch starting Jan 5, 1980 (was 315964800s ahead of UNIX epoch at founding, has drifted farther apart due to leap seconds)",
        "description": "",
        "return_value": null,
        "deprecated": null,
        "since": null,
        "has_param_details": false,
        "params": null
      },
      {
        "base_url": "_clock_support_8h.html",
        "id": "a31a4b23284e211c880333e0685257c1f",
        "include": null,
        "has_details": false,
        "name": "NUMBER_LEAP_SECONDS",
        "initializer": "18",
        "brief": "The number of announced leap seconds as of February 24, 2025.",
        "description": "",
        "return_value": null,
        "deprecated": null,
        "since": null,
        "has_param_details": false,
        "params": null
      },
      {
        "base_url": "_clock_support_8h.html",
        "id": "a70ab198fade1df5dac319a6541078441",
        "include": null,
        "has_details": false,
        "name": "LEAP_SECONDS",
        "initializer": "    {46828800,  78364801,  109900802, 173059203,  252028804,  315187205, \\\n     346723206, 393984007, 425520008, 457056009,  504489610,  551750411, \\\n     599184012, 820108813, 914803214, 1025136015, 1119744016, 1167264017}",
        "brief": "The GPS epoch equivalent for each of the announced leap seconds as of February 24, 2025.",
        "description": "",
        "return_value": null,
        "deprecated": null,
        "since": null,
        "has_param_details": false,
        "params": null
      }
    ],
    "public_types": [],
    "public_static_funcs": [],
    "typeless_funcs": [],
    "public_funcs": [],
    "signals": [],
    "public_slots": [],
    "public_static_vars": [],
    "public_vars": [],
    "protected_types": [],
    "protected_static_funcs": [],
    "protected_funcs": [],
    "protected_slots": [],
    "protected_static_vars": [],
    "protected_vars": [],
    "private_funcs": [],
    "private_slots": [],
    "related": [],
    "friend_funcs": [],
    "groups": [],
    "has_enum_details": true,
    "has_typedef_details": false,
    "has_func_details": false,
    "has_var_details": false,
    "has_define_details": true,
    "breadcrumb": [
      [
        "src",
        "dir_68267d1309a1af8e8297ef4c3efbcdba.html"
      ],
      [
        "ClockSupport.h",
        "_clock_support_8h.html"
      ]
    ],
    "breadcrumbGroup": [
      [
        "ClockSupport.h",
        "_clock_support_8h.html"
      ]
    ]
  }
}