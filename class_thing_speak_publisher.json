{
  "version": "1.12.0",
  "compound": {
    "kind": "class",
    "id": "class_thing_speak_publisher",
    "name": "ThingSpeakPublisher",
    "url_base": "class_thing_speak_publisher",
    "url": "class_thing_speak_publisher.html",
    "include": [
      "&lt;src/publishers/ThingSpeakPublisher.h&gt;",
      "_thing_speak_publisher_8h.html"
    ],
    "has_template_details": false,
    "templates": null,
    "brief": "The <a href=\"class_thing_speak_publisher.html\" class=\"m-doc\">ThingSpeakPublisher</a> subclass of <a href=\"classdata_publisher.html\" class=\"m-doc\">dataPublisher</a> for publishing data to ThingSpeak using the MQTT protocol.",
    "description": "<p>When sending data to ThingSpeak the order of the variables in the variable array attached to your logger is <strong>crucial</strong>. The results from the variables in the <a href=\"class_variable_array.html\" class=\"m-doc\">VariableArray</a> will be sent to ThingSpeak in the order they are in the array; that is, the first variable in the array will be sent as Field1, the second as Field2, etc. Any UUID&#x27;s or custom variable codes are ignored for ThingSpeak. They will only appear in the header of your file on the SD card. Giving a variable a custom variable code like &quot;Field3&quot; will <strong>NOT</strong> make that variable field 3 on ThingSpeak. The third variable in the array will always be &quot;Field3&quot;. Any text names you have given to your fields in ThingSpeak are also irrelevant.</p>",
    "sections": "",
    "deprecated": null,
    "since": null,
    "example_navigation": null,
    "footer_navigation": null,
    "topics": [],
    "dirs": [],
    "files": [],
    "namespaces": [],
    "classes": [],
    "base_classes": [
      {
        "kind": "class",
        "url": "classdata_publisher.html",
        "name": "dataPublisher",
        "brief": "The <a href=\"classdata_publisher.html\" class=\"m-doc\">dataPublisher</a> class is a virtual class used by other publishers to distribute data online.",
        "templates": null,
        "deprecated": null,
        "since": null,
        "is_protected": false,
        "is_virtual": false
      }
    ],
    "derived_classes": [],
    "enums": [],
    "typedefs": [],
    "funcs": [],
    "vars": [],
    "defines": [],
    "public_types": [],
    "public_static_funcs": [],
    "typeless_funcs": [
      {
        "base_url": "class_thing_speak_publisher.html",
        "id": "a97b03e90f6e3f701962ac8c368440cb5",
        "include": null,
        "has_details": false,
        "type": "",
        "name": "ThingSpeakPublisher",
        "brief": "Construct a new ThingSpeak Publisher object with no members initialized.",
        "description": "",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": []
      },
      {
        "base_url": "class_thing_speak_publisher.html",
        "id": "a4b5e1de0be825e57ddaadf5baa5df125",
        "include": null,
        "has_details": true,
        "type": "",
        "name": "ThingSpeakPublisher",
        "brief": "Construct a new ThingSpeak Publisher object.",
        "description": "<aside class=\"m-note m-info\"><h4>Note</h4><p>If a client is never specified, the publisher will attempt to create and use a client on a LoggerModem instance tied to the attached logger.</p></aside>",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": true,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "baseLogger",
            "type": "<a href=\"class_logger.html\" class=\"m-doc\">Logger</a>&amp;",
            "type_name": "<a href=\"class_logger.html\" class=\"m-doc\">Logger</a>&amp; baseLogger",
            "default": null,
            "description": "The logger supplying the data to be published",
            "direction": ""
          },
          {
            "name": "sendEveryX",
            "type": "int",
            "type_name": "int sendEveryX",
            "default": "1",
            "description": "Interval (in units of the logging interval) between attempted data transmissions. NOTE: not implemented by this publisher!",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_thing_speak_publisher.html",
        "id": "ae1949357e66aae64fe0937dc4e9c7318",
        "include": null,
        "has_details": true,
        "type": "",
        "name": "ThingSpeakPublisher",
        "brief": "Construct a new ThingSpeak Publisher object.",
        "description": "",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "baseLogger",
            "type": "<a href=\"class_logger.html\" class=\"m-doc\">Logger</a>&amp;",
            "type_name": "<a href=\"class_logger.html\" class=\"m-doc\">Logger</a>&amp; baseLogger",
            "default": null,
            "description": "The logger supplying the data to be published",
            "direction": ""
          },
          {
            "name": "inClient",
            "type": "Client*",
            "type_name": "Client* inClient",
            "default": null,
            "description": "An Arduino client instance to use to print data to. Allows the use of any type of client and multiple clients tied to a single TinyGSM modem instance",
            "direction": ""
          },
          {
            "name": "sendEveryX",
            "type": "int",
            "type_name": "int sendEveryX",
            "default": "1",
            "description": "Interval (in units of the logging interval) between attempted data transmissions. NOTE: not implemented by this publisher!",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_thing_speak_publisher.html",
        "id": "a81fb2dfe5806588b6376c789b075b7dd",
        "include": null,
        "has_details": true,
        "type": "",
        "name": "ThingSpeakPublisher",
        "brief": "Construct a new ThingSpeak Publisher object.",
        "description": "",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "baseLogger",
            "type": "<a href=\"class_logger.html\" class=\"m-doc\">Logger</a>&amp;",
            "type_name": "<a href=\"class_logger.html\" class=\"m-doc\">Logger</a>&amp; baseLogger",
            "default": null,
            "description": "The logger supplying the data to be published",
            "direction": ""
          },
          {
            "name": "thingSpeakMQTTKey",
            "type": "const char*",
            "type_name": "const char* thingSpeakMQTTKey",
            "default": null,
            "description": "Your MQTT API Key from Account &gt; MyProfile.",
            "direction": ""
          },
          {
            "name": "thingSpeakChannelID",
            "type": "const char*",
            "type_name": "const char* thingSpeakChannelID",
            "default": null,
            "description": "The numeric channel id for your channel",
            "direction": ""
          },
          {
            "name": "thingSpeakChannelKey",
            "type": "const char*",
            "type_name": "const char* thingSpeakChannelKey",
            "default": null,
            "description": "The write API key for your channel",
            "direction": ""
          },
          {
            "name": "sendEveryX",
            "type": "int",
            "type_name": "int sendEveryX",
            "default": "1",
            "description": "Interval (in units of the logging interval) between attempted data transmissions. NOTE: not implemented by this publisher!",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_thing_speak_publisher.html",
        "id": "a448f0e8458e8137abb6b7b812f47cd94",
        "include": null,
        "has_details": true,
        "type": "",
        "name": "ThingSpeakPublisher",
        "brief": "Construct a new ThingSpeak Publisher object.",
        "description": "",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "baseLogger",
            "type": "<a href=\"class_logger.html\" class=\"m-doc\">Logger</a>&amp;",
            "type_name": "<a href=\"class_logger.html\" class=\"m-doc\">Logger</a>&amp; baseLogger",
            "default": null,
            "description": "The logger supplying the data to be published",
            "direction": ""
          },
          {
            "name": "inClient",
            "type": "Client*",
            "type_name": "Client* inClient",
            "default": null,
            "description": "An Arduino client instance to use to print data to. Allows the use of any type of client and multiple clients tied to a single TinyGSM modem instance",
            "direction": ""
          },
          {
            "name": "thingSpeakMQTTKey",
            "type": "const char*",
            "type_name": "const char* thingSpeakMQTTKey",
            "default": null,
            "description": "Your MQTT API Key from Account &gt; MyProfile.",
            "direction": ""
          },
          {
            "name": "thingSpeakChannelID",
            "type": "const char*",
            "type_name": "const char* thingSpeakChannelID",
            "default": null,
            "description": "The numeric channel id for your channel",
            "direction": ""
          },
          {
            "name": "thingSpeakChannelKey",
            "type": "const char*",
            "type_name": "const char* thingSpeakChannelKey",
            "default": null,
            "description": "The write API key for your channel",
            "direction": ""
          },
          {
            "name": "sendEveryX",
            "type": "int",
            "type_name": "int sendEveryX",
            "default": "1",
            "description": "Interval (in units of the logging interval) between attempted data transmissions. NOTE: not implemented by this publisher!",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_thing_speak_publisher.html",
        "id": "a4f166cedc11b484ccbbd3c854f9c97a6",
        "include": null,
        "has_details": false,
        "type": "",
        "name": "~ThingSpeakPublisher",
        "brief": "Destroy the ThingSpeak Publisher object.",
        "description": "",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": true,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": []
      }
    ],
    "public_funcs": [
      {
        "base_url": "class_thing_speak_publisher.html",
        "id": "ac30724e103b8dbe59697d4d9a0be6e46",
        "include": null,
        "has_details": true,
        "type": "String",
        "name": "getEndpoint",
        "brief": "Get the destination for published data - generally the host name of the data receiver.",
        "description": "",
        "return_value": "The URL or HOST to receive published data",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": true,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": true,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": [
          {
            "name": "",
            "type": "void",
            "type_name": "void",
            "default": null,
            "description": "",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_thing_speak_publisher.html",
        "id": "af6e0684f02b6b9ae082302854d53ff2d",
        "include": null,
        "has_details": true,
        "type": "void",
        "name": "setMQTTKey",
        "brief": "Set the MQTT API Key from Account &gt; MyProfile.",
        "description": "",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "thingSpeakMQTTKey",
            "type": "const char*",
            "type_name": "const char* thingSpeakMQTTKey",
            "default": null,
            "description": "Your MQTT API Key from Account &gt; MyProfile.",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_thing_speak_publisher.html",
        "id": "a8f2adbef0d577c23b1b427d86e097723",
        "include": null,
        "has_details": true,
        "type": "void",
        "name": "setChannelID",
        "brief": "Set the ThingSpeak channel ID.",
        "description": "",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "thingSpeakChannelID",
            "type": "const char*",
            "type_name": "const char* thingSpeakChannelID",
            "default": null,
            "description": "The numeric channel id for your channel",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_thing_speak_publisher.html",
        "id": "a08e761f0142521223169aba5af2e8b37",
        "include": null,
        "has_details": true,
        "type": "void",
        "name": "setChannelKey",
        "brief": "Set the channel&#x27;s write API key.",
        "description": "",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "thingSpeakChannelKey",
            "type": "const char*",
            "type_name": "const char* thingSpeakChannelKey",
            "default": null,
            "description": "The write API key for your channel",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_thing_speak_publisher.html",
        "id": "a7df259680714264449ef261d5e237874",
        "include": null,
        "has_details": true,
        "type": "void",
        "name": "setThingSpeakParams",
        "brief": "Sets all 3 ThingSpeak parameters.",
        "description": "",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "MQTTKey",
            "type": "const char*",
            "type_name": "const char* MQTTKey",
            "default": null,
            "description": "Your MQTT API Key from Account &gt; MyProfile.",
            "direction": ""
          },
          {
            "name": "channelID",
            "type": "const char*",
            "type_name": "const char* channelID",
            "default": null,
            "description": "The numeric channel id for your channel",
            "direction": ""
          },
          {
            "name": "channelKey",
            "type": "const char*",
            "type_name": "const char* channelKey",
            "default": null,
            "description": "The write API key for your channel",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_thing_speak_publisher.html",
        "id": "ac61e1ab8921dae2cbae02a29466bf807",
        "include": null,
        "has_details": true,
        "type": "void",
        "name": "begin",
        "brief": "Begin the publisher - linking it to the client and logger.",
        "description": "<p>This can be used as an alternative to adding the logger and client in the constructor.</p>",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "baseLogger",
            "type": "<a href=\"class_logger.html\" class=\"m-doc\">Logger</a>&amp;",
            "type_name": "<a href=\"class_logger.html\" class=\"m-doc\">Logger</a>&amp; baseLogger",
            "default": null,
            "description": "The logger supplying the data to be published",
            "direction": ""
          },
          {
            "name": "inClient",
            "type": "Client*",
            "type_name": "Client* inClient",
            "default": null,
            "description": "An Arduino client instance to use to print data to. Allows the use of any type of client and multiple clients tied to a single TinyGSM modem instance",
            "direction": ""
          },
          {
            "name": "thingSpeakMQTTKey",
            "type": "const char*",
            "type_name": "const char* thingSpeakMQTTKey",
            "default": null,
            "description": "Your MQTT API Key from Account &gt; MyProfile.",
            "direction": ""
          },
          {
            "name": "thingSpeakChannelID",
            "type": "const char*",
            "type_name": "const char* thingSpeakChannelID",
            "default": null,
            "description": "The numeric channel id for your channel",
            "direction": ""
          },
          {
            "name": "thingSpeakChannelKey",
            "type": "const char*",
            "type_name": "const char* thingSpeakChannelKey",
            "default": null,
            "description": "The write API key for your channel",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_thing_speak_publisher.html",
        "id": "a85e6d663a1c2efde5ad3b7e503d5ee49",
        "include": null,
        "has_details": true,
        "type": "void",
        "name": "begin",
        "brief": "Begin the publisher - linking it to the logger but not attaching a client.",
        "description": "<aside class=\"m-note m-info\"><h4>Note</h4><p>If a client is never specified, the publisher will attempt to create and use a client on a LoggerModem instance tied to the attached logger.</p></aside><p>This can be used as an alternative to adding the logger and client in the constructor.</p>",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "baseLogger",
            "type": "<a href=\"class_logger.html\" class=\"m-doc\">Logger</a>&amp;",
            "type_name": "<a href=\"class_logger.html\" class=\"m-doc\">Logger</a>&amp; baseLogger",
            "default": null,
            "description": "The logger supplying the data to be published",
            "direction": ""
          },
          {
            "name": "thingSpeakMQTTKey",
            "type": "const char*",
            "type_name": "const char* thingSpeakMQTTKey",
            "default": null,
            "description": "Your MQTT API Key from Account &gt; MyProfile.",
            "direction": ""
          },
          {
            "name": "thingSpeakChannelID",
            "type": "const char*",
            "type_name": "const char* thingSpeakChannelID",
            "default": null,
            "description": "The numeric channel id for your channel",
            "direction": ""
          },
          {
            "name": "thingSpeakChannelKey",
            "type": "const char*",
            "type_name": "const char* thingSpeakChannelKey",
            "default": null,
            "description": "The write API key for your channel",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_thing_speak_publisher.html",
        "id": "a310a8e38298c12f8816fa81f036b21c5",
        "include": null,
        "has_details": true,
        "type": "int16_t",
        "name": "publishData",
        "brief": "Open a socket to the correct receiver and sends out the formatted data.",
        "description": "<p>This depends on an internet connection already having been made and a client being available.</p>",
        "return_value": "The result of publishing data. May be an http response code or a result code from PubSubClient.",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": true,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": true,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "outClient",
            "type": "Client*",
            "type_name": "Client* outClient",
            "default": null,
            "description": "An Arduino client instance to use to print data to. Allows the use of any type of client and multiple clients tied to a single TinyGSM modem instance",
            "direction": ""
          }
        ]
      }
    ],
    "signals": [],
    "public_slots": [],
    "public_static_vars": [],
    "public_vars": [],
    "protected_types": [],
    "protected_static_funcs": [],
    "protected_funcs": [],
    "protected_slots": [],
    "protected_static_vars": [],
    "protected_vars": [],
    "private_funcs": [],
    "private_slots": [],
    "related": [],
    "friend_funcs": [],
    "groups": [
      {
        "name": "Portions of the MQTT data publication",
        "id": "portions-of-the-mqtt-data-publication",
        "description": "<p><a name=\"ts_mqqt_vars\"></a></p>",
        "members": [
          [
            "var",
            {
              "base_url": "class_thing_speak_publisher.html",
              "id": "ac5f2477b9e46cdce318cab5e7ebcd868",
              "include": null,
              "has_details": false,
              "type": "const char*",
              "is_constexpr": false,
              "is_static": true,
              "is_protected": true,
              "is_private": false,
              "name": "mqttServer",
              "brief": "The MQTT server.",
              "description": "",
              "deprecated": null,
              "since": null,
              "has_template_details": false,
              "templates": null
            }
          ],
          [
            "var",
            {
              "base_url": "class_thing_speak_publisher.html",
              "id": "ad886803eb40aaa540599c8a56ea00d1b",
              "include": null,
              "has_details": false,
              "type": "const int",
              "is_constexpr": false,
              "is_static": true,
              "is_protected": true,
              "is_private": false,
              "name": "mqttPort",
              "brief": "The MQTT port.",
              "description": "",
              "deprecated": null,
              "since": null,
              "has_template_details": false,
              "templates": null
            }
          ],
          [
            "var",
            {
              "base_url": "class_thing_speak_publisher.html",
              "id": "a51beff1bee0e4f9495375dab2e9d3a8c",
              "include": null,
              "has_details": false,
              "type": "const char*",
              "is_constexpr": false,
              "is_static": true,
              "is_protected": true,
              "is_private": false,
              "name": "mqttClientName",
              "brief": "The MQTT client name.",
              "description": "",
              "deprecated": null,
              "since": null,
              "has_template_details": false,
              "templates": null
            }
          ],
          [
            "var",
            {
              "base_url": "class_thing_speak_publisher.html",
              "id": "a19229834d24e1fbc56f53b9ebb0cd7b1",
              "include": null,
              "has_details": false,
              "type": "const char*",
              "is_constexpr": false,
              "is_static": true,
              "is_protected": true,
              "is_private": false,
              "name": "mqttUser",
              "brief": "The MQTT user name.",
              "description": "",
              "deprecated": null,
              "since": null,
              "has_template_details": false,
              "templates": null
            }
          ]
        ]
      }
    ],
    "has_enum_details": false,
    "has_typedef_details": false,
    "has_func_details": true,
    "has_var_details": false,
    "has_define_details": false,
    "breadcrumb": [
      [
        "dataPublisher",
        "classdata_publisher.html"
      ],
      [
        "ThingSpeakPublisher",
        "class_thing_speak_publisher.html"
      ]
    ],
    "breadcrumbGroup": [
      [
        "Supported Data Endpoints",
        "group__the__publishers.html"
      ],
      [
        "ThingSpeakPublisher",
        "class_thing_speak_publisher.html"
      ]
    ],
    "is_final": false,
    "prefix_wbr": "ThingSpeakPublisher::<wbr />"
  }
}