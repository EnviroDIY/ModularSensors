{
  "version": "1.12.0",
  "compound": {
    "kind": "group",
    "id": "group__modem__esp8266",
    "name": "Espressif ESP8266 and ESP32",
    "url_base": "group__modem__esp8266",
    "url": "group__modem__esp8266.html",
    "include": null,
    "has_template_details": false,
    "templates": null,
    "brief": "",
    "description": "<section id=\"modem_esp8266_notes\"><h2>Introduction</h2><p>These are handy, cheap, and very widely available WiFi and WiFi/Bluetooth modules. They use relatively little power amd can be put in a deep sleep mode to greatly reduce power draw. The types of sleep they can use are dependent on the breakout you have. If you&#x27;re shopping for boards, I strongly recommend getting a breakout that exposes the deep sleep wake up (RSTB/DIO16) pin so that you can put the chip in its lowest power mode. When using the AT command firmware, it is not possible to purposefully enter light sleep mode. The module will enter light sleep on its own after some (undocumented) idle period. In my testing, I&#x27;ve never seen the module drop to the documented light sleep power levels regardless of the length of time idle.</p></section><section id=\"modem_esp8266_dfrobot\"><h2>DFRobot ESPBee</h2><p>I don&#x27;t actually recommend this module. It gets hot and eats power for no apparent reason. And the pin connections are a bit strange. But it is cheap and available. The pins are technically available to use the ESP&#x27;s &quot;light sleep&quot; but I&#x27;ve never successfully gotten the module to actually enter light sleep mode. It always runs at full power draw. It&#x27;s not possible to use deep sleep on the DFRobot bee.</p></section><section id=\"modem_esp8266_docs\"><h2>Manufacturer Documentation</h2><p>More information on the ESP8266 is here: <a href=\"https://www.espressif.com/en/products/socs/esp8266\">https:/<wbr />/<wbr />www.espressif.com/<wbr />en/<wbr />products/<wbr />socs/<wbr />esp8266</a> And the page for the ESP32 is here: <a href=\"https://www.espressif.com/en/products/socs/esp32\">https:/<wbr />/<wbr />www.espressif.com/<wbr />en/<wbr />products/<wbr />socs/<wbr />esp32</a></p></section><section id=\"modem_esp8266_ctor\"><h2>Modem Constructor</h2><p>{{ <a href=\"class_espressif_e_s_p8266.html#ac9ed193efb33a50a20a0a554cdf1400a\" class=\"m-doc\">EspressifESP8266::<wbr />EspressifESP8266</a> }}</p><hr/></section><section id=\"modem_esp8266_examples\"><h2>Example Code</h2><p>The ESP8266 is used in the <a href=\"example_menu.html#menu_walk_espressif_esp8266\" class=\"m-doc\">menu a la carte</a> example and the <a href=\"logging_to__thing_speak_8ino-example.html\" class=\"m-doc\">logging to ThingSpeak</a> example.</p><div class=\"m-code-arduino\"><div class=\"highlight\"><div class=\"line\"><a id=\"l-1\" name=\"l-1\"></a><span class=\"linenos\"> 1</span><span class=\"c1\">// For almost anything based on the Espressif ESP8266 using the</span>\n</div><div class=\"line\"><a id=\"l-2\" name=\"l-2\"></a><span class=\"linenos\"> 2</span><span class=\"c1\">// AT command firmware</span>\n</div><div class=\"line\"><a id=\"l-3\" name=\"l-3\"></a><span class=\"linenos\"> 3</span><span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;modems/EspressifESP8266.h&gt;</span>\n</div><div class=\"line\"><a id=\"l-4\" name=\"l-4\"></a><span class=\"linenos\"> 4</span>\n</div><div class=\"line\"><a id=\"l-5\" name=\"l-5\"></a><span class=\"linenos\"> 5</span><span class=\"c1\">// NOTE: Extra hardware and software serial ports are created in the &quot;Settings</span>\n</div><div class=\"line\"><a id=\"l-6\" name=\"l-6\"></a><span class=\"linenos\"> 6</span><span class=\"c1\">// for Additional Serial Ports&quot; section</span>\n</div><div class=\"line\"><a id=\"l-7\" name=\"l-7\"></a><span class=\"linenos\"> 7</span><span class=\"kr\">const</span><span class=\"w\"> </span><span class=\"kr\">int32_t</span><span class=\"w\"> </span><span class=\"n\">modemBaud</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">115200</span><span class=\"p\">;</span><span class=\"w\">  </span><span class=\"c1\">// Communication speed of the modem</span>\n</div><div class=\"line\"><a id=\"l-8\" name=\"l-8\"></a><span class=\"linenos\"> 8</span><span class=\"c1\">// NOTE:  This baud rate too fast for an 8MHz board, like the Mayfly!  The</span>\n</div><div class=\"line\"><a id=\"l-9\" name=\"l-9\"></a><span class=\"linenos\"> 9</span><span class=\"c1\">// module should be programmed to a slower baud rate or set to auto-baud using</span>\n</div><div class=\"line\"><a id=\"l-10\" name=\"l-10\"></a><span class=\"linenos\">10</span><span class=\"c1\">// the AT+UART_CUR or AT+UART_DEF command.</span>\n</div><div class=\"line\"><a id=\"l-11\" name=\"l-11\"></a><span class=\"linenos\">11</span>\n</div><div class=\"line\"><a id=\"l-12\" name=\"l-12\"></a><span class=\"linenos\">12</span><span class=\"c1\">// Modem Pins - Describe the physical pin connection of your modem to your board</span>\n</div><div class=\"line\"><a id=\"l-13\" name=\"l-13\"></a><span class=\"linenos\">13</span><span class=\"c1\">// NOTE:  Use -1 for pins that do not apply</span>\n</div><div class=\"line\"><a id=\"l-14\" name=\"l-14\"></a><span class=\"linenos\">14</span><span class=\"c1\">// Example pins here are for a EnviroDIY ESP32 Bluetooth/Wifi Bee with</span>\n</div><div class=\"line\"><a id=\"l-15\" name=\"l-15\"></a><span class=\"linenos\">15</span><span class=\"c1\">// Mayfly 1.1</span>\n</div><div class=\"line\"><a id=\"l-16\" name=\"l-16\"></a><span class=\"linenos\">16</span><span class=\"kr\">const</span><span class=\"w\"> </span><span class=\"kr\">int8_t</span><span class=\"w\"> </span><span class=\"n\">modemVccPin</span><span class=\"w\">   </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">18</span><span class=\"p\">;</span><span class=\"w\">      </span><span class=\"c1\">// MCU pin controlling modem power</span>\n</div><div class=\"line\"><a id=\"l-17\" name=\"l-17\"></a><span class=\"linenos\">17</span><span class=\"kr\">const</span><span class=\"w\"> </span><span class=\"kr\">int8_t</span><span class=\"w\"> </span><span class=\"n\">modemResetPin</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">A5</span><span class=\"p\">;</span><span class=\"w\">      </span><span class=\"c1\">// MCU pin connected to modem reset pin</span>\n</div><div class=\"line\"><a id=\"l-18\" name=\"l-18\"></a><span class=\"linenos\">18</span><span class=\"kr\">const</span><span class=\"w\"> </span><span class=\"kr\">int8_t</span><span class=\"w\"> </span><span class=\"n\">modemLEDPin</span><span class=\"w\">   </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">redLED</span><span class=\"p\">;</span><span class=\"w\">  </span><span class=\"c1\">// MCU pin connected an LED to show modem</span>\n</div><div class=\"line\"><a id=\"l-19\" name=\"l-19\"></a><span class=\"linenos\">19</span><span class=\"w\">                                      </span><span class=\"c1\">// status</span>\n</div><div class=\"line\"><a id=\"l-20\" name=\"l-20\"></a><span class=\"linenos\">20</span>\n</div><div class=\"line\"><a id=\"l-21\" name=\"l-21\"></a><span class=\"linenos\">21</span><span class=\"c1\">// Network connection information</span>\n</div><div class=\"line\"><a id=\"l-22\" name=\"l-22\"></a><span class=\"linenos\">22</span><span class=\"kr\">const</span><span class=\"w\"> </span><span class=\"kr\">char</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">wifiId</span><span class=\"w\">  </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">&quot;xxxxx&quot;</span><span class=\"p\">;</span><span class=\"w\">  </span><span class=\"c1\">// WiFi access point name</span>\n</div><div class=\"line\"><a id=\"l-23\" name=\"l-23\"></a><span class=\"linenos\">23</span><span class=\"kr\">const</span><span class=\"w\"> </span><span class=\"kr\">char</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">wifiPwd</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">&quot;xxxxx&quot;</span><span class=\"p\">;</span><span class=\"w\">  </span><span class=\"c1\">// WiFi password (WPA2)</span>\n</div><div class=\"line\"><a id=\"l-24\" name=\"l-24\"></a><span class=\"linenos\">24</span>\n</div><div class=\"line\"><a id=\"l-25\" name=\"l-25\"></a><span class=\"linenos\">25</span><span class=\"c1\">// Create the modem object</span>\n</div><div class=\"line\"><a id=\"l-26\" name=\"l-26\"></a><span class=\"linenos\">26</span><span class=\"n\">EspressifESP8266</span><span class=\"w\"> </span><span class=\"nf\">modemESP</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">modemSerial</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">modemVccPin</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">modemResetPin</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">wifiId</span><span class=\"p\">,</span>\n</div><div class=\"line\"><a id=\"l-27\" name=\"l-27\"></a><span class=\"linenos\">27</span><span class=\"w\">                          </span><span class=\"n\">wifiPwd</span><span class=\"p\">);</span>\n</div><div class=\"line\"><a id=\"l-28\" name=\"l-28\"></a><span class=\"linenos\">28</span><span class=\"c1\">// Create an extra reference to the modem by a generic name</span>\n</div><div class=\"line\"><a id=\"l-29\" name=\"l-29\"></a><span class=\"linenos\">29</span><span class=\"n\">EspressifESP8266</span><span class=\"w\"> </span><span class=\"n\">modem</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">modemESP</span><span class=\"p\">;</span>\n</div></div></div></section>",
    "sections": [
      [
        "modem_esp8266_notes",
        "Introduction",
        []
      ],
      [
        "modem_esp8266_dfrobot",
        "DFRobot ESPBee",
        []
      ],
      [
        "modem_esp8266_docs",
        "Manufacturer Documentation",
        []
      ],
      [
        "modem_esp8266_ctor",
        "Modem Constructor",
        []
      ],
      [
        "modem_esp8266_examples",
        "Example Code",
        []
      ]
    ],
    "deprecated": null,
    "since": null,
    "example_navigation": null,
    "footer_navigation": null,
    "topics": [],
    "dirs": [],
    "files": [],
    "namespaces": [],
    "classes": [
      {
        "kind": "class",
        "url": "class_espressif_e_s_p8266.html",
        "name": "EspressifESP8266",
        "brief": "The <a href=\"classlogger_modem.html\" class=\"m-doc\">loggerModem</a> subclass for any breakout of the <a href=\"group__modem__esp8266.html\" class=\"m-doc\">Espressif ESP8266</a> wifi chip or ESP32 wifi/bluetooth chip that has been flashed with Espressif&#x27;s AT command firmware.",
        "deprecated": null,
        "since": null,
        "templates": null
      }
    ],
    "base_classes": [],
    "derived_classes": [],
    "enums": [],
    "typedefs": [],
    "funcs": [],
    "vars": [],
    "defines": [],
    "public_types": [],
    "public_static_funcs": [],
    "typeless_funcs": [],
    "public_funcs": [],
    "signals": [],
    "public_slots": [],
    "public_static_vars": [],
    "public_vars": [],
    "protected_types": [],
    "protected_static_funcs": [],
    "protected_funcs": [],
    "protected_slots": [],
    "protected_static_vars": [],
    "protected_vars": [],
    "private_funcs": [],
    "private_slots": [],
    "related": [],
    "friend_funcs": [],
    "groups": [
      {
        "name": "Modem Pin Settings and Timing",
        "id": "modem-pin-settings-and-timing",
        "description": "<p><a name=\"modem_esp8266_pins_timing\"></a> The timing and pin level settings for an ESP8266 (or ESP32)</p>",
        "members": [
          [
            "define",
            {
              "base_url": "group__modem__esp8266.html",
              "id": "ga74897f9fa696492c7d27b9d70b52621a",
              "include": [
                "&lt;src/modems/EspressifESP8266.h&gt;",
                "_espressif_e_s_p8266_8h.html"
              ],
              "has_details": true,
              "name": "ESP8266_STATUS_LEVEL",
              "initializer": "HIGH",
              "brief": "The <a href=\"classlogger_modem.html#af44caee8dd6acf7c72cd1271441a41cb\" class=\"m-doc\">loggerModem::<wbr />_statusLevel</a>.",
              "description": "<p>It is not possible to get status from the ESP8266 in deep sleep mode - during deep sleep the pin state is undefined.</p><p>For cases where a pin is defined for light sleep mode, the Espressif documentation states:</p><blockquote><p>since the system needs some time to wake up from light sleep, it is suggested that wait at least 5ms before sending next AT command. The documentation doesn&#x27;t say anything about the time before the pin reaches the expected level. The status level during light sleep is user selectable, this library sets it low for wake and high for sleep. Of course, despite being able to configure light sleep mode for the module, it&#x27;s not actually possible to purposefully enter light sleep via AT commands, so we are dependent on the module deciding it&#x27;s been idle long enough and entering sleep on its own. It is a terrible system. <strong>Use a deep-sleep with reset if possible.</strong></p></blockquote>",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ],
          [
            "define",
            {
              "base_url": "group__modem__esp8266.html",
              "id": "gae12bdc2dd6cfa22bd7abe28515b80fcd",
              "include": [
                "&lt;src/modems/EspressifESP8266.h&gt;",
                "_espressif_e_s_p8266_8h.html"
              ],
              "has_details": true,
              "name": "ESP8266_STATUS_TIME_MS",
              "initializer": "350",
              "brief": "The <a href=\"classlogger_modem.html#a755d93cb67e9184a7cdfeae17448667b\" class=\"m-doc\">loggerModem::<wbr />_statusTime_ms</a>.",
              "description": "<p>It is not possible to get status from the ESP8266 in deep sleep mode - during deep sleep the pin state is undefined.</p><p>For cases where a pin is defined for light sleep mode, the Espressif documentation states:</p><blockquote><p>since the system needs some time to wake up from light sleep, it is suggested that wait at least 5ms before sending next AT command. The documentation doesn&#x27;t say anything about the time before the pin reaches the expected level. The status level during light sleep is user selectable, this library sets it low for wake and high for sleep. Of course, despite being able to configure light sleep mode for the module, it&#x27;s not actually possible to purposefully enter light sleep via AT commands, so we are dependent on the module deciding it&#x27;s been idle long enough and entering sleep on its own. It is a terrible system. <strong>Use a deep-sleep with reset if possible.</strong></p></blockquote>",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ],
          [
            "define",
            {
              "base_url": "group__modem__esp8266.html",
              "id": "ga4b4b6cee2f3ea01e9c8f32abcfcbafe1",
              "include": [
                "&lt;src/modems/EspressifESP8266.h&gt;",
                "_espressif_e_s_p8266_8h.html"
              ],
              "has_details": true,
              "name": "ESP8266_RESET_LEVEL",
              "initializer": "LOW",
              "brief": "The <a href=\"classlogger_modem.html#a4832f4560020f57bfb2e11ddade73d0a\" class=\"m-doc\">loggerModem::<wbr />_resetLevel</a>.",
              "description": "<p>The ESP8266 is reset with a low pulse on pin 32. The reset time is undocumented but very fast - 1ms seems to be sufficient</p>",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ],
          [
            "define",
            {
              "base_url": "group__modem__esp8266.html",
              "id": "gad5476edf242ca09b38d46618da5311dc",
              "include": [
                "&lt;src/modems/EspressifESP8266.h&gt;",
                "_espressif_e_s_p8266_8h.html"
              ],
              "has_details": true,
              "name": "ESP8266_RESET_PULSE_MS",
              "initializer": "1",
              "brief": "The <a href=\"classlogger_modem.html#a9ee81f2d0dd9e5cdf89e8e469147c38c\" class=\"m-doc\">loggerModem::<wbr />_resetPulse_ms</a>.",
              "description": "<p>The ESP8266 is reset with a low pulse on pin 32. The reset time is undocumented but very fast - 1ms seems to be sufficient</p>",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ],
          [
            "define",
            {
              "base_url": "group__modem__esp8266.html",
              "id": "ga5e49325f8583dbb3fb926c04c24c2cb2",
              "include": [
                "&lt;src/modems/EspressifESP8266.h&gt;",
                "_espressif_e_s_p8266_8h.html"
              ],
              "has_details": true,
              "name": "ESP8266_WAKE_LEVEL",
              "initializer": "LOW",
              "brief": "The <a href=\"classlogger_modem.html#a71c42d58d22d8481e6e6f7e5b7d8f0bf\" class=\"m-doc\">loggerModem::<wbr />_wakeLevel</a>.",
              "description": "<p>This light sleep wake level is user configurable on the ESP8266. This library uses a <code>LOW</code> level for wake.</p>",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ],
          [
            "define",
            {
              "base_url": "group__modem__esp8266.html",
              "id": "ga47189b2afc42e06de23e250c162a7aa1",
              "include": [
                "&lt;src/modems/EspressifESP8266.h&gt;",
                "_espressif_e_s_p8266_8h.html"
              ],
              "has_details": true,
              "name": "ESP8266_WAKE_PULSE_MS",
              "initializer": "0",
              "brief": "The <a href=\"classlogger_modem.html#a1b4e78a1e0963fb1cc970ce6273c124d\" class=\"m-doc\">loggerModem::<wbr />_wakePulse_ms</a>.",
              "description": "<p>This light sleep wake level is user configurable on the ESP8266. This library uses a <code>LOW</code> level for wake.</p>",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ],
          [
            "define",
            {
              "base_url": "group__modem__esp8266.html",
              "id": "gab9e0b94d09b992156b6f00ad584942f7",
              "include": [
                "&lt;src/modems/EspressifESP8266.h&gt;",
                "_espressif_e_s_p8266_8h.html"
              ],
              "has_details": true,
              "name": "ESP8266_WAKE_DELAY_MS",
              "initializer": "0",
              "brief": "The <a href=\"classlogger_modem.html#a68051ed68b85195bf188a1914c71a9c8\" class=\"m-doc\">loggerModem::<wbr />_wakeDelayTime_ms</a>.",
              "description": "<p>The ESP8266 turns on when power is applied regardless of pin states. No further wake command is needed.</p>",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ],
          [
            "define",
            {
              "base_url": "group__modem__esp8266.html",
              "id": "ga083eaf7d6bacf917e437b734741f25b1",
              "include": [
                "&lt;src/modems/EspressifESP8266.h&gt;",
                "_espressif_e_s_p8266_8h.html"
              ],
              "has_details": true,
              "name": "ESP8266_ATRESPONSE_TIME_MS",
              "initializer": "700",
              "brief": "The <a href=\"classlogger_modem.html#aa9bf26acfae6ec2611b4d7a806dd2489\" class=\"m-doc\">loggerModem::<wbr />_max_atresponse_time_ms</a>.",
              "description": "<p>The serial response time after boot (via power on or reset) is undocumented for the ESP8266. Other users online estimate about 350ms.</p><p>In my fiddling, the ESP32 running AT firmware takes a bit longer; 700ms may be safe.</p><p>The serial response time on waking from light sleep is 5ms.</p>",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ],
          [
            "define",
            {
              "base_url": "group__modem__esp8266.html",
              "id": "gaa28b69dad87de591ae9b2a21e36781dd",
              "include": [
                "&lt;src/modems/EspressifESP8266.h&gt;",
                "_espressif_e_s_p8266_8h.html"
              ],
              "has_details": true,
              "name": "ESP8266_DISCONNECT_TIME_MS",
              "initializer": "500",
              "brief": "The <a href=\"classlogger_modem.html#a32496b2b79dc9317639900a3c385405d\" class=\"m-doc\">loggerModem::<wbr />_disconnetTime_ms</a>.",
              "description": "<p>The disconnect time for the ESP8266 is not documented (and the status pin isn&#x27;t valid) so this time is just an estimate.</p>",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ],
          [
            "define",
            {
              "base_url": "group__modem__esp8266.html",
              "id": "gaa6d61fa052464b7251010b149af9dc29",
              "include": [
                "&lt;src/modems/EspressifESP8266.h&gt;",
                "_espressif_e_s_p8266_8h.html"
              ],
              "has_details": true,
              "name": "ESP8266_RECONNECT_TIME_MS",
              "initializer": "2500",
              "brief": "The amount of time in ms it takes the ESP8266 to reconnect using saved credentials.",
              "description": "",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ]
        ]
      }
    ],
    "has_enum_details": false,
    "has_typedef_details": false,
    "has_func_details": false,
    "has_var_details": false,
    "has_define_details": true,
    "breadcrumb": [
      [
        "Supported Modems and Communication Modules",
        "group__the__modems.html"
      ],
      [
        "Espressif ESP8266 and ESP32",
        "group__modem__esp8266.html"
      ]
    ],
    "breadcrumbGroup": [
      [
        "Espressif ESP8266 and ESP32",
        "group__modem__esp8266.html"
      ]
    ]
  }
}