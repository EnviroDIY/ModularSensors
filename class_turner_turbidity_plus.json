{
  "version": "1.14.0",
  "compound": {
    "kind": "class",
    "id": "class_turner_turbidity_plus",
    "name": "TurnerTurbidityPlus",
    "url_base": "class_turner_turbidity_plus",
    "url": "class_turner_turbidity_plus.html",
    "include": [
      "&lt;src/sensors/TurnerTurbidityPlus.h&gt;",
      "_turner_turbidity_plus_8h.html"
    ],
    "has_template_details": false,
    "templates": null,
    "brief": "The <a href=\"class_sensor.html\" class=\"m-doc\">Sensor</a> sub-class for the <a href=\"group__sensor__turbidity__plus.html\" class=\"m-doc\">Turner Turbidity Plus turbidity</a>sensor&quot;.",
    "description": "",
    "sections": "",
    "deprecated": null,
    "since": null,
    "example_navigation": null,
    "footer_navigation": null,
    "topics": [],
    "dirs": [],
    "files": [],
    "namespaces": [],
    "classes": [],
    "base_classes": [
      {
        "kind": "class",
        "url": "class_sensor.html",
        "name": "Sensor",
        "brief": "The &quot;Sensor&quot; class is used for all sensor-level operations - waking, sleeping, and taking measurements.",
        "templates": null,
        "deprecated": null,
        "since": null,
        "is_protected": false,
        "is_virtual": false
      }
    ],
    "derived_classes": [],
    "enums": [],
    "typedefs": [],
    "funcs": [],
    "vars": [],
    "defines": [],
    "public_types": [],
    "public_static_funcs": [],
    "typeless_funcs": [
      {
        "base_url": "class_turner_turbidity_plus.html",
        "id": "a007115f7bd7c8d6a93097eee1b054b54",
        "include": null,
        "has_details": true,
        "type": "",
        "name": "TurnerTurbidityPlus",
        "brief": "Construct a new Turner Turbidity Plus object - need the power pin, the ADS1X15 data channel, and the calibration info.",
        "description": "<aside class=\"m-note m-info\"><h4>Note</h4><p>ModularSensors only supports connecting the ADS1x15 to the primary hardware I2C instance defined in the Arduino core. Connecting the ADS to a secondary hardware or software I2C instance is <em>not</em> supported!</p></aside>",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "powerPin",
            "type": "int8_t",
            "type_name": "int8_t powerPin",
            "default": null,
            "description": "<p>The pin on the mcu controlling power to the Turbidity Plus Use -1 if it is continuously powered.</p><ul><li>The ADS1x15 requires an input voltage of 2.0-5.5V</li><li>The Turbidity Plus itself requires a 3-15V power supply, which can be turned off between measurements.</li></ul>",
            "direction": ""
          },
          {
            "name": "wiperTriggerPin",
            "type": "int8_t",
            "type_name": "int8_t wiperTriggerPin",
            "default": null,
            "description": "The pin on the mcu that triggers the sensor&#x27;s wiper.",
            "direction": ""
          },
          {
            "name": "adsDiffMux",
            "type": "<a href=\"group__sensor__turbidity__plus.html#ga5654dd846b6a98f42b592b8d1313ba36\" class=\"m-doc\">ttp_<wbr />adsDiffMux_<wbr />t</a>",
            "type_name": "<a href=\"group__sensor__turbidity__plus.html#ga5654dd846b6a98f42b592b8d1313ba36\" class=\"m-doc\">ttp_<wbr />adsDiffMux_<wbr />t</a> adsDiffMux",
            "default": null,
            "description": "Which two pins <em>on the TI ADS1115</em> that will measure differential voltage. See <a href=\"group__sensor__turbidity__plus.html#ga5654dd846b6a98f42b592b8d1313ba36\" class=\"m-doc\">ttp_<wbr />adsDiffMux_<wbr />t</a>",
            "direction": ""
          },
          {
            "name": "conc_std",
            "type": "float",
            "type_name": "float conc_std",
            "default": null,
            "description": "The concentration of the standard used for a 1-point sensor calibration. The concentration units should be the same as the final measuring units.",
            "direction": ""
          },
          {
            "name": "volt_std",
            "type": "float",
            "type_name": "float volt_std",
            "default": null,
            "description": "The voltage (in volts) measured for the conc_std. This voltage should be the final voltage <em>after</em> accounting for any voltage dividers or gain settings.",
            "direction": ""
          },
          {
            "name": "volt_blank",
            "type": "float",
            "type_name": "float volt_blank",
            "default": null,
            "description": "The voltage (in volts) measured for a blank. This voltage should be the final voltage <em>after</em> accounting for any voltage",
            "direction": ""
          },
          {
            "name": "i2cAddress",
            "type": "uint8_t",
            "type_name": "uint8_t i2cAddress",
            "default": "0x48",
            "description": "The I2C address of the ADS 1x15, default is 0x48 (ADDR = GND)",
            "direction": ""
          },
          {
            "name": "PGA_gain",
            "type": "adsGain_t",
            "type_name": "adsGain_t PGA_gain",
            "default": "GAIN_ONE",
            "description": "The programmable gain amplification to set on the ADS 1x15, default is GAIN_ONE (0-4.096V).",
            "direction": ""
          },
          {
            "name": "measurementsToAverage",
            "type": "uint8_t",
            "type_name": "uint8_t measurementsToAverage",
            "default": "1",
            "description": "The number of measurements to take and average before giving a &quot;final&quot; result from the sensor; optional with a default value of 1.",
            "direction": ""
          },
          {
            "name": "voltageDividerFactor",
            "type": "float",
            "type_name": "float voltageDividerFactor",
            "default": "1",
            "description": "For 3.3V processors like the Mayfly, The Turner&#x27;s 0-5V output signal must be shifted down to a maximum of 3.3V. This can be done either either with a level-shifting chip (e.g. Adafruit BSS38), OR by connecting the Turner&#x27;s output signal via a voltage divider. This voltageDividerFactor is used for the latter case: e.g., a divider that uses 2 matched resistors will halve the voltage reading and requires a voltageDividerFactor of 2. The default value is 1.",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_turner_turbidity_plus.html",
        "id": "ac9126431108ab8d4eb14c9f6c7625219",
        "include": null,
        "has_details": false,
        "type": "",
        "name": "~TurnerTurbidityPlus",
        "brief": "Destroy the Turner Turbidity Plus object.",
        "description": "",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": []
      }
    ],
    "public_funcs": [
      {
        "base_url": "class_turner_turbidity_plus.html",
        "id": "af357edd1e23cfde236eda157b914b03f",
        "include": null,
        "has_details": true,
        "type": "String",
        "name": "getSensorLocation",
        "brief": "Get the pin or connection location between the mcu and the sensor.",
        "description": "<aside class=\"m-note m-info\"><h4>Note</h4><p>This is NOT the position of the sensor in the environment, merely how it is attached to the mcu.</p></aside>",
        "return_value": "Text describing how the sensor is attached to the mcu.",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": true,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": true,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": [
          {
            "name": "",
            "type": "void",
            "type_name": "void",
            "default": null,
            "description": "",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_turner_turbidity_plus.html",
        "id": "a215f9424254ec717b3df881fceb96a84",
        "include": null,
        "has_details": false,
        "type": "void",
        "name": "runWiper",
        "brief": "Run one wiper cycle.",
        "description": "",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": [
          {
            "name": "",
            "type": "void",
            "type_name": "void",
            "default": null,
            "description": "",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_turner_turbidity_plus.html",
        "id": "a9897c9a92e3c7e7e46cad971f4ea6822",
        "include": null,
        "has_details": true,
        "type": "bool",
        "name": "setup",
        "brief": "Do any one-time preparations needed before the sensor will be able to take readings.",
        "description": "<p>This sets pin mode on the wiper trigger pin</p>",
        "return_value": "<strong>bool</strong> True if the setup was successful.",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": true,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": true,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": [
          {
            "name": "",
            "type": "void",
            "type_name": "void",
            "default": null,
            "description": "",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_turner_turbidity_plus.html",
        "id": "ab04aac5bef504b3affdbd3af8923b16e",
        "include": null,
        "has_details": true,
        "type": "bool",
        "name": "wake",
        "brief": "Wake the sensor up, if necessary. Do whatever it takes to get a sensor in the proper state to begin a measurement.",
        "description": "<p>Verifies that the power is on and updates the <a href=\"class_sensor.html#a1fde72c3ddd07d892dcbfe4a09bcae49\" class=\"m-doc\">_<wbr />sensorStatus</a>. This also sets the <a href=\"class_sensor.html#a86541c88432508d6bc81a8fb41746e2e\" class=\"m-doc\">_<wbr />millisSensorActivated</a> timestamp.</p><aside class=\"m-note m-info\"><h4>Note</h4><p>This does NOT include any wait for sensor readiness.</p></aside>",
        "return_value": "True if the wake function completed successfully.",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": true,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": true,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": [
          {
            "name": "",
            "type": "void",
            "type_name": "void",
            "default": null,
            "description": "",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_turner_turbidity_plus.html",
        "id": "a541384a83979ab1bf9ce33c5e82ebdf6",
        "include": null,
        "has_details": true,
        "type": "void",
        "name": "powerUp",
        "brief": "Turn on the sensor power, if applicable.",
        "description": "<p>Generally this is done by setting the <a href=\"class_sensor.html#a60cef6626d7145eda0709980f66df52b\" class=\"m-doc\">_<wbr />powerPin</a> <code>HIGH</code>. Also sets the <a href=\"class_sensor.html#aa820f5e6c900f07d39750a77dc851a8f\" class=\"m-doc\">_<wbr />millisPowerOn</a> timestamp and updates the <a href=\"class_sensor.html#a1fde72c3ddd07d892dcbfe4a09bcae49\" class=\"m-doc\">_<wbr />sensorStatus</a>.</p>",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": true,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": true,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": [
          {
            "name": "",
            "type": "void",
            "type_name": "void",
            "default": null,
            "description": "",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_turner_turbidity_plus.html",
        "id": "a0f23358de2c76a7c116ce1c33c207203",
        "include": null,
        "has_details": true,
        "type": "void",
        "name": "powerDown",
        "brief": "Turn off the sensor power, if applicable.",
        "description": "<p>Generally this is done by setting the <a href=\"class_sensor.html#a60cef6626d7145eda0709980f66df52b\" class=\"m-doc\">_<wbr />powerPin</a> <code>LOW</code>. Also un-sets the <a href=\"class_sensor.html#aa820f5e6c900f07d39750a77dc851a8f\" class=\"m-doc\">_<wbr />millisPowerOn</a> timestamp (sets <a href=\"class_sensor.html#aa820f5e6c900f07d39750a77dc851a8f\" class=\"m-doc\">_<wbr />millisPowerOn</a> to 0) and updates the <a href=\"class_sensor.html#a1fde72c3ddd07d892dcbfe4a09bcae49\" class=\"m-doc\">_<wbr />sensorStatus</a>.</p>",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": true,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": true,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": [
          {
            "name": "",
            "type": "void",
            "type_name": "void",
            "default": null,
            "description": "",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_turner_turbidity_plus.html",
        "id": "a47fc0d9bbfb13d7e8c163a28884f1851",
        "include": null,
        "has_details": true,
        "type": "bool",
        "name": "addSingleMeasurementResult",
        "brief": "Get the results from a single measurement.",
        "description": "<p>This asks the sensor for a new result, verifies that it passes sanity range checks, and then adds the value to the result array.</p><p>This also un-sets the <a href=\"class_sensor.html#a4853c30b71ad2efc09bd6f73530155e3\" class=\"m-doc\">_<wbr />millisMeasurementRequested</a> timestamp (sets <a href=\"class_sensor.html#a4853c30b71ad2efc09bd6f73530155e3\" class=\"m-doc\">_<wbr />millisMeasurementRequested</a> to 0) and updates the <a href=\"class_sensor.html#a1fde72c3ddd07d892dcbfe4a09bcae49\" class=\"m-doc\">_<wbr />sensorStatus</a>.</p><aside class=\"m-note m-info\"><h4>Note</h4><p>This function does NOT include any waiting for the sensor complete a measurement.</p></aside>",
        "return_value": "True if the function completed successfully.",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": true,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": true,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": [
          {
            "name": "",
            "type": "void",
            "type_name": "void",
            "default": null,
            "description": "",
            "direction": ""
          }
        ]
      }
    ],
    "signals": [],
    "public_slots": [],
    "public_static_vars": [],
    "public_vars": [],
    "protected_types": [],
    "protected_static_funcs": [],
    "protected_funcs": [],
    "protected_slots": [],
    "protected_static_vars": [],
    "protected_vars": [],
    "private_funcs": [],
    "private_slots": [],
    "related": [],
    "friend_funcs": [],
    "groups": [],
    "has_enum_details": false,
    "has_typedef_details": false,
    "has_func_details": true,
    "has_var_details": false,
    "has_define_details": false,
    "breadcrumb": [
      [
        "Sensor",
        "class_sensor.html"
      ],
      [
        "TurnerTurbidityPlus",
        "class_turner_turbidity_plus.html"
      ]
    ],
    "breadcrumbGroup": [
      [
        "Turner Turbidity Plus",
        "group__sensor__turbidity__plus.html"
      ],
      [
        "TurnerTurbidityPlus",
        "class_turner_turbidity_plus.html"
      ]
    ],
    "is_final": false,
    "prefix_wbr": "TurnerTurbidityPlus::<wbr />"
  }
}