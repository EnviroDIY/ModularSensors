{
  "version": "1.12.0",
  "compound": {
    "kind": "group",
    "id": "group__sensor__processor",
    "name": "Processor Metadata",
    "url_base": "group__sensor__processor",
    "url": "group__sensor__processor.html",
    "include": null,
    "has_template_details": false,
    "templates": null,
    "brief": "",
    "description": "<p>Classes for the using the processor as a sensor.</p><section id=\"sensor_processor_intro\"><h2>Introduction</h2><p>The processor can return the number of &quot;samples&quot; it has taken, the amount of RAM it has available and, for some boards, the battery voltage (EnviroDIY Mayfly, Sodaq Mbili, Ndogo, Autonomo, and One, Adafruit Feathers). The version of the board is required as input (ie, for a EnviroDIY Mayfly: &quot;v0.3&quot; or &quot;v0.4&quot; or &quot;v0.5&quot;). Use a blank value (ie, &quot;&quot;) for un-versioned boards. Please note that while you cannot opt to average more than one sample, it really makes no sense to do so for the processor. These values are only intended to be used as diagnostics.</p></section><section id=\"sensor_processor_datasheet\"><h2>Sensor Datasheet</h2><ul><li><a href=\"https://github.com/EnviroDIY/ModularSensors/wiki/Processor-Datasheets/Atmel-ATmega1284P-Datasheet-Summary.pdf\">Atmel ATmega1284P Datasheet Summary</a></li><li><a href=\"https://github.com/EnviroDIY/ModularSensors/wiki/Processor-Datasheets/Atmel-ATmega1284P-Datasheet.pdf\">Atmel ATmega1284P Datasheet</a></li><li><a href=\"https://github.com/EnviroDIY/ModularSensors/wiki/Processor-Datasheets/Atmel-SAMD21-Datasheet-Summary.pdf\">Atmel SAMD21 Datasheet Summary</a></li><li><a href=\"https://github.com/EnviroDIY/ModularSensors/wiki/Processor-Datasheets/Atmel-SAMD21-Datasheet.pdf\">Atmel SAMD21 Datasheet</a></li><li><a href=\"https://github.com/EnviroDIY/ModularSensors/wiki/Processor-Datasheets/Atmel-ATmega16U4-32U4-Datasheet-Summary.pdf\">Atmel ATmega16U4 32U4 Datasheet Summary</a></li><li><a href=\"https://github.com/EnviroDIY/ModularSensors/wiki/Processor-Datasheets/Atmel-ATmega16U4-32U4-Datasheet.pdf\">Atmel ATmega16U4 32U4 Datasheet</a></li></ul></section><section id=\"sensor_processor_sensor_ctor\"><h2>Sensor Constructor</h2><p>{{ <a href=\"class_processor_stats.html#a913a3d7acd111fea683bc25f59239dfd\" class=\"m-doc\">ProcessorStats::<wbr />ProcessorStats</a> }}</p><hr/></section><section id=\"sensor_processor_sensor_examples\"><h2>Example Code</h2><p>The processor is used as a sensor in all of the examples, including the <a href=\"example_menu.html#menu_walk_processor_stats\" class=\"m-doc\">menu a la carte</a> example.</p><div class=\"m-code-arduino\"><div class=\"highlight\"><div class=\"line\"><a id=\"l-1\" name=\"l-1\"></a><span class=\"linenos\"> 1</span><span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;sensors/ProcessorStats.h&gt;</span>\n</div><div class=\"line\"><a id=\"l-2\" name=\"l-2\"></a><span class=\"linenos\"> 2</span>\n</div><div class=\"line\"><a id=\"l-3\" name=\"l-3\"></a><span class=\"linenos\"> 3</span><span class=\"c1\">// Create the main processor chip &quot;sensor&quot; - for general metadata</span>\n</div><div class=\"line\"><a id=\"l-4\" name=\"l-4\"></a><span class=\"linenos\"> 4</span><span class=\"kr\">const</span><span class=\"w\"> </span><span class=\"kr\">char</span><span class=\"o\">*</span><span class=\"w\">    </span><span class=\"n\">mcuBoardVersion</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">&quot;v1.1&quot;</span><span class=\"p\">;</span>\n</div><div class=\"line\"><a id=\"l-5\" name=\"l-5\"></a><span class=\"linenos\"> 5</span><span class=\"n\">ProcessorStats</span><span class=\"w\"> </span><span class=\"nf\">mcuBoard</span><span class=\"p\">(</span><span class=\"n\">mcuBoardVersion</span><span class=\"p\">);</span>\n</div><div class=\"line\"><a id=\"l-6\" name=\"l-6\"></a><span class=\"linenos\"> 6</span>\n</div><div class=\"line\"><a id=\"l-7\" name=\"l-7\"></a><span class=\"linenos\"> 7</span><span class=\"c1\">// Create sample number, battery voltage, and free RAM variable pointers for the</span>\n</div><div class=\"line\"><a id=\"l-8\" name=\"l-8\"></a><span class=\"linenos\"> 8</span><span class=\"c1\">// processor</span>\n</div><div class=\"line\"><a id=\"l-9\" name=\"l-9\"></a><span class=\"linenos\"> 9</span><span class=\"n\">Variable</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">mcuBoardBatt</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">ProcessorStats_Battery</span><span class=\"p\">(</span>\n</div><div class=\"line\"><a id=\"l-10\" name=\"l-10\"></a><span class=\"linenos\">10</span><span class=\"w\">    </span><span class=\"o\">&amp;</span><span class=\"n\">mcuBoard</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">&quot;12345678-abcd-1234-ef00-1234567890ab&quot;</span><span class=\"p\">);</span>\n</div><div class=\"line\"><a id=\"l-11\" name=\"l-11\"></a><span class=\"linenos\">11</span><span class=\"n\">Variable</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">mcuBoardAvailableRAM</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">ProcessorStats_FreeRam</span><span class=\"p\">(</span>\n</div><div class=\"line\"><a id=\"l-12\" name=\"l-12\"></a><span class=\"linenos\">12</span><span class=\"w\">    </span><span class=\"o\">&amp;</span><span class=\"n\">mcuBoard</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">&quot;12345678-abcd-1234-ef00-1234567890ab&quot;</span><span class=\"p\">);</span>\n</div><div class=\"line\"><a id=\"l-13\" name=\"l-13\"></a><span class=\"linenos\">13</span><span class=\"n\">Variable</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">mcuBoardSampNo</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">ProcessorStats_SampleNumber</span><span class=\"p\">(</span>\n</div><div class=\"line\"><a id=\"l-14\" name=\"l-14\"></a><span class=\"linenos\">14</span><span class=\"w\">    </span><span class=\"o\">&amp;</span><span class=\"n\">mcuBoard</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">&quot;12345678-abcd-1234-ef00-1234567890ab&quot;</span><span class=\"p\">);</span>\n</div></div></div></section>",
    "sections": [
      [
        "sensor_processor_intro",
        "Introduction",
        []
      ],
      [
        "sensor_processor_datasheet",
        "Sensor Datasheet",
        []
      ],
      [
        "sensor_processor_sensor_ctor",
        "Sensor Constructor",
        []
      ],
      [
        "sensor_processor_sensor_examples",
        "Example Code",
        []
      ]
    ],
    "deprecated": null,
    "since": null,
    "example_navigation": null,
    "footer_navigation": null,
    "topics": [],
    "dirs": [],
    "files": [],
    "namespaces": [],
    "classes": [
      {
        "kind": "class",
        "url": "class_processor_stats.html",
        "name": "ProcessorStats",
        "brief": "The main class to use the main processor (MCU) as a sensor.",
        "deprecated": null,
        "since": null,
        "templates": null
      },
      {
        "kind": "class",
        "url": "class_processor_stats___battery.html",
        "name": "ProcessorStats_Battery",
        "brief": "The <a href=\"class_variable.html\" class=\"m-doc\">Variable</a> sub-class used for the <a href=\"group__sensor__processor.html#sensor_processor_battery\" class=\"m-doc\">battery voltage output</a> measured by the processor&#x27;s on-board ADC.",
        "deprecated": null,
        "since": null,
        "templates": null
      },
      {
        "kind": "class",
        "url": "class_processor_stats___free_ram.html",
        "name": "ProcessorStats_FreeRam",
        "brief": "The <a href=\"class_variable.html\" class=\"m-doc\">Variable</a> sub-class used for the <a href=\"group__sensor__processor.html#sensor_processor_ram\" class=\"m-doc\">free RAM</a> measured by the MCU.",
        "deprecated": null,
        "since": null,
        "templates": null
      },
      {
        "kind": "class",
        "url": "class_processor_stats___sample_number.html",
        "name": "ProcessorStats_SampleNumber",
        "brief": "The <a href=\"class_variable.html\" class=\"m-doc\">Variable</a> sub-class used for the <a href=\"group__sensor__processor.html#sensor_processor_sampno\" class=\"m-doc\">sample number output</a> from the main processor.",
        "deprecated": null,
        "since": null,
        "templates": null
      }
    ],
    "base_classes": [],
    "derived_classes": [],
    "enums": [],
    "typedefs": [],
    "funcs": [],
    "vars": [],
    "defines": [
      {
        "base_url": "group__sensor__processor.html",
        "id": "ga03a7186c425314981b78dfcfa097cd93",
        "include": [
          "&lt;src/sensors/ProcessorStats.h&gt;",
          "_processor_stats_8h.html"
        ],
        "has_details": true,
        "name": "LOGGER_BOARD",
        "initializer": "\"EnviroDIY Mayfly\"",
        "brief": "Pretty text for the board name derived from the board&#x27;s compiler define.",
        "description": "",
        "return_value": null,
        "deprecated": null,
        "since": null,
        "has_param_details": false,
        "params": null
      }
    ],
    "public_types": [],
    "public_static_funcs": [],
    "typeless_funcs": [],
    "public_funcs": [],
    "signals": [],
    "public_slots": [],
    "public_static_vars": [],
    "public_vars": [],
    "protected_types": [],
    "protected_static_funcs": [],
    "protected_funcs": [],
    "protected_slots": [],
    "protected_static_vars": [],
    "protected_vars": [],
    "private_funcs": [],
    "private_slots": [],
    "related": [],
    "friend_funcs": [],
    "groups": [
      {
        "name": "Sensor Variable Counts",
        "id": "sensor-variable-counts",
        "description": "<p><a name=\"sensor_processor_var_counts\"></a> The number of variables that can be returned by the main processor</p>",
        "members": [
          [
            "define",
            {
              "base_url": "group__sensor__processor.html",
              "id": "ga0f2a873a149203f8a5713cb8c5d0b71c",
              "include": [
                "&lt;src/sensors/ProcessorStats.h&gt;",
                "_processor_stats_8h.html"
              ],
              "has_details": true,
              "name": "PROCESSOR_NUM_VARIABLES",
              "initializer": "3",
              "brief": "<a href=\"class_sensor.html#af26786329fd01b44cf31410d046fc8f3\" class=\"m-doc\">Sensor::<wbr />_numReturnedValues</a>; the processor can report 3 values.",
              "description": "",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ],
          [
            "define",
            {
              "base_url": "group__sensor__processor.html",
              "id": "ga31b37f04a1fd811a68fa7907bf8ab06a",
              "include": [
                "&lt;src/sensors/ProcessorStats.h&gt;",
                "_processor_stats_8h.html"
              ],
              "has_details": true,
              "name": "PROCESSOR_INC_CALC_VARIABLES",
              "initializer": "1",
              "brief": "<a href=\"class_sensor.html#a2f3f93a9205efb134cef1216d65077d2\" class=\"m-doc\">Sensor::<wbr />_incCalcValues</a>; sample number is (sort-of) calculated.",
              "description": "",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ]
        ]
      },
      {
        "name": "Sensor Timing",
        "id": "sensor-timing",
        "description": "<p><a name=\"sensor_processor_sensor_timing\"></a> The sensor timing for the processor/mcu</p><ul><li>Timing variables do not apply to the processor in the same way they do to other sensors.</li></ul>",
        "members": [
          [
            "define",
            {
              "base_url": "group__sensor__processor.html",
              "id": "ga2da797bcd9f239398162efcd3eacf2a9",
              "include": [
                "&lt;src/sensors/ProcessorStats.h&gt;",
                "_processor_stats_8h.html"
              ],
              "has_details": true,
              "name": "PROCESSOR_WARM_UP_TIME_MS",
              "initializer": "0",
              "brief": "<a href=\"class_sensor.html#aaaefd7f306f86382a3dac726531756b4\" class=\"m-doc\">Sensor::<wbr />_warmUpTime_ms</a>; the processor is never powered down - there is no waiting for the processor to warmup.",
              "description": "",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ],
          [
            "define",
            {
              "base_url": "group__sensor__processor.html",
              "id": "gaa00aad691652f6e789aaf20b993b6799",
              "include": [
                "&lt;src/sensors/ProcessorStats.h&gt;",
                "_processor_stats_8h.html"
              ],
              "has_details": true,
              "name": "PROCESSOR_STABILIZATION_TIME_MS",
              "initializer": "0",
              "brief": "<a href=\"class_sensor.html#ad6822ad09fb64658c911ce86820db79c\" class=\"m-doc\">Sensor::<wbr />_stabilizationTime_ms</a>; the processor is never powered down - there is no waiting for the processor to stabilize.",
              "description": "",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ],
          [
            "define",
            {
              "base_url": "group__sensor__processor.html",
              "id": "gaef4f84dface5b35dd9bab28dba877eaf",
              "include": [
                "&lt;src/sensors/ProcessorStats.h&gt;",
                "_processor_stats_8h.html"
              ],
              "has_details": true,
              "name": "PROCESSOR_MEASUREMENT_TIME_MS",
              "initializer": "0",
              "brief": "<a href=\"class_sensor.html#a0327d79459eaf3065c9e84b8c789c4ba\" class=\"m-doc\">Sensor::<wbr />_measurementTime_ms</a>; the processor measurement times aren&#x27;t measurable.",
              "description": "",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ]
        ]
      },
      {
        "name": "Battery Voltage",
        "id": "battery-voltage",
        "description": "<p><a name=\"sensor_processor_battery\"></a> The battery voltage variable from the processor/mcu This is the voltage as measured on the battery attached to the MCU using the inbuilt ADC, if applicable.</p><ul><li>Range is assumed to be 0 to 5V</li><li>Accuracy is processor dependent</li></ul>",
        "members": [
          [
            "define",
            {
              "base_url": "group__sensor__processor.html",
              "id": "gaa3da9f65d3fbf527bc396bf936e3ac68",
              "include": [
                "&lt;src/sensors/ProcessorStats.h&gt;",
                "_processor_stats_8h.html"
              ],
              "has_details": true,
              "name": "PROCESSOR_BATTERY_RESOLUTION",
              "initializer": "3",
              "brief": "Decimals places in string representation; battery voltage should have 3.",
              "description": "<p>The resolution is of the EnviroDIY Mayfly is 0.005V, we will use that resolution for all processors.</p><p>{{ <a href=\"class_processor_stats___battery.html#aaf594d0def0b34256885217652f60bd9\" class=\"m-doc\">ProcessorStats_Battery::<wbr />ProcessorStats_Battery</a> }}</p>",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ],
          [
            "define",
            {
              "base_url": "group__sensor__processor.html",
              "id": "ga63be7c7479a5316678a488a56b0503a3",
              "include": [
                "&lt;src/sensors/ProcessorStats.h&gt;",
                "_processor_stats_8h.html"
              ],
              "has_details": true,
              "name": "PROCESSOR_BATTERY_VAR_NUM",
              "initializer": "0",
              "brief": "Battery voltage is stored in sensorValues[0].",
              "description": "",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ],
          [
            "define",
            {
              "base_url": "group__sensor__processor.html",
              "id": "ga0cf390e13ac16a6b00b812636acdb20a",
              "include": [
                "&lt;src/sensors/ProcessorStats.h&gt;",
                "_processor_stats_8h.html"
              ],
              "has_details": true,
              "name": "PROCESSOR_BATTERY_VAR_NAME",
              "initializer": "\"batteryVoltage\"",
              "brief": "<a href=\"class_variable.html\" class=\"m-doc\">Variable</a> name in <a href=\"http://vocabulary.odm2.org/variablename/\">ODM2 controlled vocabulary</a>; batteryVoltage.",
              "description": "",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ],
          [
            "define",
            {
              "base_url": "group__sensor__processor.html",
              "id": "gab5d88ba7be5ba6b7c31cbc3556129292",
              "include": [
                "&lt;src/sensors/ProcessorStats.h&gt;",
                "_processor_stats_8h.html"
              ],
              "has_details": true,
              "name": "PROCESSOR_BATTERY_UNIT_NAME",
              "initializer": "\"volt\"",
              "brief": "<a href=\"class_variable.html\" class=\"m-doc\">Variable</a> unit name in <a href=\"http://vocabulary.odm2.org/units/\">ODM2 controlled vocabulary</a>; &quot;volt&quot;.",
              "description": "",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ],
          [
            "define",
            {
              "base_url": "group__sensor__processor.html",
              "id": "ga8be6ce6a1cc6afce73f0e14ad68a3b57",
              "include": [
                "&lt;src/sensors/ProcessorStats.h&gt;",
                "_processor_stats_8h.html"
              ],
              "has_details": true,
              "name": "PROCESSOR_BATTERY_DEFAULT_CODE",
              "initializer": "\"Battery\"",
              "brief": "Default variable short code; &quot;Battery&quot;.",
              "description": "",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ]
        ]
      },
      {
        "name": "Available RAM",
        "id": "available-ram",
        "description": "<p><a name=\"sensor_processor_ram\"></a> The RAM variable from the processor/mcu This is the amount of free space on the processor when running the program. This is just a diagnostic value. This number <em><strong>should always remain the same for a single logger program</strong></em>. If this number is not constant over time, there is a memory leak and something wrong with your logging program.</p><ul><li>Range is 0 to full RAM available on processor</li></ul><p>{{ <a href=\"class_processor_stats___free_ram.html#abd09fba074e531019ac203bf61c87f90\" class=\"m-doc\">ProcessorStats_FreeRam::<wbr />ProcessorStats_FreeRam</a> }}</p>",
        "members": [
          [
            "define",
            {
              "base_url": "group__sensor__processor.html",
              "id": "ga98a5566c0cca149b161c6b7d1db30673",
              "include": [
                "&lt;src/sensors/ProcessorStats.h&gt;",
                "_processor_stats_8h.html"
              ],
              "has_details": true,
              "name": "PROCESSOR_RAM_RESOLUTION",
              "initializer": "0",
              "brief": "Decimals places in string representation; ram should have 0 - resolution is 1 bit.",
              "description": "",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ],
          [
            "define",
            {
              "base_url": "group__sensor__processor.html",
              "id": "ga66b0b0a1c6b21030df16e281458c6203",
              "include": [
                "&lt;src/sensors/ProcessorStats.h&gt;",
                "_processor_stats_8h.html"
              ],
              "has_details": true,
              "name": "PROCESSOR_RAM_VAR_NUM",
              "initializer": "1",
              "brief": "Free RAM is stored in sensorValues[1].",
              "description": "",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ],
          [
            "define",
            {
              "base_url": "group__sensor__processor.html",
              "id": "ga227fa85056bff8415b210176f82cc3b5",
              "include": [
                "&lt;src/sensors/ProcessorStats.h&gt;",
                "_processor_stats_8h.html"
              ],
              "has_details": true,
              "name": "PROCESSOR_RAM_VAR_NAME",
              "initializer": "\"freeSRAM\"",
              "brief": "<a href=\"class_variable.html\" class=\"m-doc\">Variable</a> name in <a href=\"http://vocabulary.odm2.org/variablename/\">ODM2 controlled vocabulary</a>; freeSRAM.",
              "description": "",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ],
          [
            "define",
            {
              "base_url": "group__sensor__processor.html",
              "id": "ga59eafe6bfbbe3c47bff9398c7934edd9",
              "include": [
                "&lt;src/sensors/ProcessorStats.h&gt;",
                "_processor_stats_8h.html"
              ],
              "has_details": true,
              "name": "PROCESSOR_RAM_UNIT_NAME",
              "initializer": "\"Bit\"",
              "brief": "<a href=\"class_variable.html\" class=\"m-doc\">Variable</a> unit name in <a href=\"http://vocabulary.odm2.org/units/\">ODM2 controlled vocabulary</a>; &quot;Bit&quot;.",
              "description": "",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ],
          [
            "define",
            {
              "base_url": "group__sensor__processor.html",
              "id": "ga279828fd609f07255c405b7bbbde6eb4",
              "include": [
                "&lt;src/sensors/ProcessorStats.h&gt;",
                "_processor_stats_8h.html"
              ],
              "has_details": true,
              "name": "PROCESSOR_RAM_DEFAULT_CODE",
              "initializer": "\"FreeRam\"",
              "brief": "Default variable short code; &quot;FreeRam&quot;.",
              "description": "",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ]
        ]
      },
      {
        "name": "Sample Number",
        "id": "sample-number",
        "description": "<p><a name=\"sensor_processor_sampno\"></a> The sample number variable from the processor/mcu</p><aside class=\"m-note m-info\"><h4>Note</h4><p>This is a board diagnostic. It is <em><strong>roughly</strong></em> the number of samples measured since the processor was last restarted. This value simply increments up by one every time the addSingleMeasurementResult() function is called for the processor sensor. It is intended only as a rough diagnostic to show when the processor restarts.</p></aside><p>{{ <a href=\"class_processor_stats___sample_number.html#ad8e7d73182ded596d82e6e58e357243a\" class=\"m-doc\">ProcessorStats_SampleNumber::<wbr />ProcessorStats_SampleNumber</a> }}</p>",
        "members": [
          [
            "define",
            {
              "base_url": "group__sensor__processor.html",
              "id": "ga38ddd2e5bb64c4e13b4bd94094d4c5d7",
              "include": [
                "&lt;src/sensors/ProcessorStats.h&gt;",
                "_processor_stats_8h.html"
              ],
              "has_details": true,
              "name": "PROCESSOR_SAMPNUM_RESOLUTION",
              "initializer": "0",
              "brief": "Decimals places in string representation; sample number should have 0 - resolution is 1.",
              "description": "",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ],
          [
            "define",
            {
              "base_url": "group__sensor__processor.html",
              "id": "ga4b46af4b754d5e3d30533ee4f6c7ad70",
              "include": [
                "&lt;src/sensors/ProcessorStats.h&gt;",
                "_processor_stats_8h.html"
              ],
              "has_details": true,
              "name": "PROCESSOR_SAMPNUM_VAR_NUM",
              "initializer": "2",
              "brief": "Sample number is stored in sensorValues[2].",
              "description": "",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ],
          [
            "define",
            {
              "base_url": "group__sensor__processor.html",
              "id": "gab2a954a4419ba5a3501fac9e7cc58725",
              "include": [
                "&lt;src/sensors/ProcessorStats.h&gt;",
                "_processor_stats_8h.html"
              ],
              "has_details": true,
              "name": "PROCESSOR_SAMPNUM_VAR_NAME",
              "initializer": "\"sequenceNumber\"",
              "brief": "<a href=\"class_variable.html\" class=\"m-doc\">Variable</a> name in <a href=\"http://vocabulary.odm2.org/variablename/\">ODM2 controlled vocabulary</a>; sequenceNumber.",
              "description": "",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ],
          [
            "define",
            {
              "base_url": "group__sensor__processor.html",
              "id": "gaf936e29ab1d44a09be6c5a9c087ef166",
              "include": [
                "&lt;src/sensors/ProcessorStats.h&gt;",
                "_processor_stats_8h.html"
              ],
              "has_details": true,
              "name": "PROCESSOR_SAMPNUM_UNIT_NAME",
              "initializer": "\"Dimensionless\"",
              "brief": "<a href=\"class_variable.html\" class=\"m-doc\">Variable</a> unit name in <a href=\"http://vocabulary.odm2.org/units/\">ODM2 controlled vocabulary</a>; &quot;Dimensionless&quot; (sequence number)",
              "description": "",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ],
          [
            "define",
            {
              "base_url": "group__sensor__processor.html",
              "id": "ga489528fad349a0dfd0fb50e8ce47db05",
              "include": [
                "&lt;src/sensors/ProcessorStats.h&gt;",
                "_processor_stats_8h.html"
              ],
              "has_details": true,
              "name": "PROCESSOR_SAMPNUM_DEFAULT_CODE",
              "initializer": "\"SampNum\"",
              "brief": "Default variable short code; &quot;SampNum&quot;.",
              "description": "",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ]
        ]
      }
    ],
    "has_enum_details": false,
    "has_typedef_details": false,
    "has_func_details": false,
    "has_var_details": false,
    "has_define_details": true,
    "breadcrumb": [
      [
        "Supported Sensors",
        "group__the__sensors.html"
      ],
      [
        "Processor Metadata",
        "group__sensor__processor.html"
      ]
    ],
    "breadcrumbGroup": [
      [
        "Processor Metadata",
        "group__sensor__processor.html"
      ]
    ]
  }
}