{
  "version": "1.12.0",
  "compound": {
    "kind": "class",
    "id": "class_campbell_o_b_s3",
    "name": "CampbellOBS3",
    "url_base": "class_campbell_o_b_s3",
    "url": "class_campbell_o_b_s3.html",
    "include": [
      "&lt;src/sensors/CampbellOBS3.h&gt;",
      "_campbell_o_b_s3_8h.html"
    ],
    "has_template_details": false,
    "templates": null,
    "brief": "The <a href=\"class_sensor.html\" class=\"m-doc\">Sensor</a> sub-class for the <a href=\"group__sensor__obs3.html\" class=\"m-doc\">Campbell OBS3 analog turbidity sensor</a>.",
    "description": "<p>Low and high range are treated as completely independent, so only 2 &quot;variables&quot; are measured by each sensor - one for the raw voltage and another for the calibrated turbidity. To get both high and low range values, create two sensor objects!</p>",
    "sections": "",
    "deprecated": null,
    "since": null,
    "example_navigation": null,
    "footer_navigation": null,
    "topics": [],
    "dirs": [],
    "files": [],
    "namespaces": [],
    "classes": [],
    "base_classes": [
      {
        "kind": "class",
        "url": "class_sensor.html",
        "name": "Sensor",
        "brief": "The &quot;Sensor&quot; class is used for all sensor-level operations - waking, sleeping, and taking measurements.",
        "templates": null,
        "deprecated": null,
        "since": null,
        "is_protected": false,
        "is_virtual": false
      }
    ],
    "derived_classes": [],
    "enums": [],
    "typedefs": [],
    "funcs": [],
    "vars": [],
    "defines": [],
    "public_types": [],
    "public_static_funcs": [],
    "typeless_funcs": [
      {
        "base_url": "class_campbell_o_b_s3.html",
        "id": "ae693d2fc6bd4c46beb8a64c5b112afe2",
        "include": null,
        "has_details": true,
        "type": "",
        "name": "CampbellOBS3",
        "brief": "Construct a new Campbell OBS3 object - need the power pin, the ADS1X15 data channel, and the calibration info.",
        "description": "<aside class=\"m-note m-info\"><h4>Note</h4><p>ModularSensors only supports connecting the ADS1x15 to the primary hardware I2C instance defined in the Arduino core. Connecting the ADS to a secondary hardware or software I2C instance is <em>not</em> supported!</p></aside>",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "powerPin",
            "type": "int8_t",
            "type_name": "int8_t powerPin",
            "default": null,
            "description": "<p>The pin on the mcu controlling power to the OBS3+ Use -1 if it is continuously powered.</p><ul><li>The ADS1x15 requires an input voltage of 2.0-5.5V, but this library assumes the ADS is powered with 3.3V.</li><li>The OBS-3 itself requires a 5-15V power supply, which can be turned off between measurements.</li></ul>",
            "direction": ""
          },
          {
            "name": "adsChannel",
            "type": "uint8_t",
            "type_name": "uint8_t adsChannel",
            "default": null,
            "description": "The analog data channel <em>on the TI ADS1115</em> that the OBS3 is connected to (0-3).",
            "direction": ""
          },
          {
            "name": "x2_coeff_A",
            "type": "float",
            "type_name": "float x2_coeff_A",
            "default": null,
            "description": "The x2 (A) coefficient for the calibration <em>in volts</em>",
            "direction": ""
          },
          {
            "name": "x1_coeff_B",
            "type": "float",
            "type_name": "float x1_coeff_B",
            "default": null,
            "description": "The x (B) coefficient for the calibration <em>in volts</em>",
            "direction": ""
          },
          {
            "name": "x0_coeff_C",
            "type": "float",
            "type_name": "float x0_coeff_C",
            "default": null,
            "description": "The x0 (C) coefficient for the calibration <em>in volts</em>",
            "direction": ""
          },
          {
            "name": "i2cAddress",
            "type": "uint8_t",
            "type_name": "uint8_t i2cAddress",
            "default": "0x48",
            "description": "The I2C address of the ADS 1x15, default is 0x48 (ADDR = GND)",
            "direction": ""
          },
          {
            "name": "measurementsToAverage",
            "type": "uint8_t",
            "type_name": "uint8_t measurementsToAverage",
            "default": "1",
            "description": "The number of measurements to take and average before giving a &quot;final&quot; result from the sensor; optional with a default value of 1.",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_campbell_o_b_s3.html",
        "id": "a9d84593af11045a64a449358bbb4fb46",
        "include": null,
        "has_details": false,
        "type": "",
        "name": "~CampbellOBS3",
        "brief": "Destroy the Campbell OBS3 object.",
        "description": "",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": []
      }
    ],
    "public_funcs": [
      {
        "base_url": "class_campbell_o_b_s3.html",
        "id": "a99058ac343cdc17c70325054b13423e6",
        "include": null,
        "has_details": true,
        "type": "String",
        "name": "getSensorLocation",
        "brief": "Get the pin or connection location between the mcu and the sensor.",
        "description": "<aside class=\"m-note m-info\"><h4>Note</h4><p>This is NOT the position of the sensor in the environment, merely how it is attached to the mcu.</p></aside>",
        "return_value": "Text describing how the sensor is attached to the mcu.",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": true,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": true,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": [
          {
            "name": "",
            "type": "void",
            "type_name": "void",
            "default": null,
            "description": "",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_campbell_o_b_s3.html",
        "id": "a07e93ccf8d11d13f3ecbb22558997f67",
        "include": null,
        "has_details": true,
        "type": "bool",
        "name": "addSingleMeasurementResult",
        "brief": "Get the results from a single measurement.",
        "description": "<p>This asks the sensor for a new result, verifies that it passes sanity range checks, and then adds the value to the result array.</p><p>This also un-sets the <a href=\"class_sensor.html#a4853c30b71ad2efc09bd6f73530155e3\" class=\"m-doc\">_<wbr />millisMeasurementRequested</a> timestamp (sets <a href=\"class_sensor.html#a4853c30b71ad2efc09bd6f73530155e3\" class=\"m-doc\">_<wbr />millisMeasurementRequested</a> to 0) and updates the <a href=\"class_sensor.html#a1fde72c3ddd07d892dcbfe4a09bcae49\" class=\"m-doc\">_<wbr />sensorStatus</a>.</p><aside class=\"m-note m-info\"><h4>Note</h4><p>This function does NOT include any waiting for the sensor complete a measurement.</p></aside>",
        "return_value": "True if the function completed successfully.",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": true,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": true,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": [
          {
            "name": "",
            "type": "void",
            "type_name": "void",
            "default": null,
            "description": "",
            "direction": ""
          }
        ]
      }
    ],
    "signals": [],
    "public_slots": [],
    "public_static_vars": [],
    "public_vars": [],
    "protected_types": [],
    "protected_static_funcs": [],
    "protected_funcs": [],
    "protected_slots": [],
    "protected_static_vars": [],
    "protected_vars": [],
    "private_funcs": [],
    "private_slots": [],
    "related": [],
    "friend_funcs": [],
    "groups": [],
    "has_enum_details": false,
    "has_typedef_details": false,
    "has_func_details": true,
    "has_var_details": false,
    "has_define_details": false,
    "breadcrumb": [
      [
        "Sensor",
        "class_sensor.html"
      ],
      [
        "CampbellOBS3",
        "class_campbell_o_b_s3.html"
      ]
    ],
    "breadcrumbGroup": [
      [
        "Campbell OBS3+",
        "group__sensor__obs3.html"
      ],
      [
        "CampbellOBS3",
        "class_campbell_o_b_s3.html"
      ]
    ],
    "is_final": false,
    "prefix_wbr": "CampbellOBS3::<wbr />"
  }
}