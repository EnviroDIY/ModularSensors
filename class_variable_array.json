{
  "version": "1.14.0",
  "compound": {
    "kind": "class",
    "id": "class_variable_array",
    "name": "VariableArray",
    "url_base": "class_variable_array",
    "url": "class_variable_array.html",
    "include": [
      "&lt;src/VariableArray.h&gt;",
      "_variable_array_8h.html"
    ],
    "has_template_details": false,
    "templates": null,
    "brief": "The variable array class defines the logic for iterating through many variable objects.",
    "description": "<p>This takes advantage of various time stamps within the <a href=\"class_sensor.html\" class=\"m-doc\">Sensor</a> class to optimize the timing of communications with many sensors.</p><p>In general, the order of the variables in the variable list or array should not matter. The library attempts to minimize sensor on time as much as possible by requesting data from the each sensor as soon as it is able to report a result, regardless of its position in the array. The only place the order of the variables will be reflected is in the order of the data columns in data saved by a logger or when sending data to ThingSpeak.</p><p>To use the <a href=\"class_variable_array.html\" class=\"m-doc\">VariableArray</a> module, you must first create the array of pointers. This should be done outside of the setup() or loop() functions. Remember that for measured variables you must first create a new sensor instance and then one or more new variable instances for that sensor (depending on how many values it can return). The sensor functions for sensors within a variable array take advantage of all of the timestamps and status bits within the sensor object to minimize the amount of time that all sensors are powered and the processor is awake. That is, the first sensor to be warmed up will be set up or activated first; the first sensor to stabilize will be asked for values first. All calculations for any calculated variables happen after all the sensor updating has finished. The order of the variables within the array should not matter, though for code readability, I strongly suggest putting all the variables attached to a single sensor next to each other in the array. When creating a logger, the order of variables in the array determines the order the values will be written to the data file.</p>",
    "sections": "",
    "deprecated": null,
    "since": null,
    "example_navigation": null,
    "footer_navigation": null,
    "topics": [],
    "dirs": [],
    "files": [],
    "namespaces": [],
    "classes": [],
    "base_classes": [],
    "derived_classes": [],
    "enums": [],
    "typedefs": [],
    "funcs": [],
    "vars": [],
    "defines": [],
    "public_types": [],
    "public_static_funcs": [],
    "typeless_funcs": [
      {
        "base_url": "class_variable_array.html",
        "id": "a21ad2a1cf6ca1049bf9f4ba82ba76811",
        "include": null,
        "has_details": false,
        "type": "",
        "name": "VariableArray",
        "brief": "Construct a new <a href=\"class_variable.html\" class=\"m-doc\">Variable</a> Array object.",
        "description": "",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": []
      },
      {
        "base_url": "class_variable_array.html",
        "id": "ae57bce4fdb94536fa61016f2760ade41",
        "include": null,
        "has_details": true,
        "type": "",
        "name": "VariableArray",
        "brief": "Construct a new <a href=\"class_variable.html\" class=\"m-doc\">Variable</a> Array object.",
        "description": "",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "variableCount",
            "type": "uint8_t",
            "type_name": "uint8_t variableCount",
            "default": null,
            "description": "The number of variables in the array",
            "direction": ""
          },
          {
            "name": "variableList",
            "type": "<a href=\"class_variable.html\" class=\"m-doc\">Variable</a>*[]",
            "type_name": "<a href=\"class_variable.html\" class=\"m-doc\">Variable</a>* variableList[]",
            "default": null,
            "description": "An array of pointers to variable objects. The pointers may be to calculated or measured variable objects.",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_variable_array.html",
        "id": "a89ef7cf7e9f5906479dd7c5523b6aabf",
        "include": null,
        "has_details": true,
        "type": "",
        "name": "VariableArray",
        "brief": "Construct a new <a href=\"class_variable.html\" class=\"m-doc\">Variable</a> Array object.",
        "description": "",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "variableCount",
            "type": "uint8_t",
            "type_name": "uint8_t variableCount",
            "default": null,
            "description": "The number of variables in the array",
            "direction": ""
          },
          {
            "name": "variableList",
            "type": "<a href=\"class_variable.html\" class=\"m-doc\">Variable</a>*[]",
            "type_name": "<a href=\"class_variable.html\" class=\"m-doc\">Variable</a>* variableList[]",
            "default": null,
            "description": "An array of pointers to variable objects. The pointers may be to calculated or measured variable objects.",
            "direction": ""
          },
          {
            "name": "uuids",
            "type": "const char*[]",
            "type_name": "const char* uuids[]",
            "default": null,
            "description": "An array of UUID&#x27;s. These are linked 1-to-1 with the variables by array position.",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_variable_array.html",
        "id": "ae4f3371b7a7a13ad969e407758db8748",
        "include": null,
        "has_details": false,
        "type": "",
        "name": "~VariableArray",
        "brief": "Destroy the <a href=\"class_variable.html\" class=\"m-doc\">Variable</a> Array object - no action taken.",
        "description": "",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": []
      }
    ],
    "public_funcs": [
      {
        "base_url": "class_variable_array.html",
        "id": "a042cb9ce52beaf76ddd78630391333bc",
        "include": null,
        "has_details": true,
        "type": "void",
        "name": "begin",
        "brief": "Begins the <a href=\"class_variable_array.html\" class=\"m-doc\">VariableArray</a>. Supplies a variable array, checks the validity of all UUID and outputs the results.",
        "description": "",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "variableCount",
            "type": "uint8_t",
            "type_name": "uint8_t variableCount",
            "default": null,
            "description": "The number of variables in the array. Supersedes any value given in the constructor.",
            "direction": ""
          },
          {
            "name": "variableList",
            "type": "<a href=\"class_variable.html\" class=\"m-doc\">Variable</a>*[]",
            "type_name": "<a href=\"class_variable.html\" class=\"m-doc\">Variable</a>* variableList[]",
            "default": null,
            "description": "An array of pointers to variable objects. The pointers may be to calculated or measured variable objects. Supersedes any value given in the constructor.",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_variable_array.html",
        "id": "a54c338a7305f0d30caf206c1eac3ab6e",
        "include": null,
        "has_details": true,
        "type": "void",
        "name": "begin",
        "brief": "Begins the <a href=\"class_variable_array.html\" class=\"m-doc\">VariableArray</a>. Supplies a variable array and UUIDs, checks the validity of all UUID and outputs the results.",
        "description": "",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "variableCount",
            "type": "uint8_t",
            "type_name": "uint8_t variableCount",
            "default": null,
            "description": "The number of variables in the array. Supersedes any value given in the constructor.",
            "direction": ""
          },
          {
            "name": "variableList",
            "type": "<a href=\"class_variable.html\" class=\"m-doc\">Variable</a>*[]",
            "type_name": "<a href=\"class_variable.html\" class=\"m-doc\">Variable</a>* variableList[]",
            "default": null,
            "description": "An array of pointers to variable objects. The pointers may be to calculated or measured variable objects. Supersedes any value given in the constructor.",
            "direction": ""
          },
          {
            "name": "uuids",
            "type": "const char*[]",
            "type_name": "const char* uuids[]",
            "default": null,
            "description": "An array of UUID&#x27;s. These are linked 1-to-1 with the variables by array position.",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_variable_array.html",
        "id": "a2b62a4faefe6d2ab1397413e5d5f49c6",
        "include": null,
        "has_details": false,
        "type": "void",
        "name": "begin",
        "brief": "Begins the <a href=\"class_variable_array.html\" class=\"m-doc\">VariableArray</a>. Checks the validity of all UUID and outputs the results.",
        "description": "",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": []
      },
      {
        "base_url": "class_variable_array.html",
        "id": "a0d5b2f80ae85225c2cef7b385693cc03",
        "include": null,
        "has_details": true,
        "type": "uint8_t",
        "name": "getVariableCount",
        "brief": "Get the count of variables in the variable array.",
        "description": "",
        "return_value": "The number of variables",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": [
          {
            "name": "",
            "type": "void",
            "type_name": "void",
            "default": null,
            "description": "",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_variable_array.html",
        "id": "a52c38882eaa89579b6598c49d65fec1b",
        "include": null,
        "has_details": true,
        "type": "uint8_t",
        "name": "getCalculatedVariableCount",
        "brief": "Get the number of calculated variables.",
        "description": "",
        "return_value": "The number of calculated (ie, not measured by a sensor) variables",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": [
          {
            "name": "",
            "type": "void",
            "type_name": "void",
            "default": null,
            "description": "",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_variable_array.html",
        "id": "a5e1c212e2ae005aebee7f51d259aed29",
        "include": null,
        "has_details": true,
        "type": "uint8_t",
        "name": "getSensorCount",
        "brief": "Get the number of sensors associated with the variables in the array.",
        "description": "<p>This will often be different from the number of variables because many sensors can return multiple variables.</p>",
        "return_value": "The number of sensors",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": [
          {
            "name": "",
            "type": "void",
            "type_name": "void",
            "default": null,
            "description": "",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_variable_array.html",
        "id": "ab8e9af41e1311600b177764a3aa91b16",
        "include": null,
        "has_details": true,
        "type": "void",
        "name": "matchUUIDs",
        "brief": "Match UUID&#x27;s from the given variables in the variable array.",
        "description": "<p>This over-writes all UUID&#x27;s previously assigned to every variable. The match is 1-to-1 based on array position.</p>",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "uuids",
            "type": "const char*[]",
            "type_name": "const char* uuids[]",
            "default": null,
            "description": "An array of UUID&#x27;s",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_variable_array.html",
        "id": "aae604ab62c7556277f22216189156ad2",
        "include": null,
        "has_details": true,
        "type": "bool",
        "name": "setupSensors",
        "brief": "Set up all of the sensors in the tied to variables in the array.",
        "description": "<p>This sets up all of the variables in the array and their respective sensors by running all of their setup() functions. A single sensor attached to may variables is only set up one time. If a sensor doesn&#x27;t respond to its setup command, the command is called 5 times in attempt to make a connection. If all sensors are set up successfully, returns true.</p>",
        "return_value": "True indicates all sensors have been set up successfully.",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": [
          {
            "name": "",
            "type": "void",
            "type_name": "void",
            "default": null,
            "description": "",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_variable_array.html",
        "id": "a2ffbb603281e527d1715eb36d0827d71",
        "include": null,
        "has_details": true,
        "type": "void",
        "name": "sensorsPowerUp",
        "brief": "Power up each sensor.",
        "description": "<p>Runs the powerUp sensor function for each unique sensor.</p>",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": [
          {
            "name": "",
            "type": "void",
            "type_name": "void",
            "default": null,
            "description": "",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_variable_array.html",
        "id": "a4e44c44195edcaeb2049c86cf416b5a3",
        "include": null,
        "has_details": true,
        "type": "bool",
        "name": "sensorsWake",
        "brief": "Wake up each sensor.",
        "description": "<p>Runs the wake sensor function for each unique sensor. Repeatedly checks each sensor&#x27;s readiness state to optimize timing.</p>",
        "return_value": "True if all wake functions were run successfully.",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": [
          {
            "name": "",
            "type": "void",
            "type_name": "void",
            "default": null,
            "description": "",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_variable_array.html",
        "id": "a20e71581938f629c09f24fe334b58a34",
        "include": null,
        "has_details": true,
        "type": "bool",
        "name": "sensorsSleep",
        "brief": "Put all sensors to sleep.",
        "description": "<p>Runs the sleep sensor function for each unique sensor.</p>",
        "return_value": "True if all sleep functions were run successfully.",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": [
          {
            "name": "",
            "type": "void",
            "type_name": "void",
            "default": null,
            "description": "",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_variable_array.html",
        "id": "a7e8145b59e32a080e035fbcf0067747f",
        "include": null,
        "has_details": false,
        "type": "void",
        "name": "sensorsPowerDown",
        "brief": "Cut power to all sensors. Runs the powerDown sensor function for each unique sensor.",
        "description": "",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": [
          {
            "name": "",
            "type": "void",
            "type_name": "void",
            "default": null,
            "description": "",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_variable_array.html",
        "id": "adbd33ac2037fcadef5f1afb8d3e863cc",
        "include": null,
        "has_details": true,
        "type": "bool",
        "name": "updateAllSensors",
        "brief": "Update the values for all connected sensors.",
        "description": "<p>Does not power or wake/sleep sensors. Returns a boolean indication the overall success. Does NOT return any values. Repeatedly checks each sensor&#x27;s readiness state to optimize timing.</p>",
        "return_value": "True if all steps of the update succeeded.",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": [
          {
            "name": "",
            "type": "void",
            "type_name": "void",
            "default": null,
            "description": "",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_variable_array.html",
        "id": "adb63e000ac2db95f172d5fd9b41c61b3",
        "include": null,
        "has_details": true,
        "type": "bool",
        "name": "completeUpdate",
        "brief": "Update the values for all connected sensors including powering them and waking and putting them to sleep.",
        "description": "<p>Returns a boolean indication the overall success. Does NOT return any values. Repeatedly checks each sensor&#x27;s readiness state to optimize timing.</p>",
        "return_value": "True if all steps of the update succeeded.",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": [
          {
            "name": "",
            "type": "void",
            "type_name": "void",
            "default": null,
            "description": "",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_variable_array.html",
        "id": "a686f78d9e6531dbe291423e82a585e1e",
        "include": null,
        "has_details": true,
        "type": "void",
        "name": "printSensorData",
        "brief": "Print out the results for all connected sensors to a stream.",
        "description": "<p>This prints current sensor values along with meta-data to a stream (either hardware or software serial). By default, it will print to the first Serial port. Note that the input is a pointer to a stream instance</p><ul><li>to use a hardware serial instance you must use an ampersand before the serial name (ie, &amp;Serial1).</li></ul>",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "stream",
            "type": "Stream*",
            "type_name": "Stream* stream",
            "default": "&amp;Serial",
            "description": "An Arduino Stream instance",
            "direction": ""
          }
        ]
      }
    ],
    "signals": [],
    "public_slots": [],
    "public_static_vars": [],
    "public_vars": [
      {
        "base_url": "class_variable_array.html",
        "id": "a744f9014342b03d62114d3a1b6827222",
        "include": null,
        "has_details": false,
        "type": "<a href=\"class_variable.html\" class=\"m-doc\">Variable</a>**",
        "is_constexpr": false,
        "is_static": false,
        "is_protected": false,
        "is_private": false,
        "name": "arrayOfVars",
        "brief": "Pointer to the array of variable pointers.",
        "description": "",
        "deprecated": null,
        "since": null,
        "has_template_details": false,
        "templates": null
      }
    ],
    "protected_types": [],
    "protected_static_funcs": [],
    "protected_funcs": [],
    "protected_slots": [],
    "protected_static_vars": [],
    "protected_vars": [
      {
        "base_url": "class_variable_array.html",
        "id": "afb0bf46b6ab204241294b753d0c1a18d",
        "include": null,
        "has_details": false,
        "type": "uint8_t",
        "is_constexpr": false,
        "is_static": false,
        "is_protected": true,
        "is_private": false,
        "name": "_variableCount",
        "brief": "The count of variables in the array.",
        "description": "",
        "deprecated": null,
        "since": null,
        "has_template_details": false,
        "templates": null
      },
      {
        "base_url": "class_variable_array.html",
        "id": "a55ee05fb10630e4568dbea35a3aae99e",
        "include": null,
        "has_details": false,
        "type": "uint8_t",
        "is_constexpr": false,
        "is_static": false,
        "is_protected": true,
        "is_private": false,
        "name": "_sensorCount",
        "brief": "The count of unique sensors tied to variables in the array.",
        "description": "",
        "deprecated": null,
        "since": null,
        "has_template_details": false,
        "templates": null
      },
      {
        "base_url": "class_variable_array.html",
        "id": "a1df2a9ea8e6ccc32a35c847eb8076b5a",
        "include": null,
        "has_details": false,
        "type": "uint8_t",
        "is_constexpr": false,
        "is_static": false,
        "is_protected": true,
        "is_private": false,
        "name": "_maxSamplesToAverage",
        "brief": "The maximum number of samples to average of an single sensor.",
        "description": "",
        "deprecated": null,
        "since": null,
        "has_template_details": false,
        "templates": null
      }
    ],
    "private_funcs": [],
    "private_slots": [],
    "related": [],
    "friend_funcs": [],
    "groups": [],
    "has_enum_details": false,
    "has_typedef_details": false,
    "has_func_details": true,
    "has_var_details": false,
    "has_define_details": false,
    "breadcrumb": [
      [
        "VariableArray",
        "class_variable_array.html"
      ]
    ],
    "breadcrumbGroup": [
      [
        "Primary Object Classes",
        "group__base__classes.html"
      ],
      [
        "VariableArray",
        "class_variable_array.html"
      ]
    ],
    "is_final": false,
    "prefix_wbr": "VariableArray::<wbr />"
  }
}