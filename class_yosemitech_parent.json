{
  "version": "1.12.0",
  "compound": {
    "kind": "class",
    "id": "class_yosemitech_parent",
    "name": "YosemitechParent",
    "url_base": "class_yosemitech_parent",
    "url": "class_yosemitech_parent.html",
    "include": [
      "&lt;src/sensors/YosemitechParent.h&gt;",
      "_yosemitech_parent_8h.html"
    ],
    "has_template_details": false,
    "templates": null,
    "brief": "The <a href=\"class_sensor.html\" class=\"m-doc\">Sensor</a> sub-class for all the <a href=\"group__yosemitech__group.html\" class=\"m-doc\">Yosemitech sensors</a>.",
    "description": "",
    "sections": "",
    "deprecated": null,
    "since": null,
    "example_navigation": null,
    "footer_navigation": null,
    "topics": [],
    "dirs": [],
    "files": [],
    "namespaces": [],
    "classes": [],
    "base_classes": [
      {
        "kind": "class",
        "url": "class_sensor.html",
        "name": "Sensor",
        "brief": "The &quot;Sensor&quot; class is used for all sensor-level operations - waking, sleeping, and taking measurements.",
        "templates": null,
        "deprecated": null,
        "since": null,
        "is_protected": false,
        "is_virtual": false
      }
    ],
    "derived_classes": [
      {
        "kind": "class",
        "url": "class_yosemitech_y4000.html",
        "name": "YosemitechY4000",
        "brief": "The <a href=\"class_sensor.html\" class=\"m-doc\">Sensor</a> sub-class for the <a href=\"group__sensor__y4000.html\" class=\"m-doc\">Yosemitech Y4000 multiparameter sonde</a>.",
        "templates": null,
        "deprecated": null,
        "since": null,
        "is_virtual": false,
        "is_final": false
      },
      {
        "kind": "class",
        "url": "class_yosemitech_y504.html",
        "name": "YosemitechY504",
        "brief": "The <a href=\"class_sensor.html\" class=\"m-doc\">Sensor</a> sub-class for the <a href=\"group__sensor__y504.html\" class=\"m-doc\">Yosemitech Y502-A or Y504-A optical dissolved oxygen sensors</a>.",
        "templates": null,
        "deprecated": null,
        "since": null,
        "is_virtual": false,
        "is_final": false
      },
      {
        "kind": "class",
        "url": "class_yosemitech_y510.html",
        "name": "YosemitechY510",
        "brief": "The <a href=\"class_sensor.html\" class=\"m-doc\">Sensor</a> sub-class for the <a href=\"group__sensor__y510.html\" class=\"m-doc\">Yosemitech Y510-B optical turbidity sensor</a>.",
        "templates": null,
        "deprecated": null,
        "since": null,
        "is_virtual": false,
        "is_final": false
      },
      {
        "kind": "class",
        "url": "class_yosemitech_y511.html",
        "name": "YosemitechY511",
        "brief": "The <a href=\"class_sensor.html\" class=\"m-doc\">Sensor</a> sub-class for the <a href=\"group__sensor__y511.html\" class=\"m-doc\">Yosemitech Y511-A optical turbidity sensor with wiper</a>.",
        "templates": null,
        "deprecated": null,
        "since": null,
        "is_virtual": false,
        "is_final": false
      },
      {
        "kind": "class",
        "url": "class_yosemitech_y513.html",
        "name": "YosemitechY513",
        "brief": "The <a href=\"class_sensor.html\" class=\"m-doc\">Sensor</a> sub-class for the <a href=\"group__sensor__y513.html\" class=\"m-doc\">Yosemitech Y513 sensor</a>.",
        "templates": null,
        "deprecated": null,
        "since": null,
        "is_virtual": false,
        "is_final": false
      },
      {
        "kind": "class",
        "url": "class_yosemitech_y514.html",
        "name": "YosemitechY514",
        "brief": "The <a href=\"class_sensor.html\" class=\"m-doc\">Sensor</a> sub-class for the <a href=\"group__sensor__y514.html\" class=\"m-doc\">Yosemitech Y514 sensor</a>.",
        "templates": null,
        "deprecated": null,
        "since": null,
        "is_virtual": false,
        "is_final": false
      },
      {
        "kind": "class",
        "url": "class_yosemitech_y520.html",
        "name": "YosemitechY520",
        "brief": "The <a href=\"class_sensor.html\" class=\"m-doc\">Sensor</a> sub-class for the <a href=\"group__sensor__y520.html\" class=\"m-doc\">Yosemitech Y520-A 4-electrode conductivity sensor</a>.",
        "templates": null,
        "deprecated": null,
        "since": null,
        "is_virtual": false,
        "is_final": false
      },
      {
        "kind": "class",
        "url": "class_yosemitech_y532.html",
        "name": "YosemitechY532",
        "brief": "The <a href=\"class_sensor.html\" class=\"m-doc\">Sensor</a> sub-class for the <a href=\"group__sensor__y532.html\" class=\"m-doc\">Yosemitech Y532-A digital pH sensor</a>.",
        "templates": null,
        "deprecated": null,
        "since": null,
        "is_virtual": false,
        "is_final": false
      },
      {
        "kind": "class",
        "url": "class_yosemitech_y533.html",
        "name": "YosemitechY533",
        "brief": "The <a href=\"class_sensor.html\" class=\"m-doc\">Sensor</a> sub-class for the <a href=\"group__sensor__y533.html\" class=\"m-doc\">Yosemitech Y533 ORP sensor</a>.",
        "templates": null,
        "deprecated": null,
        "since": null,
        "is_virtual": false,
        "is_final": false
      },
      {
        "kind": "class",
        "url": "class_yosemitech_y551.html",
        "name": "YosemitechY551",
        "brief": "The <a href=\"class_sensor.html\" class=\"m-doc\">Sensor</a> sub-class for the <a href=\"group__sensor__y551.html\" class=\"m-doc\">Yosemitech Y551-B UV254/COD sensor with wiper</a>.",
        "templates": null,
        "deprecated": null,
        "since": null,
        "is_virtual": false,
        "is_final": false
      },
      {
        "kind": "class",
        "url": "class_yosemitech_y560.html",
        "name": "YosemitechY560",
        "brief": "The <a href=\"class_sensor.html\" class=\"m-doc\">Sensor</a> sub-class for the <a href=\"group__sensor__y560.html\" class=\"m-doc\">Yosemitech Y560-A digital pH sensor</a>.",
        "templates": null,
        "deprecated": null,
        "since": null,
        "is_virtual": false,
        "is_final": false
      },
      {
        "kind": "class",
        "url": "class_yosemitech_y700.html",
        "name": "YosemitechY700",
        "brief": "The <a href=\"class_sensor.html\" class=\"m-doc\">Sensor</a> sub-class for the <a href=\"group__sensor__y700.html\" class=\"m-doc\">Yosemitech Y700 pressure sensor</a>.",
        "templates": null,
        "deprecated": null,
        "since": null,
        "is_virtual": false,
        "is_final": false
      }
    ],
    "enums": [],
    "typedefs": [],
    "funcs": [],
    "vars": [],
    "defines": [],
    "public_types": [],
    "public_static_funcs": [],
    "typeless_funcs": [
      {
        "base_url": "class_yosemitech_parent.html",
        "id": "a6bc48bf779e47a946a6147ee8b596c5b",
        "include": null,
        "has_details": true,
        "type": "",
        "name": "YosemitechParent",
        "brief": "Construct a new Yosemitech Parent object. This is only intended to be used within this library.",
        "description": "",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "modbusAddress",
            "type": "byte",
            "type_name": "byte modbusAddress",
            "default": null,
            "description": "The modbus address of the sensor.",
            "direction": ""
          },
          {
            "name": "stream",
            "type": "Stream*",
            "type_name": "Stream* stream",
            "default": null,
            "description": "An Arduino data stream for modbus communication. See <a href=\"page_arduino_streams.html\" class=\"m-doc\">notes</a> for more information on what streams can be used.",
            "direction": ""
          },
          {
            "name": "powerPin",
            "type": "int8_t",
            "type_name": "int8_t powerPin",
            "default": null,
            "description": "The pin on the mcu controlling power to the Yosemitech. Use -1 if it is continuously powered.",
            "direction": ""
          },
          {
            "name": "powerPin2",
            "type": "int8_t",
            "type_name": "int8_t powerPin2",
            "default": null,
            "description": "The pin on the mcu controlling power to the RS485 adapter, if it is different from that used to power the sensor. Use -1 or omit if not applicable.",
            "direction": ""
          },
          {
            "name": "enablePin",
            "type": "int8_t",
            "type_name": "int8_t enablePin",
            "default": "-1",
            "description": "The pin on the mcu controlling the direction enable on the RS485 adapter, if necessary; use -1 or omit if not applicable. An RS485 adapter with integrated flow control is strongly recommended.",
            "direction": ""
          },
          {
            "name": "measurementsToAverage",
            "type": "uint8_t",
            "type_name": "uint8_t measurementsToAverage",
            "default": "1",
            "description": "The number of measurements to take and average before giving a &quot;final&quot; result from the sensor; optional with a default value of 1.",
            "direction": ""
          },
          {
            "name": "model",
            "type": "yosemitechModel",
            "type_name": "yosemitechModel model",
            "default": "UNKNOWN",
            "description": "The model of Yosemitech sensor.",
            "direction": ""
          },
          {
            "name": "sensName",
            "type": "const char*",
            "type_name": "const char* sensName",
            "default": "&quot;Yosemitech-Sensor&quot;",
            "description": "The name of the sensor. Defaults to &quot;SDI12-Sensor&quot;.",
            "direction": ""
          },
          {
            "name": "numVariables",
            "type": "uint8_t",
            "type_name": "uint8_t numVariables",
            "default": "2",
            "description": "The number of variable results returned by the sensor. Defaults to 2.",
            "direction": ""
          },
          {
            "name": "warmUpTime_ms",
            "type": "uint32_t",
            "type_name": "uint32_t warmUpTime_ms",
            "default": "1500",
            "description": "The time in ms between when the sensor is powered on and when it is ready to receive a wake command. Defaults to 1500.",
            "direction": ""
          },
          {
            "name": "stabilizationTime_ms",
            "type": "uint32_t",
            "type_name": "uint32_t stabilizationTime_ms",
            "default": "20000",
            "description": "The time in ms between when the sensor receives a wake command and when it is able to return stable values. Defaults to 20,000 (20s).",
            "direction": ""
          },
          {
            "name": "measurementTime_ms",
            "type": "uint32_t",
            "type_name": "uint32_t measurementTime_ms",
            "default": "2000",
            "description": "The time in ms between when a measurement is started and when the result value is available. Defaults to 2000.",
            "direction": ""
          },
          {
            "name": "incCalcValues",
            "type": "uint8_t",
            "type_name": "uint8_t incCalcValues",
            "default": "0",
            "description": "The number of included calculated variables from the sensor, if any. These are used for values that we would always calculate for a sensor and depend only on the raw results of that single sensor; optional with a default value of 0.",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_yosemitech_parent.html",
        "id": "a37b1f380beaa9dca584d887ee2b1bbad",
        "include": null,
        "has_details": true,
        "type": "",
        "name": "YosemitechParent",
        "brief": "Construct a new Yosemitech Parent object. This is only intended to be used within this library.",
        "description": "",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "modbusAddress",
            "type": "byte",
            "type_name": "byte modbusAddress",
            "default": null,
            "description": "The modbus address of the sensor.",
            "direction": ""
          },
          {
            "name": "stream",
            "type": "Stream&amp;",
            "type_name": "Stream&amp; stream",
            "default": null,
            "description": "An Arduino data stream for modbus communication. See <a href=\"page_arduino_streams.html\" class=\"m-doc\">notes</a> for more information on what streams can be used.",
            "direction": ""
          },
          {
            "name": "powerPin",
            "type": "int8_t",
            "type_name": "int8_t powerPin",
            "default": null,
            "description": "The pin on the mcu controlling power to the Yosemitech. Use -1 if it is continuously powered.",
            "direction": ""
          },
          {
            "name": "powerPin2",
            "type": "int8_t",
            "type_name": "int8_t powerPin2",
            "default": null,
            "description": "The pin on the mcu controlling power to the RS485 adapter, if it is different from that used to power the sensor. Use -1 or omit if not applicable.",
            "direction": ""
          },
          {
            "name": "enablePin",
            "type": "int8_t",
            "type_name": "int8_t enablePin",
            "default": "-1",
            "description": "The pin on the mcu controlling the direction enable on the RS485 adapter, if necessary; use -1 or omit if not applicable. An RS485 adapter with integrated flow control is strongly recommended.",
            "direction": ""
          },
          {
            "name": "measurementsToAverage",
            "type": "uint8_t",
            "type_name": "uint8_t measurementsToAverage",
            "default": "1",
            "description": "The number of measurements to take and average before giving a &quot;final&quot; result from the sensor; optional with a default value of 1.",
            "direction": ""
          },
          {
            "name": "model",
            "type": "yosemitechModel",
            "type_name": "yosemitechModel model",
            "default": "UNKNOWN",
            "description": "The model of Yosemitech sensor.",
            "direction": ""
          },
          {
            "name": "sensName",
            "type": "const char*",
            "type_name": "const char* sensName",
            "default": "&quot;Yosemitech-Sensor&quot;",
            "description": "The name of the sensor. Defaults to &quot;SDI12-Sensor&quot;.",
            "direction": ""
          },
          {
            "name": "numVariables",
            "type": "uint8_t",
            "type_name": "uint8_t numVariables",
            "default": "2",
            "description": "The number of variable results returned by the sensor. Defaults to 2.",
            "direction": ""
          },
          {
            "name": "warmUpTime_ms",
            "type": "uint32_t",
            "type_name": "uint32_t warmUpTime_ms",
            "default": "1500",
            "description": "The time in ms between when the sensor is powered on and when it is ready to receive a wake command. Defaults to 1500.",
            "direction": ""
          },
          {
            "name": "stabilizationTime_ms",
            "type": "uint32_t",
            "type_name": "uint32_t stabilizationTime_ms",
            "default": "20000",
            "description": "The time in ms between when the sensor receives a wake command and when it is able to return stable values. Defaults to 20,000 (20s).",
            "direction": ""
          },
          {
            "name": "measurementTime_ms",
            "type": "uint32_t",
            "type_name": "uint32_t measurementTime_ms",
            "default": "2000",
            "description": "The time in ms between when a measurement is started and when the result value is available. Defaults to 2000.",
            "direction": ""
          },
          {
            "name": "incCalcValues",
            "type": "uint8_t",
            "type_name": "uint8_t incCalcValues",
            "default": "0",
            "description": "The number of included calculated variables from the sensor, if any. These are used for values that we would always calculate for a sensor and depend only on the raw results of that single sensor; optional with a default value of 0.",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_yosemitech_parent.html",
        "id": "a60d4770dbcda6ca794eb63b8bd844059",
        "include": null,
        "has_details": false,
        "type": "",
        "name": "~YosemitechParent",
        "brief": "Destroy the Yosemitech Parent object - no action taken.",
        "description": "",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": true,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": []
      }
    ],
    "public_funcs": [
      {
        "base_url": "class_yosemitech_parent.html",
        "id": "ac9b0740c373840c40e0afb3153cabcac",
        "include": null,
        "has_details": true,
        "type": "String",
        "name": "getSensorLocation",
        "brief": "Get the pin or connection location between the mcu and the sensor.",
        "description": "<aside class=\"m-note m-info\"><h4>Note</h4><p>This is NOT the position of the sensor in the environment, merely how it is attached to the mcu.</p></aside>",
        "return_value": "Text describing how the sensor is attached to the mcu.",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": true,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": true,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": [
          {
            "name": "",
            "type": "void",
            "type_name": "void",
            "default": null,
            "description": "",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_yosemitech_parent.html",
        "id": "a82f619fa82ce03ba61973c21b4ec6572",
        "include": null,
        "has_details": true,
        "type": "bool",
        "name": "setup",
        "brief": "Do any one-time preparations needed before the sensor will be able to take readings.",
        "description": "<p>This sets pin modes on the <a href=\"class_sensor.html#a60cef6626d7145eda0709980f66df52b\" class=\"m-doc\">_<wbr />powerPin</a>, adapter power, and adapter enable pins. It also sets the expected stream timeout for modbus and updates the <a href=\"class_sensor.html#a1fde72c3ddd07d892dcbfe4a09bcae49\" class=\"m-doc\">_<wbr />sensorStatus</a>. No sensor power is required. This will always return true.</p>",
        "return_value": "True if the setup was successful.",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": true,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": true,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": [
          {
            "name": "",
            "type": "void",
            "type_name": "void",
            "default": null,
            "description": "",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_yosemitech_parent.html",
        "id": "abcaf185634d415b4ec9f63f05b1798ff",
        "include": null,
        "has_details": true,
        "type": "bool",
        "name": "wake",
        "brief": "Wake the sensor up, if necessary. Do whatever it takes to get a sensor in the proper state to begin a measurement.",
        "description": "<p>Verifies that the power is on and updates the <a href=\"class_sensor.html#a1fde72c3ddd07d892dcbfe4a09bcae49\" class=\"m-doc\">_<wbr />sensorStatus</a>. This also sets the <a href=\"class_sensor.html#a86541c88432508d6bc81a8fb41746e2e\" class=\"m-doc\">_<wbr />millisSensorActivated</a> timestamp.</p><aside class=\"m-note m-info\"><h4>Note</h4><p>This does NOT include any wait for sensor readiness.</p></aside>",
        "return_value": "True if the wake function completed successfully.",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": true,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": true,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": [
          {
            "name": "",
            "type": "void",
            "type_name": "void",
            "default": null,
            "description": "",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_yosemitech_parent.html",
        "id": "a110228fafaa6b934f1dd403e5eaf83f3",
        "include": null,
        "has_details": true,
        "type": "bool",
        "name": "sleep",
        "brief": "Puts the sensor to sleep, if necessary.",
        "description": "<p>This also un-sets the <a href=\"class_sensor.html#a86541c88432508d6bc81a8fb41746e2e\" class=\"m-doc\">_<wbr />millisSensorActivated</a> timestamp (sets it to 0). This does NOT power down the sensor!</p>",
        "return_value": "True if the sleep function completed successfully.",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": true,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": true,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": [
          {
            "name": "",
            "type": "void",
            "type_name": "void",
            "default": null,
            "description": "",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_yosemitech_parent.html",
        "id": "abb49894900ab23feb8b806889c052d8c",
        "include": null,
        "has_details": true,
        "type": "void",
        "name": "powerUp",
        "brief": "Turn on the sensor power, if applicable.",
        "description": "<p>Generally this is done by setting the <a href=\"class_sensor.html#a60cef6626d7145eda0709980f66df52b\" class=\"m-doc\">_<wbr />powerPin</a> <code>HIGH</code>. Also sets the <a href=\"class_sensor.html#aa820f5e6c900f07d39750a77dc851a8f\" class=\"m-doc\">_<wbr />millisPowerOn</a> timestamp and updates the <a href=\"class_sensor.html#a1fde72c3ddd07d892dcbfe4a09bcae49\" class=\"m-doc\">_<wbr />sensorStatus</a>.</p>",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": true,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": true,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": [
          {
            "name": "",
            "type": "void",
            "type_name": "void",
            "default": null,
            "description": "",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_yosemitech_parent.html",
        "id": "ab42cf884e565204065a1368653c0404e",
        "include": null,
        "has_details": true,
        "type": "void",
        "name": "powerDown",
        "brief": "Turn off the sensor power, if applicable.",
        "description": "<p>Generally this is done by setting the <a href=\"class_sensor.html#a60cef6626d7145eda0709980f66df52b\" class=\"m-doc\">_<wbr />powerPin</a> <code>LOW</code>. Also un-sets the <a href=\"class_sensor.html#aa820f5e6c900f07d39750a77dc851a8f\" class=\"m-doc\">_<wbr />millisPowerOn</a> timestamp (sets <a href=\"class_sensor.html#aa820f5e6c900f07d39750a77dc851a8f\" class=\"m-doc\">_<wbr />millisPowerOn</a> to 0) and updates the <a href=\"class_sensor.html#a1fde72c3ddd07d892dcbfe4a09bcae49\" class=\"m-doc\">_<wbr />sensorStatus</a>.</p>",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": true,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": true,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": [
          {
            "name": "",
            "type": "void",
            "type_name": "void",
            "default": null,
            "description": "",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_yosemitech_parent.html",
        "id": "a5012ad61be085c6eaaedc78c39ea02bd",
        "include": null,
        "has_details": true,
        "type": "bool",
        "name": "addSingleMeasurementResult",
        "brief": "Get the results from a single measurement.",
        "description": "<p>This asks the sensor for a new result, verifies that it passes sanity range checks, and then adds the value to the result array.</p><p>This also un-sets the <a href=\"class_sensor.html#a4853c30b71ad2efc09bd6f73530155e3\" class=\"m-doc\">_<wbr />millisMeasurementRequested</a> timestamp (sets <a href=\"class_sensor.html#a4853c30b71ad2efc09bd6f73530155e3\" class=\"m-doc\">_<wbr />millisMeasurementRequested</a> to 0) and updates the <a href=\"class_sensor.html#a1fde72c3ddd07d892dcbfe4a09bcae49\" class=\"m-doc\">_<wbr />sensorStatus</a>.</p><aside class=\"m-note m-info\"><h4>Note</h4><p>This function does NOT include any waiting for the sensor complete a measurement.</p></aside>",
        "return_value": "True if the function completed successfully.",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": true,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": true,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": [
          {
            "name": "",
            "type": "void",
            "type_name": "void",
            "default": null,
            "description": "",
            "direction": ""
          }
        ]
      }
    ],
    "signals": [],
    "public_slots": [],
    "public_static_vars": [],
    "public_vars": [],
    "protected_types": [],
    "protected_static_funcs": [],
    "protected_funcs": [],
    "protected_slots": [],
    "protected_static_vars": [],
    "protected_vars": [],
    "private_funcs": [],
    "private_slots": [],
    "related": [],
    "friend_funcs": [],
    "groups": [],
    "has_enum_details": false,
    "has_typedef_details": false,
    "has_func_details": true,
    "has_var_details": false,
    "has_define_details": false,
    "breadcrumb": [
      [
        "Sensor",
        "class_sensor.html"
      ],
      [
        "YosemitechParent",
        "class_yosemitech_parent.html"
      ]
    ],
    "breadcrumbGroup": [
      [
        "Yosemitech Sensors",
        "group__yosemitech__group.html"
      ],
      [
        "YosemitechParent",
        "class_yosemitech_parent.html"
      ]
    ],
    "is_final": false,
    "prefix_wbr": "YosemitechParent::<wbr />"
  }
}