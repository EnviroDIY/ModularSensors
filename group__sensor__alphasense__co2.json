{
  "version": "1.14.0",
  "compound": {
    "kind": "group",
    "id": "group__sensor__alphasense__co2",
    "name": "Alphasense IRC-A1 CO2",
    "url_base": "group__sensor__alphasense__co2",
    "url": "group__sensor__alphasense__co2.html",
    "include": null,
    "has_template_details": false,
    "templates": null,
    "brief": "",
    "description": "<p>Classes for the Alphasense IRC-A1 Non-Dispersive Infrared (NDIR) Carbon Dioxide (CO2) sensor.</p><section id=\"sensor_alphasense_co2_intro\"><h2>Introduction</h2><p>The <a href=\"https://www.alphasense.com/products/carbon-dioxide/\">Alphasense IRC-A1 Non-Dispersive Infrared (NDIR) Carbon Dioxide (CO2) sensor</a> The CO2 sensor requires a 2-5 V DC power source with a current draw of 20 to 60 mA. The power supply to the sensor can be stopped between measurements.</p><p>To convert the sensor&#x27;s analog 4-20 mA signal to a high resolution digital signal, the sensor must be attached to an analog-to-digital converter with an resistor in series. Furthermore, <a href=\"https://www.alphasense.com/products/ndir-safety/\">https:/<wbr />/<wbr />www.alphasense.com/<wbr />products/<wbr />ndir-safety/<wbr /></a> <a href=\"https://www.alphasense.com/wp-content/uploads/2018/04/IRC-A1.pdf\">https:/<wbr />/<wbr />www.alphasense.com/<wbr />wp-content/<wbr />uploads/<wbr />2018/<wbr />04/<wbr />IRC-A1.pdf</a> <a href=\"https://www.alphasense.com/wp-content/uploads/2017/09/NDIR-Transmitter.pdf\">https:/<wbr />/<wbr />www.alphasense.com/<wbr />wp-content/<wbr />uploads/<wbr />2017/<wbr />09/<wbr />NDIR-Transmitter.pdf</a> <a href=\"https://www.alphasense.com/wp-content/uploads/2022/10/AAN_202-04_App-Note_V0.pdf\">https://www.alphasense.com/wp-content/uploads/2022/10/AAN_<wbr />202-04_<wbr />App-Note_<wbr />V0.pdf</a> <a href=\"https://www.alphasense.com/wp-content/uploads/2022/10/AAN_201-06_App-Note_V0.pdf\">https://www.alphasense.com/wp-content/uploads/2022/10/AAN_<wbr />201-06_<wbr />App-Note_<wbr />V0.pdf</a></p><p>See the <a href=\"group__analog__group.html\" class=\"m-doc\">ADS1115</a> for details on the ADC conversion.</p></section><section id=\"sensor_alphasense_co2_datasheet\"><h2>Sensor Datasheet</h2><p><a href=\"https://www.alphasense.com/wp-content/uploads/2018/04/IRC-A1.pdf\">Datasheet</a></p></section><section id=\"sensor_alphasense_co2_flags\"><h2>Build flags</h2><ul><li><code>-D MS_USE_ADS1015</code><ul><li>switches from the 16-bit ADS1115 to the 12 bit ADS1015</li></ul></li><li><code>-D ALPHASENSE_CO2_CALIBRATION_FACTOR=x</code><ul><li>Changes the calibration factor from 1 to x</li></ul></li></ul></section><section id=\"sensor_alphasense_co2_ctor\"><h2>Sensor Constructor</h2><p>{{ <a href=\"class_alphasense_c_o2.html#adf2a770ea209f6d2c685d9a5e2a87b71\" class=\"m-doc\">AlphasenseCO2::<wbr />AlphasenseCO2</a> }}</p><hr/></section><section id=\"sensor_alphasense_co2_examples\"><h2>Example Code</h2><p>The Alphasense CO2 sensor is used in the <a href=\"example_menu.html#menu_walk_alphasense_co2\" class=\"m-doc\">menu a la carte</a> example.</p><div class=\"m-code-arduino\"><div class=\"highlight\"><div class=\"line\"><a id=\"l-1\" name=\"l-1\"></a><span class=\"linenos\"> 1</span><span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;sensors/AlphasenseCO2.h&gt;</span></div>\n<div class=\"line\"><a id=\"l-2\" name=\"l-2\"></a><span class=\"linenos\"> 2</span></div>\n<div class=\"line\"><a id=\"l-3\" name=\"l-3\"></a><span class=\"linenos\"> 3</span><span class=\"c1\">// NOTE: Use -1 for any pins that don&#39;t apply or aren&#39;t being used.</span></div>\n<div class=\"line\"><a id=\"l-4\" name=\"l-4\"></a><span class=\"linenos\"> 4</span><span class=\"kr\">const</span><span class=\"w\"> </span><span class=\"kr\">int8_t</span><span class=\"w\">      </span><span class=\"n\">AlphasenseCO2Power</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">sensorPowerPin</span><span class=\"p\">;</span><span class=\"w\">  </span><span class=\"c1\">// Power pin</span></div>\n<div class=\"line\"><a id=\"l-5\" name=\"l-5\"></a><span class=\"linenos\"> 5</span><span class=\"n\">aco2_adsDiffMux_t</span><span class=\"w\"> </span><span class=\"n\">AlphasenseDiffMux</span><span class=\"w\"> </span><span class=\"o\">=</span></div>\n<div class=\"line\"><a id=\"l-6\" name=\"l-6\"></a><span class=\"linenos\"> 6</span><span class=\"w\">    </span><span class=\"n\">DIFF_MUX_2_3</span><span class=\"p\">;</span><span class=\"w\">  </span><span class=\"c1\">// Differential voltage config</span></div>\n<div class=\"line\"><a id=\"l-7\" name=\"l-7\"></a><span class=\"linenos\"> 7</span><span class=\"kr\">const</span><span class=\"w\"> </span><span class=\"kr\">uint8_t</span><span class=\"w\"> </span><span class=\"n\">AlphasenseCO2ADSi2c_addr</span><span class=\"w\"> </span><span class=\"o\">=</span></div>\n<div class=\"line\"><a id=\"l-8\" name=\"l-8\"></a><span class=\"linenos\"> 8</span><span class=\"w\">    </span><span class=\"mh\">0x48</span><span class=\"p\">;</span><span class=\"w\">  </span><span class=\"c1\">// The I2C address of the ADS1115 ADC</span></div>\n<div class=\"line\"><a id=\"l-9\" name=\"l-9\"></a><span class=\"linenos\"> 9</span></div>\n<div class=\"line\"><a id=\"l-10\" name=\"l-10\"></a><span class=\"linenos\">10</span><span class=\"c1\">// Create an Alphasense CO2 sensor object</span></div>\n<div class=\"line\"><a id=\"l-11\" name=\"l-11\"></a><span class=\"linenos\">11</span><span class=\"n\">AlphasenseCO2</span><span class=\"w\"> </span><span class=\"nf\">alphasenseCO2</span><span class=\"p\">(</span><span class=\"n\">AlphasenseCO2Power</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">AlphasenseDiffMux</span><span class=\"p\">,</span></div>\n<div class=\"line\"><a id=\"l-12\" name=\"l-12\"></a><span class=\"linenos\">12</span><span class=\"w\">                            </span><span class=\"n\">AlphasenseCO2ADSi2c_addr</span><span class=\"p\">);</span></div>\n<div class=\"line\"><a id=\"l-13\" name=\"l-13\"></a><span class=\"linenos\">13</span></div>\n<div class=\"line\"><a id=\"l-14\" name=\"l-14\"></a><span class=\"linenos\">14</span><span class=\"c1\">// Create PAR and raw voltage variable pointers for the CO2</span></div>\n<div class=\"line\"><a id=\"l-15\" name=\"l-15\"></a><span class=\"linenos\">15</span><span class=\"n\">Variable</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">asCO2</span><span class=\"w\">        </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">AlphasenseCO2_CO2</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">alphasenseCO2</span><span class=\"p\">,</span></div>\n<div class=\"line\"><a id=\"l-16\" name=\"l-16\"></a><span class=\"linenos\">16</span><span class=\"w\">                                               </span><span class=\"s\">&quot;12345678-abcd-1234-ef00-1234567890ab&quot;</span><span class=\"p\">);</span></div>\n<div class=\"line\"><a id=\"l-17\" name=\"l-17\"></a><span class=\"linenos\">17</span><span class=\"n\">Variable</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">asco2voltage</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">AlphasenseCO2_Voltage</span><span class=\"p\">(</span></div>\n<div class=\"line\"><a id=\"l-18\" name=\"l-18\"></a><span class=\"linenos\">18</span><span class=\"w\">    </span><span class=\"o\">&amp;</span><span class=\"n\">alphasenseCO2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">&quot;12345678-abcd-1234-ef00-1234567890ab&quot;</span><span class=\"p\">);</span>\n</div></div></div></section>",
    "sections": [
      [
        "sensor_alphasense_co2_intro",
        "Introduction",
        []
      ],
      [
        "sensor_alphasense_co2_datasheet",
        "Sensor Datasheet",
        []
      ],
      [
        "sensor_alphasense_co2_flags",
        "Build flags",
        []
      ],
      [
        "sensor_alphasense_co2_ctor",
        "Sensor Constructor",
        []
      ],
      [
        "sensor_alphasense_co2_examples",
        "Example Code",
        []
      ]
    ],
    "deprecated": null,
    "since": null,
    "example_navigation": null,
    "footer_navigation": null,
    "topics": [],
    "dirs": [],
    "files": [],
    "namespaces": [],
    "classes": [
      {
        "kind": "class",
        "url": "class_alphasense_c_o2.html",
        "name": "AlphasenseCO2",
        "brief": "The <a href=\"class_sensor.html\" class=\"m-doc\">Sensor</a> sub-class for the [Alphasense IRC-A1 CO2](<a href=\"group__sensor__alphasense__co2.html\" class=\"m-doc\">Alphasense IRC-A1 CO2</a>) sensor.",
        "deprecated": null,
        "since": null,
        "templates": null
      },
      {
        "kind": "class",
        "url": "class_alphasense_c_o2___c_o2.html",
        "name": "AlphasenseCO2_CO2",
        "brief": "The <a href=\"class_variable.html\" class=\"m-doc\">Variable</a> sub-class used for the <a href=\"group__sensor__alphasense__co2.html#sensor_alphasense_co2_co2\" class=\"m-doc\">carbon dioxide (CO2) output</a> from an <a href=\"group__sensor__alphasense__co2.html\" class=\"m-doc\">Alphasense IRC-A1 CO2</a>.",
        "deprecated": null,
        "since": null,
        "templates": null
      },
      {
        "kind": "class",
        "url": "class_alphasense_c_o2___voltage.html",
        "name": "AlphasenseCO2_Voltage",
        "brief": "The <a href=\"class_variable.html\" class=\"m-doc\">Variable</a> sub-class used for the <a href=\"group__sensor__alphasense__co2.html#sensor_alphasense_co2_voltage\" class=\"m-doc\">raw voltage output</a> from an <a href=\"group__sensor__alphasense__co2.html\" class=\"m-doc\">Alphasense IRC-A1 CO2</a>.",
        "deprecated": null,
        "since": null,
        "templates": null
      }
    ],
    "base_classes": [],
    "derived_classes": [],
    "enums": [],
    "typedefs": [],
    "funcs": [],
    "vars": [],
    "defines": [],
    "public_types": [],
    "public_static_funcs": [],
    "typeless_funcs": [],
    "public_funcs": [],
    "signals": [],
    "public_slots": [],
    "public_static_vars": [],
    "public_vars": [],
    "protected_types": [],
    "protected_static_funcs": [],
    "protected_funcs": [],
    "protected_slots": [],
    "protected_static_vars": [],
    "protected_vars": [],
    "private_funcs": [],
    "private_slots": [],
    "related": [],
    "friend_funcs": [],
    "groups": [
      {
        "name": "Configuration Defines",
        "id": "configuration-defines",
        "description": "<p><a name=\"sensor__alphasense_co2_config\"></a> Defines to set the calibration of the Alphasense CO2 sensor and the address of the ADD.</p>",
        "members": [
          [
            "enum",
            {
              "base_url": "group__sensor__alphasense__co2.html",
              "id": "ga11f404005c064835454699619db59981",
              "include": [
                "&lt;src/sensors/AlphasenseCO2.h&gt;",
                "_alphasense_c_o2_8h.html"
              ],
              "has_details": true,
              "type": "uint16_t",
              "name": "aco2_adsDiffMux_t",
              "brief": "Enum for the pins used for differential voltages.",
              "description": "",
              "deprecated": null,
              "since": null,
              "is_protected": false,
              "is_strong": false,
              "values": [
                {
                  "id": "gga11f404005c064835454699619db59981ad85510d0b6830cebe4043e6bb80e51ec",
                  "name": "DIFF_MUX_0_1",
                  "initializer": "",
                  "brief": "differential across pins 0 and 1",
                  "description": "",
                  "deprecated": null,
                  "since": null
                },
                {
                  "id": "gga11f404005c064835454699619db59981a23517f6003a65cb3e9a203c78bf65ea2",
                  "name": "DIFF_MUX_0_3",
                  "initializer": "",
                  "brief": "differential across pins 0 and 3",
                  "description": "",
                  "deprecated": null,
                  "since": null
                },
                {
                  "id": "gga11f404005c064835454699619db59981a17e3008b12ea4c1720def8eeadcac03e",
                  "name": "DIFF_MUX_1_3",
                  "initializer": "",
                  "brief": "differential across pins 1 and 3",
                  "description": "",
                  "deprecated": null,
                  "since": null
                },
                {
                  "id": "gga11f404005c064835454699619db59981a838e8ef2a0cbfcf82b408147a0617cab",
                  "name": "DIFF_MUX_2_3",
                  "initializer": "",
                  "brief": "differential across pins 2 and 3",
                  "description": "",
                  "deprecated": null,
                  "since": null
                }
              ],
              "has_value_details": true
            }
          ],
          [
            "define",
            {
              "base_url": "group__sensor__alphasense__co2.html",
              "id": "gafc2ece49d460b4ea4ff92c82b312bd86",
              "include": [
                "&lt;src/sensors/AlphasenseCO2.h&gt;",
                "_alphasense_c_o2_8h.html"
              ],
              "has_details": true,
              "name": "ALPHASENSE_CO2_CALIBRATION_FACTOR",
              "initializer": "1",
              "brief": "The calibration factor between output in volts and CO2 (microeinsteinPerSquareMeterPerSecond) 1 \u00b5mol m\u02c9\u00b2 s\u02c9\u00b9 per mV (reciprocal of sensitivity)",
              "description": "",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ],
          [
            "define",
            {
              "base_url": "group__sensor__alphasense__co2.html",
              "id": "gaf5e311c48b7a1778d4ce4b13ea0be68d",
              "include": [
                "&lt;src/sensors/AlphasenseCO2.h&gt;",
                "_alphasense_c_o2_8h.html"
              ],
              "has_details": true,
              "name": "ADS1115_ADDRESS",
              "initializer": "0x48",
              "brief": "The assumed address of the ADS1115, 1001 000 (ADDR = GND)",
              "description": "",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ]
        ]
      },
      {
        "name": "Sensor Variable Counts",
        "id": "sensor-variable-counts",
        "description": "<p><a name=\"sensor_alphasense_co2_var_counts\"></a> The number of variables that can be returned by the Apogee SQ-212</p>",
        "members": [
          [
            "define",
            {
              "base_url": "group__sensor__alphasense__co2.html",
              "id": "ga066bdb93c18f196eec8e8639d48fa6fa",
              "include": [
                "&lt;src/sensors/AlphasenseCO2.h&gt;",
                "_alphasense_c_o2_8h.html"
              ],
              "has_details": true,
              "name": "ALPHASENSE_CO2_NUM_VARIABLES",
              "initializer": "2",
              "brief": "<a href=\"class_sensor.html#af26786329fd01b44cf31410d046fc8f3\" class=\"m-doc\">Sensor::<wbr />_numReturnedValues</a>; the Alphasense CO2 sensor can report 2 values, raw voltage and calculated CO2.",
              "description": "",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ],
          [
            "define",
            {
              "base_url": "group__sensor__alphasense__co2.html",
              "id": "ga644af1e7b6dbc0f586aa493a3b05e394",
              "include": [
                "&lt;src/sensors/AlphasenseCO2.h&gt;",
                "_alphasense_c_o2_8h.html"
              ],
              "has_details": true,
              "name": "ALPHASENSE_CO2_INC_CALC_VARIABLES",
              "initializer": "1",
              "brief": "<a href=\"class_sensor.html#a2f3f93a9205efb134cef1216d65077d2\" class=\"m-doc\">Sensor::<wbr />_incCalcValues</a>; CO2 is calculated from the raw voltage.",
              "description": "",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ]
        ]
      },
      {
        "name": "Sensor Timing",
        "id": "sensor-timing",
        "description": "<p><a name=\"sensor_alphasense_co2_timing\"></a> The sensor timing for an Alphasense IRC-A1 CO2</p>",
        "members": [
          [
            "define",
            {
              "base_url": "group__sensor__alphasense__co2.html",
              "id": "gab8d12f73c22e5f430ca80adfa242f078",
              "include": [
                "&lt;src/sensors/AlphasenseCO2.h&gt;",
                "_alphasense_c_o2_8h.html"
              ],
              "has_details": true,
              "name": "ALPHASENSE_CO2_WARM_UP_TIME_MS",
              "initializer": "200",
              "brief": "<a href=\"class_sensor.html#aaaefd7f306f86382a3dac726531756b4\" class=\"m-doc\">Sensor::<wbr />_warmUpTime_ms</a>; The TI ADS1x15 to warm up time is 2 ms, and we get Alphasense CO2 sensor readings in &lt;200 ms second.",
              "description": "",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ],
          [
            "define",
            {
              "base_url": "group__sensor__alphasense__co2.html",
              "id": "gaac7d1b8a7bc74af45960f891039373ea",
              "include": [
                "&lt;src/sensors/AlphasenseCO2.h&gt;",
                "_alphasense_c_o2_8h.html"
              ],
              "has_details": true,
              "name": "ALPHASENSE_CO2_STABILIZATION_TIME_MS",
              "initializer": "35000",
              "brief": "<a href=\"class_sensor.html#ad6822ad09fb64658c911ce86820db79c\" class=\"m-doc\">Sensor::<wbr />_stabilizationTime_ms</a>; The manufacturer provides the following stabilization times:",
              "description": "<ul><li>To final zero \u00b1 100ppm: &lt; 30 s @ 20\u00b0C</li><li>To specification: &lt; 30 minutes @ 20\u00b0C We found that values leveled off after ~35 s. See: <a href=\"https://github.com/bellahenkel/Soil-Sensing-Device/tree/main/examples/getValuesCO2\">https:/<wbr />/<wbr />github.com/<wbr />bellahenkel/<wbr />Soil-Sensing-Device/<wbr />tree/<wbr />main/<wbr />examples/<wbr />getValuesCO2</a></li></ul>",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ],
          [
            "define",
            {
              "base_url": "group__sensor__alphasense__co2.html",
              "id": "ga79607d560c9b43610a5b40b3e37e721a",
              "include": [
                "&lt;src/sensors/AlphasenseCO2.h&gt;",
                "_alphasense_c_o2_8h.html"
              ],
              "has_details": true,
              "name": "ALPHASENSE_CO2_MEASUREMENT_TIME_MS",
              "initializer": "1000",
              "brief": "<a href=\"class_sensor.html#a0327d79459eaf3065c9e84b8c789c4ba\" class=\"m-doc\">Sensor::<wbr />_measurementTime_ms</a>; The Alphasense IRC-A1 CO2 sensor will return a new number every 200 ms, but there appears to be a cyclic response with a ~7 sec period, so we recommend averaging 1 s measurements over 28 seconds (3 periods)",
              "description": "",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ]
        ]
      },
      {
        "name": "CO2 Concentration",
        "id": "co2-concentration",
        "description": "<p><a name=\"sensor_alphasense_co2_co2\"></a> The CO2 variable from an Alphasense IRC-A1 CO2</p><ul><li>Accuracy is \u00b1 1FS or \u00b1 50 ppm (for IAQ type)</li><li>Range is 0 \u2212 5000 ppm (for IAQ type)</li><li>Resolution: &lt; 1 ppm<ul><li>16-bit ADC (ADS1115): &lt; 1 ppm (5 significant figures)</li><li>12-bit ADC (ADS1015): worse</li></ul></li></ul><p>{{ <a href=\"class_alphasense_c_o2___c_o2.html\" class=\"m-doc\">AlphasenseCO2_<wbr />CO2</a> }}</p>",
        "members": [
          [
            "define",
            {
              "base_url": "group__sensor__alphasense__co2.html",
              "id": "ga035f1f60cb46bd025422014dc841a51b",
              "include": [
                "&lt;src/sensors/AlphasenseCO2.h&gt;",
                "_alphasense_c_o2_8h.html"
              ],
              "has_details": true,
              "name": "ALPHASENSE_CO2_VAR_NUM",
              "initializer": "0",
              "brief": "<a href=\"class_variable.html\" class=\"m-doc\">Variable</a> number; CO2 is stored in sensorValues[0].",
              "description": "",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ],
          [
            "define",
            {
              "base_url": "group__sensor__alphasense__co2.html",
              "id": "gacd9d84c067f887b20c33bb7065649b90",
              "include": [
                "&lt;src/sensors/AlphasenseCO2.h&gt;",
                "_alphasense_c_o2_8h.html"
              ],
              "has_details": true,
              "name": "ALPHASENSE_CO2_VAR_NAME",
              "initializer": "\"carbonDioxide\"",
              "brief": "<a href=\"class_variable.html\" class=\"m-doc\">Variable</a> name in <a href=\"http://vocabulary.odm2.org/variablename/\">ODM2 controlled vocabulary</a>; &quot;carbonDioxide&quot;.",
              "description": "",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ],
          [
            "define",
            {
              "base_url": "group__sensor__alphasense__co2.html",
              "id": "ga9ebeda33736c84b2243578d9e9797962",
              "include": [
                "&lt;src/sensors/AlphasenseCO2.h&gt;",
                "_alphasense_c_o2_8h.html"
              ],
              "has_details": true,
              "name": "ALPHASENSE_CO2_UNIT_NAME",
              "initializer": "\"partPerMillion\"",
              "brief": "<a href=\"class_variable.html\" class=\"m-doc\">Variable</a> unit name in <a href=\"http://vocabulary.odm2.org/units/\">ODM2 controlled vocabulary</a>; &quot;partPerMillion&quot; (ppm)",
              "description": "",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ],
          [
            "define",
            {
              "base_url": "group__sensor__alphasense__co2.html",
              "id": "gaea5afbdc83086a58ea4409a222acf4d5",
              "include": [
                "&lt;src/sensors/AlphasenseCO2.h&gt;",
                "_alphasense_c_o2_8h.html"
              ],
              "has_details": true,
              "name": "ALPHASENSE_CO2_DEFAULT_CODE",
              "initializer": "\"AlphasenseCO2ppm\"",
              "brief": "Default variable short code; &quot;AlphasenseCO2ppm&quot;.",
              "description": "",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ],
          [
            "define",
            {
              "base_url": "group__sensor__alphasense__co2.html",
              "id": "ga8aec0228dcbfe85b0e06f751c6dafe04",
              "include": [
                "&lt;src/sensors/AlphasenseCO2.h&gt;",
                "_alphasense_c_o2_8h.html"
              ],
              "has_details": true,
              "name": "ALPHASENSE_CO2_RESOLUTION",
              "initializer": "4",
              "brief": "Decimals places in string representation; CO2 should have 4 when using an ADS1115.",
              "description": "",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ]
        ]
      },
      {
        "name": "Voltage",
        "id": "voltage",
        "description": "<p><a name=\"sensor_alphasense_co2_voltage\"></a> The voltage variable from an Alphasense IRC-A1 CO2</p><ul><li>Range is 0 to 3.6V [when ADC is powered at 3.3V]</li><li>Accuracy is \u00b1 0.5%<ul><li>16-bit ADC (ADS1115): &lt; 0.25% (gain error), &lt;0.25 LSB (offset error)</li><li>12-bit ADC (ADS1015, using build flag <code>MS_USE_ADS1015</code>): &lt; 0.15% (gain error), &lt;3 LSB (offset error)</li></ul></li><li>Resolution [assuming the ADC is powered at 3.3V with inbuilt gain set to 1 (0-4.096V)]:<ul><li>16-bit ADC (ADS1115): 0.125 mV (ADS1115)</li><li>12-bit ADC (ADS1015, using build flag <code>MS_USE_ADS1015</code>): 2 mV (ADS1015)</li></ul></li></ul><p>{{ <a href=\"class_alphasense_c_o2___voltage.html\" class=\"m-doc\">AlphasenseCO2_<wbr />Voltage</a> }}</p>",
        "members": [
          [
            "define",
            {
              "base_url": "group__sensor__alphasense__co2.html",
              "id": "ga7b2dd8e5974338e70c168bacb1dd69f6",
              "include": [
                "&lt;src/sensors/AlphasenseCO2.h&gt;",
                "_alphasense_c_o2_8h.html"
              ],
              "has_details": true,
              "name": "ALPHASENSE_CO2_VOLTAGE_VAR_NUM",
              "initializer": "1",
              "brief": "<a href=\"class_variable.html\" class=\"m-doc\">Variable</a> number; voltage is stored in sensorValues[1].",
              "description": "",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ],
          [
            "define",
            {
              "base_url": "group__sensor__alphasense__co2.html",
              "id": "ga244fc2f891ca98ece974a17cf9ec6c13",
              "include": [
                "&lt;src/sensors/AlphasenseCO2.h&gt;",
                "_alphasense_c_o2_8h.html"
              ],
              "has_details": true,
              "name": "ALPHASENSE_CO2_VOLTAGE_VAR_NAME",
              "initializer": "\"voltage\"",
              "brief": "<a href=\"class_variable.html\" class=\"m-doc\">Variable</a> name in <a href=\"http://vocabulary.odm2.org/variablename/\">ODM2 controlled vocabulary</a>; &quot;voltage&quot;.",
              "description": "",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ],
          [
            "define",
            {
              "base_url": "group__sensor__alphasense__co2.html",
              "id": "gab2a9ee8f6b396773382bf5a03d1f2c4d",
              "include": [
                "&lt;src/sensors/AlphasenseCO2.h&gt;",
                "_alphasense_c_o2_8h.html"
              ],
              "has_details": true,
              "name": "ALPHASENSE_CO2_VOLTAGE_UNIT_NAME",
              "initializer": "\"volt\"",
              "brief": "<a href=\"class_variable.html\" class=\"m-doc\">Variable</a> unit name in <a href=\"http://vocabulary.odm2.org/units/\">ODM2 controlled vocabulary</a>; &quot;volt&quot; (V)",
              "description": "",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ],
          [
            "define",
            {
              "base_url": "group__sensor__alphasense__co2.html",
              "id": "ga4209b0d835d4e29908cc38252907040b",
              "include": [
                "&lt;src/sensors/AlphasenseCO2.h&gt;",
                "_alphasense_c_o2_8h.html"
              ],
              "has_details": true,
              "name": "ALPHASENSE_CO2_VOLTAGE_DEFAULT_CODE",
              "initializer": "\"AlphasenseCO2Voltage\"",
              "brief": "Default variable short code; &quot;AlphasenseCO2Voltage&quot;.",
              "description": "",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ],
          [
            "define",
            {
              "base_url": "group__sensor__alphasense__co2.html",
              "id": "ga2fca595e5df15c2621cb265fb1a73079",
              "include": [
                "&lt;src/sensors/AlphasenseCO2.h&gt;",
                "_alphasense_c_o2_8h.html"
              ],
              "has_details": true,
              "name": "ALPHASENSE_CO2_VOLTAGE_RESOLUTION",
              "initializer": "4",
              "brief": "Decimals places in string representation; voltage should have 4 when used with an ADS1115.",
              "description": "",
              "return_value": null,
              "deprecated": null,
              "since": null,
              "has_param_details": false,
              "params": null
            }
          ]
        ]
      }
    ],
    "has_enum_details": true,
    "has_typedef_details": false,
    "has_func_details": false,
    "has_var_details": false,
    "has_define_details": true,
    "breadcrumb": [
      [
        "Supported Sensors",
        "group__the__sensors.html"
      ],
      [
        "Analog Sensors via TI ADS1x15",
        "group__analog__group.html"
      ],
      [
        "Alphasense IRC-A1 CO2",
        "group__sensor__alphasense__co2.html"
      ]
    ],
    "breadcrumbGroup": [
      [
        "Alphasense IRC-A1 CO2",
        "group__sensor__alphasense__co2.html"
      ]
    ]
  }
}