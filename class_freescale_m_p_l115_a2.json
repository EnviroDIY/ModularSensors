{
  "version": "1.14.0",
  "compound": {
    "kind": "class",
    "id": "class_freescale_m_p_l115_a2",
    "name": "FreescaleMPL115A2",
    "url_base": "class_freescale_m_p_l115_a2",
    "url": "class_freescale_m_p_l115_a2.html",
    "include": [
      "&lt;src/sensors/FreescaleMPL115A2.h&gt;",
      "_freescale_m_p_l115_a2_8h.html"
    ],
    "has_template_details": false,
    "templates": null,
    "brief": "The <a href=\"class_sensor.html\" class=\"m-doc\">Sensor</a> sub-class for the <a href=\"group__sensor__mpl115a2.html\" class=\"m-doc\">Freescale Semiconductor MPL115A2 sensor</a>.",
    "description": "",
    "sections": "",
    "deprecated": null,
    "since": null,
    "example_navigation": null,
    "footer_navigation": null,
    "topics": [],
    "dirs": [],
    "files": [],
    "namespaces": [],
    "classes": [],
    "base_classes": [
      {
        "kind": "class",
        "url": "class_sensor.html",
        "name": "Sensor",
        "brief": "The &quot;Sensor&quot; class is used for all sensor-level operations - waking, sleeping, and taking measurements.",
        "templates": null,
        "deprecated": null,
        "since": null,
        "is_protected": false,
        "is_virtual": false
      }
    ],
    "derived_classes": [],
    "enums": [],
    "typedefs": [],
    "funcs": [],
    "vars": [],
    "defines": [],
    "public_types": [],
    "public_static_funcs": [],
    "typeless_funcs": [
      {
        "base_url": "class_freescale_m_p_l115_a2.html",
        "id": "a8e0f140fe968d323816dbd7cc377afa0",
        "include": null,
        "has_details": true,
        "type": "",
        "name": "FreescaleMPL115A2",
        "brief": "Construct a new <a href=\"class_freescale_m_p_l115_a2.html\" class=\"m-doc\">FreescaleMPL115A2</a> using a secondary <em>hardware</em> I2C instance.",
        "description": "<aside class=\"m-note m-info\"><h4>Note</h4><p>It is only possible to connect <em>one</em> <a href=\"group__sensor__mpl115a2.html#ga8239c08a23b7f1654171d2e4aecfd3dc\" class=\"m-doc\">MPL115A2</a> at a time on a single I2C bus. Software I2C is also not supported.</p></aside>",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "theI2C",
            "type": "TwoWire*",
            "type_name": "TwoWire* theI2C",
            "default": null,
            "description": "A TwoWire instance for I2C communication. Due to the limitations of the Arduino core, only a hardware I2C instance can be used. For an AVR board, there is only one I2C instance possible and this form of the constructor should not be used. For a SAMD board, this can be used if a secondary I2C port is created on one of the extra SERCOMs.",
            "direction": ""
          },
          {
            "name": "powerPin",
            "type": "int8_t",
            "type_name": "int8_t powerPin",
            "default": null,
            "description": "<p>The pin on the mcu controlling power to the <a href=\"group__sensor__mpl115a2.html#ga8239c08a23b7f1654171d2e4aecfd3dc\" class=\"m-doc\">MPL115A2</a> Use -1 if it is continuously powered.</p><ul><li>The <a href=\"group__sensor__mpl115a2.html#ga8239c08a23b7f1654171d2e4aecfd3dc\" class=\"m-doc\">MPL115A2</a> requires a 2.375 - 5.5V power source</li></ul>",
            "direction": ""
          },
          {
            "name": "measurementsToAverage",
            "type": "uint8_t",
            "type_name": "uint8_t measurementsToAverage",
            "default": "1",
            "description": "The number of measurements to take and average before giving a &quot;final&quot; result from the sensor; optional with a default value of 1.",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_freescale_m_p_l115_a2.html",
        "id": "ab5651d8347d3b464183fc1bce41b16c7",
        "include": null,
        "has_details": true,
        "type": "",
        "name": "FreescaleMPL115A2",
        "brief": "Construct a new <a href=\"class_freescale_m_p_l115_a2.html\" class=\"m-doc\">FreescaleMPL115A2</a> using the primary hardware I2C instance.",
        "description": "<aside class=\"m-note m-info\"><h4>Note</h4><p>It is only possible to connect <em>one</em> <a href=\"group__sensor__mpl115a2.html#ga8239c08a23b7f1654171d2e4aecfd3dc\" class=\"m-doc\">MPL115A2</a> at a time on a single I2C bus. Software I2C is also not supported.</p></aside>",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": true,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "powerPin",
            "type": "int8_t",
            "type_name": "int8_t powerPin",
            "default": null,
            "description": "<p>The pin on the mcu controlling power to the <a href=\"group__sensor__mpl115a2.html#ga8239c08a23b7f1654171d2e4aecfd3dc\" class=\"m-doc\">MPL115A2</a> Use -1 if it is continuously powered.</p><ul><li>The <a href=\"group__sensor__mpl115a2.html#ga8239c08a23b7f1654171d2e4aecfd3dc\" class=\"m-doc\">MPL115A2</a> requires a 2.375 - 5.5V power source</li></ul>",
            "direction": ""
          },
          {
            "name": "measurementsToAverage",
            "type": "uint8_t",
            "type_name": "uint8_t measurementsToAverage",
            "default": "1",
            "description": "The number of measurements to take and average before giving a &quot;final&quot; result from the sensor; optional with a default value of 1.",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_freescale_m_p_l115_a2.html",
        "id": "a7ccf5c778123e1f37d157c50c0268f8a",
        "include": null,
        "has_details": false,
        "type": "",
        "name": "~FreescaleMPL115A2",
        "brief": "Destroy the <a href=\"class_freescale_m_p_l115_a2.html\" class=\"m-doc\">FreescaleMPL115A2</a> object.",
        "description": "",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": []
      }
    ],
    "public_funcs": [
      {
        "base_url": "class_freescale_m_p_l115_a2.html",
        "id": "afe99681272438f2a57ca95dda0259d5c",
        "include": null,
        "has_details": true,
        "type": "bool",
        "name": "setup",
        "brief": "Do any one-time preparations needed before the sensor will be able to take readings.",
        "description": "<p>This begins the Wire library (sets pin modes for I2C), reads coefficients from the <a href=\"group__sensor__mpl115a2.html#ga8239c08a23b7f1654171d2e4aecfd3dc\" class=\"m-doc\">MPL115A2</a>, and updates the <a href=\"class_sensor.html#a1fde72c3ddd07d892dcbfe4a09bcae49\" class=\"m-doc\">_<wbr />sensorStatus</a>. The sensor must be powered for setup. This doesn&#x27;t return anything to indicate failure or success, we just have to hope it worked.</p>",
        "return_value": "True if the setup was successful.",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": true,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": true,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": [
          {
            "name": "",
            "type": "void",
            "type_name": "void",
            "default": null,
            "description": "",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_freescale_m_p_l115_a2.html",
        "id": "a3a4f46301d770473dfd5fb79ee6ec094",
        "include": null,
        "has_details": true,
        "type": "String",
        "name": "getSensorLocation",
        "brief": "Get the pin or connection location between the mcu and the sensor.",
        "description": "<aside class=\"m-note m-info\"><h4>Note</h4><p>This is NOT the position of the sensor in the environment, merely how it is attached to the mcu.</p></aside>",
        "return_value": "Text describing how the sensor is attached to the mcu.",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": true,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": true,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": [
          {
            "name": "",
            "type": "void",
            "type_name": "void",
            "default": null,
            "description": "",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_freescale_m_p_l115_a2.html",
        "id": "a4369a091738fc2c6944e8eb4de0ca200",
        "include": null,
        "has_details": true,
        "type": "bool",
        "name": "addSingleMeasurementResult",
        "brief": "Get the results from a single measurement.",
        "description": "<p>This asks the sensor for a new result, verifies that it passes sanity range checks, and then adds the value to the result array.</p><p>This also un-sets the <a href=\"class_sensor.html#a4853c30b71ad2efc09bd6f73530155e3\" class=\"m-doc\">_<wbr />millisMeasurementRequested</a> timestamp (sets <a href=\"class_sensor.html#a4853c30b71ad2efc09bd6f73530155e3\" class=\"m-doc\">_<wbr />millisMeasurementRequested</a> to 0) and updates the <a href=\"class_sensor.html#a1fde72c3ddd07d892dcbfe4a09bcae49\" class=\"m-doc\">_<wbr />sensorStatus</a>.</p><aside class=\"m-note m-info\"><h4>Note</h4><p>This function does NOT include any waiting for the sensor complete a measurement.</p></aside>",
        "return_value": "True if the function completed successfully.",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": true,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": true,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": [
          {
            "name": "",
            "type": "void",
            "type_name": "void",
            "default": null,
            "description": "",
            "direction": ""
          }
        ]
      }
    ],
    "signals": [],
    "public_slots": [],
    "public_static_vars": [],
    "public_vars": [],
    "protected_types": [],
    "protected_static_funcs": [],
    "protected_funcs": [],
    "protected_slots": [],
    "protected_static_vars": [],
    "protected_vars": [],
    "private_funcs": [],
    "private_slots": [],
    "related": [],
    "friend_funcs": [],
    "groups": [],
    "has_enum_details": false,
    "has_typedef_details": false,
    "has_func_details": true,
    "has_var_details": false,
    "has_define_details": false,
    "breadcrumb": [
      [
        "Sensor",
        "class_sensor.html"
      ],
      [
        "FreescaleMPL115A2",
        "class_freescale_m_p_l115_a2.html"
      ]
    ],
    "breadcrumbGroup": [
      [
        "Freescale Semiconductor MPL115A2",
        "group__sensor__mpl115a2.html"
      ],
      [
        "FreescaleMPL115A2",
        "class_freescale_m_p_l115_a2.html"
      ]
    ],
    "is_final": false,
    "prefix_wbr": "FreescaleMPL115A2::<wbr />"
  }
}