{
  "version": "1.14.0",
  "compound": {
    "kind": "class",
    "id": "classdata_publisher",
    "name": "dataPublisher",
    "url_base": "classdata_publisher",
    "url": "classdata_publisher.html",
    "include": [
      "&lt;src/dataPublisherBase.h&gt;",
      "data_publisher_base_8h.html"
    ],
    "has_template_details": false,
    "templates": null,
    "brief": "The <a href=\"classdata_publisher.html\" class=\"m-doc\">dataPublisher</a> class is a virtual class used by other publishers to distribute data online.",
    "description": "<p>A <a href=\"classdata_publisher.html\" class=\"m-doc\">dataPublisher</a> is a abstract concept. It is something that &quot;watches&quot; the logger for new data and correctly formats and sends that data to some online web service.</p>",
    "sections": "",
    "deprecated": null,
    "since": null,
    "example_navigation": null,
    "footer_navigation": null,
    "topics": [],
    "dirs": [],
    "files": [],
    "namespaces": [],
    "classes": [],
    "base_classes": [],
    "derived_classes": [
      {
        "kind": "class",
        "url": "class_a_w_s___io_t___publisher.html",
        "name": "AWS_IoT_Publisher",
        "brief": "The <a href=\"class_a_w_s___io_t___publisher.html\" class=\"m-doc\">AWS_<wbr />IoT_<wbr />Publisher</a> subclass of <a href=\"classdata_publisher.html\" class=\"m-doc\">dataPublisher</a> for publishing data to AWS IoT Core using the MQTT protocol.",
        "templates": null,
        "deprecated": null,
        "since": null,
        "is_virtual": false,
        "is_final": false
      },
      {
        "kind": "class",
        "url": "class_dream_host_publisher.html",
        "name": "DreamHostPublisher",
        "brief": "The <a href=\"class_dream_host_publisher.html\" class=\"m-doc\">DreamHostPublisher</a> subclass of <a href=\"classdata_publisher.html\" class=\"m-doc\">dataPublisher</a> is for publishing data to the Stroud Center&#x27;s now-deprecated DreamHost based live sensor data system.",
        "templates": null,
        "deprecated": null,
        "since": null,
        "is_virtual": false,
        "is_final": false
      },
      {
        "kind": "class",
        "url": "class_enviro_d_i_y_publisher.html",
        "name": "EnviroDIYPublisher",
        "brief": "The <a href=\"class_enviro_d_i_y_publisher.html\" class=\"m-doc\">EnviroDIYPublisher</a> subclass of <a href=\"classdata_publisher.html\" class=\"m-doc\">dataPublisher</a> for publishing data to the Monitor My Watershed/EnviroDIY data portal at <a href=\"https://monitormywatershed.org/\">https:/<wbr />/<wbr />monitormywatershed.org/<wbr /></a> (formerly at <a href=\"http://data.enviroDIY.org\">http:/<wbr />/<wbr />data.enviroDIY.org</a>).",
        "templates": null,
        "deprecated": null,
        "since": null,
        "is_virtual": false,
        "is_final": false
      },
      {
        "kind": "class",
        "url": "class_s3_presigned_publisher.html",
        "name": "S3PresignedPublisher",
        "brief": "The <a href=\"class_s3_presigned_publisher.html\" class=\"m-doc\">S3PresignedPublisher</a> subclass of <a href=\"classdata_publisher.html\" class=\"m-doc\">dataPublisher</a> is for publishing data to S3 over a pre-signed URL.",
        "templates": null,
        "deprecated": null,
        "since": null,
        "is_virtual": false,
        "is_final": false
      },
      {
        "kind": "class",
        "url": "class_thing_speak_publisher.html",
        "name": "ThingSpeakPublisher",
        "brief": "The <a href=\"class_thing_speak_publisher.html\" class=\"m-doc\">ThingSpeakPublisher</a> subclass of <a href=\"classdata_publisher.html\" class=\"m-doc\">dataPublisher</a> for publishing data to ThingSpeak using the MQTT protocol.",
        "templates": null,
        "deprecated": null,
        "since": null,
        "is_virtual": false,
        "is_final": false
      },
      {
        "kind": "class",
        "url": "class_ubidots_publisher.html",
        "name": "UbidotsPublisher",
        "brief": "The <a href=\"class_ubidots_publisher.html\" class=\"m-doc\">UbidotsPublisher</a> subclass of <a href=\"classdata_publisher.html\" class=\"m-doc\">dataPublisher</a> for publishing data to the Ubidots data portal at <a href=\"https://ubidots.com\">https:/<wbr />/<wbr />ubidots.com</a>.",
        "templates": null,
        "deprecated": null,
        "since": null,
        "is_virtual": false,
        "is_final": false
      }
    ],
    "enums": [],
    "typedefs": [],
    "funcs": [],
    "vars": [],
    "defines": [],
    "public_types": [],
    "public_static_funcs": [],
    "typeless_funcs": [
      {
        "base_url": "classdata_publisher.html",
        "id": "a1ad107dcadb503ab83dad53a4f197188",
        "include": null,
        "has_details": true,
        "type": "",
        "name": "dataPublisher",
        "brief": "Construct a new data publisher object untied to any logger or client.",
        "description": "<aside class=\"m-note m-info\"><h4>Note</h4><p>Using the default empty constructor requires you to use a the <a href=\"#ad67778bc826660bc7c67da515b8a449e\" class=\"m-doc\">begin(Logger&amp; baseLogger, Client* inClient)</a> function to initialize the logger and client values. If a client is never specified, the publisher will attempt to create and use a client on a LoggerModem instance tied to the attached logger. If a logger is never specified the publisher will not function.</p></aside>",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": []
      },
      {
        "base_url": "classdata_publisher.html",
        "id": "ac4dbe63c7423a23da387804d4a05d795",
        "include": null,
        "has_details": true,
        "type": "",
        "name": "dataPublisher",
        "brief": "Construct a new data publisher object using a single client created on the TinyGSM based logger modem.",
        "description": "<aside class=\"m-note m-info\"><h4>Note</h4><p>If a client is never specified, the publisher will attempt to create and use a client on a LoggerModem instance tied to the attached logger.</p></aside>",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": true,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "baseLogger",
            "type": "<a href=\"class_logger.html\" class=\"m-doc\">Logger</a>&amp;",
            "type_name": "<a href=\"class_logger.html\" class=\"m-doc\">Logger</a>&amp; baseLogger",
            "default": null,
            "description": "The logger supplying the data to be published",
            "direction": ""
          },
          {
            "name": "sendEveryX",
            "type": "int",
            "type_name": "int sendEveryX",
            "default": "1",
            "description": "Interval (in units of the logging interval) between attempted data transmissions. Not respected by all publishers.",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "classdata_publisher.html",
        "id": "a8f288cdcdcd279ba5817c4db15644a93",
        "include": null,
        "has_details": true,
        "type": "",
        "name": "dataPublisher",
        "brief": "Construct a new data publisher object.",
        "description": "<aside class=\"m-note m-info\"><h4>Note</h4><p>When creating a data publisher with a pre-existing client object, you must ensure that your client supports SSL/TLS if the publisher requires it.</p></aside>",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "baseLogger",
            "type": "<a href=\"class_logger.html\" class=\"m-doc\">Logger</a>&amp;",
            "type_name": "<a href=\"class_logger.html\" class=\"m-doc\">Logger</a>&amp; baseLogger",
            "default": null,
            "description": "The logger supplying the data to be published",
            "direction": ""
          },
          {
            "name": "inClient",
            "type": "Client*",
            "type_name": "Client* inClient",
            "default": null,
            "description": "An Arduino client instance to use to print data to. Allows the use of any type of client and multiple clients tied to a single TinyGSM modem instance",
            "direction": ""
          },
          {
            "name": "sendEveryX",
            "type": "int",
            "type_name": "int sendEveryX",
            "default": "1",
            "description": "Interval (in units of the logging interval) between attempted data transmissions. Not respected by all publishers.",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "classdata_publisher.html",
        "id": "acded3c78f9a6e91681eb50215c43aaef",
        "include": null,
        "has_details": false,
        "type": "",
        "name": "~dataPublisher",
        "brief": "Destroy the data publisher object - no action is taken.",
        "description": "",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": true,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": []
      }
    ],
    "public_funcs": [
      {
        "base_url": "classdata_publisher.html",
        "id": "a942b9ced747f7f351f853b503cbf5fc0",
        "include": null,
        "has_details": true,
        "type": "void",
        "name": "setClient",
        "brief": "Set the Client object.",
        "description": "<p>Gives the publisher a client instance to use to &quot;print&quot; data.</p><aside class=\"m-note m-info\"><h4>Note</h4><p>This can be used to set a client that is not tied to a logger modem or to TinyGSM!</p></aside>",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "inClient",
            "type": "Client*",
            "type_name": "Client* inClient",
            "default": null,
            "description": "A pointer to an Arduino client instance",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "classdata_publisher.html",
        "id": "a01d9795f4c55929f1e1c959793bfccb4",
        "include": null,
        "has_details": true,
        "type": "void",
        "name": "setSendInterval",
        "brief": "Sets the interval (in units of the logging interval) between attempted data transmissions.",
        "description": "",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "sendEveryX",
            "type": "int",
            "type_name": "int sendEveryX",
            "default": null,
            "description": "Interval (in units of the logging interval) between attempted data transmissions. Not respected by all publishers.",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "classdata_publisher.html",
        "id": "a2c9837dfda40b50d3fd9ec5b1b53c8ab",
        "include": null,
        "has_details": true,
        "type": "void",
        "name": "attachToLogger",
        "brief": "Attach the publisher to a logger.",
        "description": "<p>The publisher must be tied to a data logger to provide it with the data to be published.</p>",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "baseLogger",
            "type": "<a href=\"class_logger.html\" class=\"m-doc\">Logger</a>&amp;",
            "type_name": "<a href=\"class_logger.html\" class=\"m-doc\">Logger</a>&amp; baseLogger",
            "default": null,
            "description": "A reference to the ModularSensors logger instance",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "classdata_publisher.html",
        "id": "a79b724c335e949fbb56adf8379130a68",
        "include": null,
        "has_details": true,
        "type": "void",
        "name": "setModemPointer",
        "brief": "Set the pointer to a <a href=\"classlogger_modem.html\" class=\"m-doc\">loggerModem</a> instance.",
        "description": "",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "modemPointer",
            "type": "<a href=\"classlogger_modem.html\" class=\"m-doc\">loggerModem</a>&amp;",
            "type_name": "<a href=\"classlogger_modem.html\" class=\"m-doc\">loggerModem</a>&amp; modemPointer",
            "default": null,
            "description": "A reference to the ModularSensors <a href=\"classlogger_modem.html\" class=\"m-doc\">loggerModem</a> instance",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "classdata_publisher.html",
        "id": "ad67778bc826660bc7c67da515b8a449e",
        "include": null,
        "has_details": true,
        "type": "void",
        "name": "begin",
        "brief": "Begin the publisher - linking it to the client and logger.",
        "description": "<p>This can be used as an alternative to adding the logger and client in the constructor.</p>",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "baseLogger",
            "type": "<a href=\"class_logger.html\" class=\"m-doc\">Logger</a>&amp;",
            "type_name": "<a href=\"class_logger.html\" class=\"m-doc\">Logger</a>&amp; baseLogger",
            "default": null,
            "description": "The logger supplying the data to be published",
            "direction": ""
          },
          {
            "name": "inClient",
            "type": "Client*",
            "type_name": "Client* inClient",
            "default": null,
            "description": "An Arduino client instance to use to print data to. Allows the use of any type of client and multiple clients tied to a single TinyGSM modem instance",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "classdata_publisher.html",
        "id": "a0f999c8092b201f3222aebff8883e2f9",
        "include": null,
        "has_details": true,
        "type": "void",
        "name": "begin",
        "brief": "Begin the publisher - linking it to the logger but not attaching a client.",
        "description": "<aside class=\"m-note m-info\"><h4>Note</h4><p>If a client is never specified, the publisher will attempt to create and use a client on a LoggerModem instance tied to the attached logger.</p></aside><p>This can be used as an alternative to adding the logger and client in the constructor.</p>",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "baseLogger",
            "type": "<a href=\"class_logger.html\" class=\"m-doc\">Logger</a>&amp;",
            "type_name": "<a href=\"class_logger.html\" class=\"m-doc\">Logger</a>&amp; baseLogger",
            "default": null,
            "description": "The logger supplying the data to be published",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "classdata_publisher.html",
        "id": "a7151f0ae85bd0c9c456144beccd7046a",
        "include": null,
        "has_details": true,
        "type": "String",
        "name": "getEndpoint",
        "brief": "Get the destination for published data - generally the host name of the data receiver.",
        "description": "",
        "return_value": "The URL or HOST to receive published data",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": true,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": true,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": [
          {
            "name": "",
            "type": "void",
            "type_name": "void",
            "default": null,
            "description": "",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "classdata_publisher.html",
        "id": "a045bf9bf8e9b009007559a58b3203559",
        "include": null,
        "has_details": true,
        "type": "bool",
        "name": "connectionNeeded",
        "brief": "Checks if the publisher needs an internet connection for the next publishData call (as opposed to just buffering data internally).",
        "description": "",
        "return_value": "True if an internet connection is needed for the next publish.",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": true,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": [
          {
            "name": "",
            "type": "void",
            "type_name": "void",
            "default": null,
            "description": "",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "classdata_publisher.html",
        "id": "a8773d7757ac6cb3510a03072a0e70e8c",
        "include": null,
        "has_details": true,
        "type": "int16_t",
        "name": "publishData",
        "brief": "Opens a socket to the correct receiver and sends out the formatted data.",
        "description": "<p>This depends on an internet connection already having been made and a client being available.</p>",
        "return_value": "The result of publishing data. May be an http response code or a result code from PubSubClient.",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": true,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": true,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "outClient",
            "type": "Client*",
            "type_name": "Client* outClient",
            "default": null,
            "description": "An Arduino client instance to use to print data to. Allows the use of any type of client and multiple clients tied to a single TinyGSM modem instance",
            "direction": ""
          },
          {
            "name": "forceFlush",
            "type": "bool",
            "type_name": "bool forceFlush",
            "default": "false",
            "description": "Ask the publisher to flush buffered data immediately.",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "classdata_publisher.html",
        "id": "a45d202b8a4fe65b5996d1d418001615b",
        "include": null,
        "has_details": true,
        "type": "int16_t",
        "name": "publishData",
        "brief": "Open a socket to the correct receiver and send out the formatted data.",
        "description": "<p>This depends on an internet connection already having been made and either a client having been linked to the publisher or a logger modem having been linked to the logger linked to the publisher.</p>",
        "return_value": "The result of publishing data. May be an http response code or a result code from PubSubClient. Defaults to -2 if the publisher fails to create a client.",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": true,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "forceFlush",
            "type": "bool",
            "type_name": "bool forceFlush",
            "default": "false",
            "description": "Ask the publisher to flush buffered data immediately.",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "classdata_publisher.html",
        "id": "a48c613c9c582bd9b9c112d5d4bc2da4e",
        "include": null,
        "has_details": true,
        "type": "int16_t",
        "name": "publishMetadata",
        "brief": "Open a socket to the correct receiver and send out <em>metadata</em> about the current logger setup.",
        "description": "<p>This is to be used only when the logger is starting up! As the metadata doesn&#x27;t generally change after start up, there&#x27;s no reason to call this function any other time. There is no sensor data included in this metadata! If there is metadata that has to be included with each data post, that should be included in the publishData function. Because there is no sensor data included in this metadata and it&#x27;s only to be called at boot, there&#x27;s no <code>forceFlush</code> option for this function.</p><p>This depends on an internet connection already having been made and a client being available.</p><aside class=\"m-note m-info\"><h4>Note</h4><p>This does <em>not</em> have to be implemented for each publisher! If it is not implemented, it will return 0.</p></aside>",
        "return_value": "The result of publishing data. May be an http response code or a result code from PubSubClient.",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": true,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "outClient",
            "type": "Client*",
            "type_name": "Client* outClient",
            "default": null,
            "description": "An Arduino client instance to use to print data to. Allows the use of any type of client and multiple clients tied to a single TinyGSM modem instance",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "classdata_publisher.html",
        "id": "a8817f8f9d60cd35569dab48f5dc4dd28",
        "include": null,
        "has_details": true,
        "type": "int16_t",
        "name": "publishMetadata",
        "brief": "Open a socket to the correct receiver and send out <em>metadata</em> about the current logger setup.",
        "description": "<p>This is to be used only when the logger is starting up! As the metadata doesn&#x27;t generally change after start up, there&#x27;s no reason to call this function any other time. There is no sensor data included in this metadata! If there is metadata that has to be included with each data post, that should be included in the publishData function. Because there is no sensor data included in this metadata and it&#x27;s only to be called at boot, there&#x27;s no <code>forceFlush</code> option for this function.</p><p>This depends on an internet connection already having been made and a client being available.</p><aside class=\"m-note m-info\"><h4>Note</h4><p>This does <em>not</em> have to be implemented for each publisher! If it is not implemented, it will return 0.</p></aside>",
        "return_value": "The result of publishing data. May be an http response code or a result code from PubSubClient.",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": true,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": []
      },
      {
        "base_url": "classdata_publisher.html",
        "id": "a176a2ecb3c3062cb20a509d5606f48d4",
        "include": null,
        "has_details": true,
        "type": "int16_t",
        "name": "sendData",
        "brief": "Retained for backwards compatibility; use publishData(Client*\noutClient) in new code.",
        "description": "<aside class=\"m-note m-danger\"><h4><a href=\"deprecated.html#_deprecated000001\" class=\"m-doc\">Deprecated in v0.22.5</a></h4></aside>",
        "return_value": "The result of publishing data. May be an http response code or a result code from PubSubClient.",
        "return_values": [],
        "exceptions": [],
        "deprecated": "deprecated in v0.22.5",
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": true,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "outClient",
            "type": "Client*",
            "type_name": "Client* outClient",
            "default": null,
            "description": "An Arduino client instance to use to print data to. Allows the use of any type of client and multiple clients tied to a single TinyGSM modem instance",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "classdata_publisher.html",
        "id": "acf08fe6a045e797e00fdcf593289e782",
        "include": null,
        "has_details": true,
        "type": "int16_t",
        "name": "sendData",
        "brief": "Retained for backwards compatibility; use <a href=\"#a8773d7757ac6cb3510a03072a0e70e8c\" class=\"m-doc\">publishData()</a> in new code.",
        "description": "<aside class=\"m-note m-danger\"><h4><a href=\"deprecated.html#_deprecated000002\" class=\"m-doc\">Deprecated in v0.22.5</a></h4></aside>",
        "return_value": "The result of publishing data. May be an http response code or a result code from PubSubClient.",
        "return_values": [],
        "exceptions": [],
        "deprecated": "deprecated in v0.22.5",
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": true,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": []
      },
      {
        "base_url": "classdata_publisher.html",
        "id": "a8aa172930258b75bcb24cc40e2f3dae7",
        "include": null,
        "has_details": true,
        "type": "String",
        "name": "parseMQTTState",
        "brief": "Translate a PubSubClient code into a String with the code explanation.",
        "description": "",
        "return_value": "The meaning of the code",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "state",
            "type": "int",
            "type_name": "int state",
            "default": null,
            "description": "A result code returned by a PubSubClient action",
            "direction": ""
          }
        ]
      }
    ],
    "signals": [],
    "public_slots": [],
    "public_static_vars": [],
    "public_vars": [],
    "protected_types": [],
    "protected_static_funcs": [
      {
        "base_url": "classdata_publisher.html",
        "id": "a981315f653a0ca03e0fa6e3053932f38",
        "include": null,
        "has_details": true,
        "type": "void",
        "name": "txBufferInit",
        "brief": "Initialize the TX buffer to be empty and start writing to the given client.",
        "description": "",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "static ",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": true,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "outClient",
            "type": "Client*",
            "type_name": "Client* outClient",
            "default": null,
            "description": "The client to transmit to.",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "classdata_publisher.html",
        "id": "afbb3115185268a7d9d78eb14b01043f7",
        "include": null,
        "has_details": true,
        "type": "void",
        "name": "txBufferAppend",
        "brief": "Append the given data to the TX buffer, flushing if necessary.",
        "description": "",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "static ",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": true,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "data",
            "type": "const char*",
            "type_name": "const char* data",
            "default": null,
            "description": "The data start pointer.",
            "direction": ""
          },
          {
            "name": "length",
            "type": "size_t",
            "type_name": "size_t length",
            "default": null,
            "description": "The number of bytes to add.",
            "direction": ""
          },
          {
            "name": "debug_flush",
            "type": "bool",
            "type_name": "bool debug_flush",
            "default": "true",
            "description": "If true, flush the TX buffer to the debugging port.",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "classdata_publisher.html",
        "id": "aa8d9fa145742cbaa2e804ca602c239aa",
        "include": null,
        "has_details": true,
        "type": "void",
        "name": "txBufferAppend",
        "brief": "Append the given string to the TX buffer, flushing if necessary.",
        "description": "",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "static ",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": true,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "s",
            "type": "const char*",
            "type_name": "const char* s",
            "default": null,
            "description": "The null-terminated string to append.",
            "direction": ""
          },
          {
            "name": "debug_flush",
            "type": "bool",
            "type_name": "bool debug_flush",
            "default": "true",
            "description": "If true, flush the TX buffer to the debugging port.",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "classdata_publisher.html",
        "id": "a912730524a491b3c89b3bc0c4c1213c9",
        "include": null,
        "has_details": true,
        "type": "void",
        "name": "txBufferAppend",
        "brief": "Append the given char to the TX buffer, flushing if necessary.",
        "description": "",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "static ",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": true,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "c",
            "type": "char",
            "type_name": "char c",
            "default": null,
            "description": "The char to append.",
            "direction": ""
          },
          {
            "name": "debug_flush",
            "type": "bool",
            "type_name": "bool debug_flush",
            "default": "true",
            "description": "If true, flush the TX buffer to the debugging port.",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "classdata_publisher.html",
        "id": "a7117569919a8514ac8edda5abe847ad2",
        "include": null,
        "has_details": true,
        "type": "void",
        "name": "txBufferFlush",
        "brief": "Write the TX buffer contents to the initialized stream and also to the debugging port.",
        "description": "",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "static ",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": true,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "debug_flush",
            "type": "bool",
            "type_name": "bool debug_flush",
            "default": "true",
            "description": "If true, flush the TX buffer to the debugging port.",
            "direction": ""
          }
        ]
      }
    ],
    "protected_funcs": [
      {
        "base_url": "classdata_publisher.html",
        "id": "afe9dddc69872eb37603efbd48344aa47",
        "include": null,
        "has_details": true,
        "type": "Client*",
        "name": "createClient",
        "brief": "Use the connected base logger&#x27;s logger modem and underlying TinyGSM instance to create a new client for the publisher.",
        "description": "<aside class=\"m-note m-info\"><h4>Note</h4><p>This does <em>NOT</em> override any client set by the constructor/begin/setClient functions. If you set an external client by any of those methods, this function should not be called. It is protected to prevent being called by external code.</p><p>The default implementation of this function creates an insecure client. Publishers that require SSL must re-implement this function.</p></aside>",
        "return_value": "A pointer to an Arduino client instance",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": true,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": true,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": []
      },
      {
        "base_url": "classdata_publisher.html",
        "id": "ae666fd6dba05644b07b24bbf04b99ad0",
        "include": null,
        "has_details": true,
        "type": "void",
        "name": "deleteClient",
        "brief": "Delete a created client. We need to pass this through to avoid a memory leak because we cannot delete from the pointer because the destructor for a client in the Arduino core isn&#x27;t virtual.",
        "description": "",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": true,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": true,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "client",
            "type": "Client*",
            "type_name": "Client* client",
            "default": null,
            "description": "The client to delete",
            "direction": ""
          }
        ]
      }
    ],
    "protected_slots": [],
    "protected_static_vars": [
      {
        "base_url": "classdata_publisher.html",
        "id": "a7eed4c2483c67bd63d4ce246e907a503",
        "include": null,
        "has_details": false,
        "type": "char",
        "is_constexpr": false,
        "is_static": true,
        "is_protected": true,
        "is_private": false,
        "name": "txBuffer",
        "brief": "The buffer for outgoing data.",
        "description": "",
        "deprecated": null,
        "since": null,
        "has_template_details": false,
        "templates": null
      },
      {
        "base_url": "classdata_publisher.html",
        "id": "acc4d9b7ab5134a2373fe315c43a2c1a8",
        "include": null,
        "has_details": false,
        "type": "Client*",
        "is_constexpr": false,
        "is_static": true,
        "is_protected": true,
        "is_private": false,
        "name": "txBufferOutClient",
        "brief": "The pointer to the client instance the TX buffer is writing to.",
        "description": "",
        "deprecated": null,
        "since": null,
        "has_template_details": false,
        "templates": null
      },
      {
        "base_url": "classdata_publisher.html",
        "id": "a53d08ce2ba51bb6b8c3e9cceb136eef2",
        "include": null,
        "has_details": false,
        "type": "size_t",
        "is_constexpr": false,
        "is_static": true,
        "is_protected": true,
        "is_private": false,
        "name": "txBufferLen",
        "brief": "The number of used characters in the TX buffer.",
        "description": "",
        "deprecated": null,
        "since": null,
        "has_template_details": false,
        "templates": null
      },
      {
        "base_url": "classdata_publisher.html",
        "id": "a4f3e4e3938ed90f40360ff3bf5ab3f40",
        "include": null,
        "has_details": false,
        "type": "const char*",
        "is_constexpr": false,
        "is_static": true,
        "is_protected": true,
        "is_private": false,
        "name": "getHeader",
        "brief": "the text &quot;GET &quot;",
        "description": "",
        "deprecated": null,
        "since": null,
        "has_template_details": false,
        "templates": null
      },
      {
        "base_url": "classdata_publisher.html",
        "id": "a34e6f3c2d7d2e1ff0c3265779b4d5674",
        "include": null,
        "has_details": false,
        "type": "const char*",
        "is_constexpr": false,
        "is_static": true,
        "is_protected": true,
        "is_private": false,
        "name": "postHeader",
        "brief": "the text &quot;POST &quot;",
        "description": "",
        "deprecated": null,
        "since": null,
        "has_template_details": false,
        "templates": null
      },
      {
        "base_url": "classdata_publisher.html",
        "id": "a9d3f1328571dc6c214b719321f7869cd",
        "include": null,
        "has_details": false,
        "type": "const char*",
        "is_constexpr": false,
        "is_static": true,
        "is_protected": true,
        "is_private": false,
        "name": "putHeader",
        "brief": "the text &quot;PUT &quot;",
        "description": "",
        "deprecated": null,
        "since": null,
        "has_template_details": false,
        "templates": null
      },
      {
        "base_url": "classdata_publisher.html",
        "id": "a75d803ef60f7cd84b561455e729b3dee",
        "include": null,
        "has_details": false,
        "type": "const char*",
        "is_constexpr": false,
        "is_static": true,
        "is_protected": true,
        "is_private": false,
        "name": "HTTPtag",
        "brief": "the text &quot; HTTP/1.1&quot;",
        "description": "",
        "deprecated": null,
        "since": null,
        "has_template_details": false,
        "templates": null
      },
      {
        "base_url": "classdata_publisher.html",
        "id": "a6b7d135150c32e058e38b4375ad4ea55",
        "include": null,
        "has_details": false,
        "type": "const char*",
        "is_constexpr": false,
        "is_static": true,
        "is_protected": true,
        "is_private": false,
        "name": "hostHeader",
        "brief": "the text &quot;\\r\\nHost: &quot;",
        "description": "",
        "deprecated": null,
        "since": null,
        "has_template_details": false,
        "templates": null
      }
    ],
    "protected_vars": [
      {
        "base_url": "classdata_publisher.html",
        "id": "aa05b7eaa700043ef559b86fe66e24909",
        "include": null,
        "has_details": false,
        "type": "<a href=\"class_logger.html\" class=\"m-doc\">Logger</a>*",
        "is_constexpr": false,
        "is_static": false,
        "is_protected": true,
        "is_private": false,
        "name": "_baseLogger",
        "brief": "The internal pointer to the logger instance to be used.",
        "description": "",
        "deprecated": null,
        "since": null,
        "has_template_details": false,
        "templates": null
      },
      {
        "base_url": "classdata_publisher.html",
        "id": "ad3f1dc4117348d0c9cc0dd9e94584418",
        "include": null,
        "has_details": false,
        "type": "<a href=\"classlogger_modem.html\" class=\"m-doc\">loggerModem</a>*",
        "is_constexpr": false,
        "is_static": false,
        "is_protected": true,
        "is_private": false,
        "name": "_baseModem",
        "brief": "The internal pointer to the base logger&#x27;s modem instance to be used.",
        "description": "",
        "deprecated": null,
        "since": null,
        "has_template_details": false,
        "templates": null
      },
      {
        "base_url": "classdata_publisher.html",
        "id": "a9bde77730ea8e2bccec973b76d10e8ad",
        "include": null,
        "has_details": false,
        "type": "Client*",
        "is_constexpr": false,
        "is_static": false,
        "is_protected": true,
        "is_private": false,
        "name": "_inClient",
        "brief": "The internal pointer to the client instance to be used.",
        "description": "",
        "deprecated": null,
        "since": null,
        "has_template_details": false,
        "templates": null
      },
      {
        "base_url": "classdata_publisher.html",
        "id": "ac3bd9a04525ca9519ca1b45c0d34833a",
        "include": null,
        "has_details": false,
        "type": "int",
        "is_constexpr": false,
        "is_static": false,
        "is_protected": true,
        "is_private": false,
        "name": "_sendEveryX",
        "brief": "Interval (in units of the logging interval) between attempted data transmissions. Not respected by all publishers.",
        "description": "",
        "deprecated": null,
        "since": null,
        "has_template_details": false,
        "templates": null
      }
    ],
    "private_funcs": [],
    "private_slots": [],
    "related": [],
    "friend_funcs": [],
    "groups": [],
    "has_enum_details": false,
    "has_typedef_details": false,
    "has_func_details": true,
    "has_var_details": false,
    "has_define_details": false,
    "breadcrumb": [
      [
        "dataPublisher",
        "classdata_publisher.html"
      ]
    ],
    "breadcrumbGroup": [
      [
        "Primary Object Classes",
        "group__base__classes.html"
      ],
      [
        "dataPublisher",
        "classdata_publisher.html"
      ]
    ],
    "is_final": false,
    "prefix_wbr": "dataPublisher::<wbr />"
  }
}